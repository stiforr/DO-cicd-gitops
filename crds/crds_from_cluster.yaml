apiVersion: v1
items:
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2021-12-07T20:55:41Z"
    generation: 1
    labels:
      app.kubernetes.io/name: applications.argoproj.io
      app.kubernetes.io/part-of: argocd
    name: applications.argoproj.io
    resourceVersion: "2730267"
    uid: a9c91a5e-bc67-40a2-b66c-2283479cb2b5
  spec:
    conversion:
      strategy: None
    group: argoproj.io
    names:
      kind: Application
      listKind: ApplicationList
      plural: applications
      shortNames:
      - app
      - apps
      singular: application
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.sync.status
        name: Sync Status
        type: string
      - jsonPath: .status.health.status
        name: Health Status
        type: string
      - jsonPath: .status.sync.revision
        name: Revision
        priority: 10
        type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Application is a definition of Application resource.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            operation:
              description: Operation contains information about a requested or running
                operation
              properties:
                info:
                  description: Info is a list of informational items for this operation
                  items:
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
                initiatedBy:
                  description: InitiatedBy contains information about who initiated
                    the operations
                  properties:
                    automated:
                      description: Automated is set to true if operation was initiated
                        automatically by the application controller.
                      type: boolean
                    username:
                      description: Username contains the name of a user who started
                        operation
                      type: string
                  type: object
                retry:
                  description: Retry controls the strategy to apply if a sync fails
                  properties:
                    backoff:
                      description: Backoff controls how to backoff on subsequent retries
                        of failed syncs
                      properties:
                        duration:
                          description: Duration is the amount to back off. Default
                            unit is seconds, but could also be a duration (e.g. "2m",
                            "1h")
                          type: string
                        factor:
                          description: Factor is a factor to multiply the base duration
                            after each failed retry
                          format: int64
                          type: integer
                        maxDuration:
                          description: MaxDuration is the maximum amount of time allowed
                            for the backoff strategy
                          type: string
                      type: object
                    limit:
                      description: Limit is the maximum number of attempts for retrying
                        a failed sync. If set to 0, no retries will be performed.
                      format: int64
                      type: integer
                  type: object
                sync:
                  description: Sync contains parameters for the operation
                  properties:
                    dryRun:
                      description: DryRun specifies to perform a `kubectl apply --dry-run`
                        without actually performing the sync
                      type: boolean
                    manifests:
                      description: Manifests is an optional field that overrides sync
                        source with a local directory for development
                      items:
                        type: string
                      type: array
                    prune:
                      description: Prune specifies to delete resources from the cluster
                        that are no longer tracked in git
                      type: boolean
                    resources:
                      description: Resources describes which resources shall be part
                        of the sync
                      items:
                        description: SyncOperationResource contains resources to sync.
                        properties:
                          group:
                            type: string
                          kind:
                            type: string
                          name:
                            type: string
                          namespace:
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                      type: array
                    revision:
                      description: Revision is the revision (Git) or chart version
                        (Helm) which to sync the application to If omitted, will use
                        the revision specified in app spec.
                      type: string
                    source:
                      description: Source overrides the source definition set in the
                        application. This is typically set in a Rollback operation
                        and is nil during a Sync operation
                      properties:
                        chart:
                          description: Chart is a Helm chart name, and must be specified
                            for applications sourced from a Helm repo.
                          type: string
                        directory:
                          description: Directory holds path/directory specific options
                          properties:
                            exclude:
                              description: Exclude contains a glob pattern to match
                                paths against that should be explicitly excluded from
                                being used during manifest generation
                              type: string
                            include:
                              description: Include contains a glob pattern to match
                                paths against that should be explicitly included during
                                manifest generation
                              type: string
                            jsonnet:
                              description: Jsonnet holds options specific to Jsonnet
                              properties:
                                extVars:
                                  description: ExtVars is a list of Jsonnet External
                                    Variables
                                  items:
                                    description: JsonnetVar represents a variable
                                      to be passed to jsonnet during manifest generation
                                    properties:
                                      code:
                                        type: boolean
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                libs:
                                  description: Additional library search dirs
                                  items:
                                    type: string
                                  type: array
                                tlas:
                                  description: TLAS is a list of Jsonnet Top-level
                                    Arguments
                                  items:
                                    description: JsonnetVar represents a variable
                                      to be passed to jsonnet during manifest generation
                                    properties:
                                      code:
                                        type: boolean
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                              type: object
                            recurse:
                              description: Recurse specifies whether to scan a directory
                                recursively for manifests
                              type: boolean
                          type: object
                        helm:
                          description: Helm holds helm specific options
                          properties:
                            fileParameters:
                              description: FileParameters are file parameters to the
                                helm template
                              items:
                                description: HelmFileParameter is a file parameter
                                  that's passed to helm template during manifest generation
                                properties:
                                  name:
                                    description: Name is the name of the Helm parameter
                                    type: string
                                  path:
                                    description: Path is the path to the file containing
                                      the values for the Helm parameter
                                    type: string
                                type: object
                              type: array
                            parameters:
                              description: Parameters is a list of Helm parameters
                                which are passed to the helm template command upon
                                manifest generation
                              items:
                                description: HelmParameter is a parameter that's passed
                                  to helm template during manifest generation
                                properties:
                                  forceString:
                                    description: ForceString determines whether to
                                      tell Helm to interpret booleans and numbers
                                      as strings
                                    type: boolean
                                  name:
                                    description: Name is the name of the Helm parameter
                                    type: string
                                  value:
                                    description: Value is the value for the Helm parameter
                                    type: string
                                type: object
                              type: array
                            releaseName:
                              description: ReleaseName is the Helm release name to
                                use. If omitted it will use the application name
                              type: string
                            valueFiles:
                              description: ValuesFiles is a list of Helm value files
                                to use when generating a template
                              items:
                                type: string
                              type: array
                            values:
                              description: Values specifies Helm values to be passed
                                to helm template, typically defined as a block
                              type: string
                            version:
                              description: Version is the Helm version to use for
                                templating (either "2" or "3")
                              type: string
                          type: object
                        ksonnet:
                          description: Ksonnet holds ksonnet specific options
                          properties:
                            environment:
                              description: Environment is a ksonnet application environment
                                name
                              type: string
                            parameters:
                              description: Parameters are a list of ksonnet component
                                parameter override values
                              items:
                                description: KsonnetParameter is a ksonnet component
                                  parameter
                                properties:
                                  component:
                                    type: string
                                  name:
                                    type: string
                                  value:
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                          type: object
                        kustomize:
                          description: Kustomize holds kustomize specific options
                          properties:
                            commonAnnotations:
                              additionalProperties:
                                type: string
                              description: CommonAnnotations is a list of additional
                                annotations to add to rendered manifests
                              type: object
                            commonLabels:
                              additionalProperties:
                                type: string
                              description: CommonLabels is a list of additional labels
                                to add to rendered manifests
                              type: object
                            forceCommonAnnotations:
                              description: ForceCommonAnnotations specifies whether
                                to force applying common annotations to resources
                                for Kustomize apps
                              type: boolean
                            forceCommonLabels:
                              description: ForceCommonLabels specifies whether to
                                force applying common labels to resources for Kustomize
                                apps
                              type: boolean
                            images:
                              description: Images is a list of Kustomize image override
                                specifications
                              items:
                                description: KustomizeImage represents a Kustomize
                                  image definition in the format [old_image_name=]<image_name>:<image_tag>
                                type: string
                              type: array
                            namePrefix:
                              description: NamePrefix is a prefix appended to resources
                                for Kustomize apps
                              type: string
                            nameSuffix:
                              description: NameSuffix is a suffix appended to resources
                                for Kustomize apps
                              type: string
                            version:
                              description: Version controls which version of Kustomize
                                to use for rendering manifests
                              type: string
                          type: object
                        path:
                          description: Path is a directory path within the Git repository,
                            and is only valid for applications sourced from Git.
                          type: string
                        plugin:
                          description: ConfigManagementPlugin holds config management
                            plugin specific options
                          properties:
                            env:
                              description: Env is a list of environment variable entries
                              items:
                                description: EnvEntry represents an entry in the application's
                                  environment
                                properties:
                                  name:
                                    description: Name is the name of the variable,
                                      usually expressed in uppercase
                                    type: string
                                  value:
                                    description: Value is the value of the variable
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            name:
                              type: string
                          type: object
                        repoURL:
                          description: RepoURL is the URL to the repository (Git or
                            Helm) that contains the application manifests
                          type: string
                        targetRevision:
                          description: TargetRevision defines the revision of the
                            source to sync the application to. In case of Git, this
                            can be commit, tag, or branch. If omitted, will equal
                            to HEAD. In case of Helm, this is a semver tag for the
                            Chart's version.
                          type: string
                      required:
                      - repoURL
                      type: object
                    syncOptions:
                      description: SyncOptions provide per-sync sync-options, e.g.
                        Validate=false
                      items:
                        type: string
                      type: array
                    syncStrategy:
                      description: SyncStrategy describes how to perform the sync
                      properties:
                        apply:
                          description: Apply will perform a `kubectl apply` to perform
                            the sync.
                          properties:
                            force:
                              description: Force indicates whether or not to supply
                                the --force flag to `kubectl apply`. The --force flag
                                deletes and re-create the resource, when PATCH encounters
                                conflict and has retried for 5 times.
                              type: boolean
                          type: object
                        hook:
                          description: Hook will submit any referenced resources to
                            perform the sync. This is the default strategy
                          properties:
                            force:
                              description: Force indicates whether or not to supply
                                the --force flag to `kubectl apply`. The --force flag
                                deletes and re-create the resource, when PATCH encounters
                                conflict and has retried for 5 times.
                              type: boolean
                          type: object
                      type: object
                  type: object
              type: object
            spec:
              description: ApplicationSpec represents desired application state. Contains
                link to repository with application definition and additional parameters
                link definition revision.
              properties:
                destination:
                  description: Destination is a reference to the target Kubernetes
                    server and namespace
                  properties:
                    name:
                      description: Name is an alternate way of specifying the target
                        cluster by its symbolic name
                      type: string
                    namespace:
                      description: Namespace specifies the target namespace for the
                        application's resources. The namespace will only be set for
                        namespace-scoped resources that have not set a value for .metadata.namespace
                      type: string
                    server:
                      description: Server specifies the URL of the target cluster
                        and must be set to the Kubernetes control plane API
                      type: string
                  type: object
                ignoreDifferences:
                  description: IgnoreDifferences is a list of resources and their
                    fields which should be ignored during comparison
                  items:
                    description: ResourceIgnoreDifferences contains resource filter
                      and list of json paths which should be ignored during comparison
                      with live state.
                    properties:
                      group:
                        type: string
                      jqPathExpressions:
                        items:
                          type: string
                        type: array
                      jsonPointers:
                        items:
                          type: string
                        type: array
                      kind:
                        type: string
                      name:
                        type: string
                      namespace:
                        type: string
                    required:
                    - kind
                    type: object
                  type: array
                info:
                  description: Info contains a list of information (URLs, email addresses,
                    and plain text) that relates to the application
                  items:
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
                project:
                  description: Project is a reference to the project this application
                    belongs to. The empty string means that application belongs to
                    the 'default' project.
                  type: string
                revisionHistoryLimit:
                  description: RevisionHistoryLimit limits the number of items kept
                    in the application's revision history, which is used for informational
                    purposes as well as for rollbacks to previous versions. This should
                    only be changed in exceptional circumstances. Setting to zero
                    will store no history. This will reduce storage used. Increasing
                    will increase the space used to store the history, so we do not
                    recommend increasing it. Default is 10.
                  format: int64
                  type: integer
                source:
                  description: Source is a reference to the location of the application's
                    manifests or chart
                  properties:
                    chart:
                      description: Chart is a Helm chart name, and must be specified
                        for applications sourced from a Helm repo.
                      type: string
                    directory:
                      description: Directory holds path/directory specific options
                      properties:
                        exclude:
                          description: Exclude contains a glob pattern to match paths
                            against that should be explicitly excluded from being
                            used during manifest generation
                          type: string
                        include:
                          description: Include contains a glob pattern to match paths
                            against that should be explicitly included during manifest
                            generation
                          type: string
                        jsonnet:
                          description: Jsonnet holds options specific to Jsonnet
                          properties:
                            extVars:
                              description: ExtVars is a list of Jsonnet External Variables
                              items:
                                description: JsonnetVar represents a variable to be
                                  passed to jsonnet during manifest generation
                                properties:
                                  code:
                                    type: boolean
                                  name:
                                    type: string
                                  value:
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            libs:
                              description: Additional library search dirs
                              items:
                                type: string
                              type: array
                            tlas:
                              description: TLAS is a list of Jsonnet Top-level Arguments
                              items:
                                description: JsonnetVar represents a variable to be
                                  passed to jsonnet during manifest generation
                                properties:
                                  code:
                                    type: boolean
                                  name:
                                    type: string
                                  value:
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                          type: object
                        recurse:
                          description: Recurse specifies whether to scan a directory
                            recursively for manifests
                          type: boolean
                      type: object
                    helm:
                      description: Helm holds helm specific options
                      properties:
                        fileParameters:
                          description: FileParameters are file parameters to the helm
                            template
                          items:
                            description: HelmFileParameter is a file parameter that's
                              passed to helm template during manifest generation
                            properties:
                              name:
                                description: Name is the name of the Helm parameter
                                type: string
                              path:
                                description: Path is the path to the file containing
                                  the values for the Helm parameter
                                type: string
                            type: object
                          type: array
                        parameters:
                          description: Parameters is a list of Helm parameters which
                            are passed to the helm template command upon manifest
                            generation
                          items:
                            description: HelmParameter is a parameter that's passed
                              to helm template during manifest generation
                            properties:
                              forceString:
                                description: ForceString determines whether to tell
                                  Helm to interpret booleans and numbers as strings
                                type: boolean
                              name:
                                description: Name is the name of the Helm parameter
                                type: string
                              value:
                                description: Value is the value for the Helm parameter
                                type: string
                            type: object
                          type: array
                        releaseName:
                          description: ReleaseName is the Helm release name to use.
                            If omitted it will use the application name
                          type: string
                        valueFiles:
                          description: ValuesFiles is a list of Helm value files to
                            use when generating a template
                          items:
                            type: string
                          type: array
                        values:
                          description: Values specifies Helm values to be passed to
                            helm template, typically defined as a block
                          type: string
                        version:
                          description: Version is the Helm version to use for templating
                            (either "2" or "3")
                          type: string
                      type: object
                    ksonnet:
                      description: Ksonnet holds ksonnet specific options
                      properties:
                        environment:
                          description: Environment is a ksonnet application environment
                            name
                          type: string
                        parameters:
                          description: Parameters are a list of ksonnet component
                            parameter override values
                          items:
                            description: KsonnetParameter is a ksonnet component parameter
                            properties:
                              component:
                                type: string
                              name:
                                type: string
                              value:
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                      type: object
                    kustomize:
                      description: Kustomize holds kustomize specific options
                      properties:
                        commonAnnotations:
                          additionalProperties:
                            type: string
                          description: CommonAnnotations is a list of additional annotations
                            to add to rendered manifests
                          type: object
                        commonLabels:
                          additionalProperties:
                            type: string
                          description: CommonLabels is a list of additional labels
                            to add to rendered manifests
                          type: object
                        forceCommonAnnotations:
                          description: ForceCommonAnnotations specifies whether to
                            force applying common annotations to resources for Kustomize
                            apps
                          type: boolean
                        forceCommonLabels:
                          description: ForceCommonLabels specifies whether to force
                            applying common labels to resources for Kustomize apps
                          type: boolean
                        images:
                          description: Images is a list of Kustomize image override
                            specifications
                          items:
                            description: KustomizeImage represents a Kustomize image
                              definition in the format [old_image_name=]<image_name>:<image_tag>
                            type: string
                          type: array
                        namePrefix:
                          description: NamePrefix is a prefix appended to resources
                            for Kustomize apps
                          type: string
                        nameSuffix:
                          description: NameSuffix is a suffix appended to resources
                            for Kustomize apps
                          type: string
                        version:
                          description: Version controls which version of Kustomize
                            to use for rendering manifests
                          type: string
                      type: object
                    path:
                      description: Path is a directory path within the Git repository,
                        and is only valid for applications sourced from Git.
                      type: string
                    plugin:
                      description: ConfigManagementPlugin holds config management
                        plugin specific options
                      properties:
                        env:
                          description: Env is a list of environment variable entries
                          items:
                            description: EnvEntry represents an entry in the application's
                              environment
                            properties:
                              name:
                                description: Name is the name of the variable, usually
                                  expressed in uppercase
                                type: string
                              value:
                                description: Value is the value of the variable
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        name:
                          type: string
                      type: object
                    repoURL:
                      description: RepoURL is the URL to the repository (Git or Helm)
                        that contains the application manifests
                      type: string
                    targetRevision:
                      description: TargetRevision defines the revision of the source
                        to sync the application to. In case of Git, this can be commit,
                        tag, or branch. If omitted, will equal to HEAD. In case of
                        Helm, this is a semver tag for the Chart's version.
                      type: string
                  required:
                  - repoURL
                  type: object
                syncPolicy:
                  description: SyncPolicy controls when and how a sync will be performed
                  properties:
                    automated:
                      description: Automated will keep an application synced to the
                        target revision
                      properties:
                        allowEmpty:
                          description: 'AllowEmpty allows apps have zero live resources
                            (default: false)'
                          type: boolean
                        prune:
                          description: 'Prune specifies whether to delete resources
                            from the cluster that are not found in the sources anymore
                            as part of automated sync (default: false)'
                          type: boolean
                        selfHeal:
                          description: 'SelfHeal specifes whether to revert resources
                            back to their desired state upon modification in the cluster
                            (default: false)'
                          type: boolean
                      type: object
                    retry:
                      description: Retry controls failed sync retry behavior
                      properties:
                        backoff:
                          description: Backoff controls how to backoff on subsequent
                            retries of failed syncs
                          properties:
                            duration:
                              description: Duration is the amount to back off. Default
                                unit is seconds, but could also be a duration (e.g.
                                "2m", "1h")
                              type: string
                            factor:
                              description: Factor is a factor to multiply the base
                                duration after each failed retry
                              format: int64
                              type: integer
                            maxDuration:
                              description: MaxDuration is the maximum amount of time
                                allowed for the backoff strategy
                              type: string
                          type: object
                        limit:
                          description: Limit is the maximum number of attempts for
                            retrying a failed sync. If set to 0, no retries will be
                            performed.
                          format: int64
                          type: integer
                      type: object
                    syncOptions:
                      description: Options allow you to specify whole app sync-options
                      items:
                        type: string
                      type: array
                  type: object
              required:
              - destination
              - project
              - source
              type: object
            status:
              description: ApplicationStatus contains status information for the application
              properties:
                conditions:
                  description: Conditions is a list of currently observed application
                    conditions
                  items:
                    description: ApplicationCondition contains details about an application
                      condition, which is usally an error or warning
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the time the condition
                          was last observed
                        format: date-time
                        type: string
                      message:
                        description: Message contains human-readable message indicating
                          details about condition
                        type: string
                      type:
                        description: Type is an application condition type
                        type: string
                    required:
                    - message
                    - type
                    type: object
                  type: array
                health:
                  description: Health contains information about the application's
                    current health status
                  properties:
                    message:
                      description: Message is a human-readable informational message
                        describing the health status
                      type: string
                    status:
                      description: Status holds the status code of the application
                        or resource
                      type: string
                  type: object
                history:
                  description: History contains information about the application's
                    sync history
                  items:
                    description: RevisionHistory contains history information about
                      a previous sync
                    properties:
                      deployStartedAt:
                        description: DeployStartedAt holds the time the sync operation
                          started
                        format: date-time
                        type: string
                      deployedAt:
                        description: DeployedAt holds the time the sync operation
                          completed
                        format: date-time
                        type: string
                      id:
                        description: ID is an auto incrementing identifier of the
                          RevisionHistory
                        format: int64
                        type: integer
                      revision:
                        description: Revision holds the revision the sync was performed
                          against
                        type: string
                      source:
                        description: Source is a reference to the application source
                          used for the sync operation
                        properties:
                          chart:
                            description: Chart is a Helm chart name, and must be specified
                              for applications sourced from a Helm repo.
                            type: string
                          directory:
                            description: Directory holds path/directory specific options
                            properties:
                              exclude:
                                description: Exclude contains a glob pattern to match
                                  paths against that should be explicitly excluded
                                  from being used during manifest generation
                                type: string
                              include:
                                description: Include contains a glob pattern to match
                                  paths against that should be explicitly included
                                  during manifest generation
                                type: string
                              jsonnet:
                                description: Jsonnet holds options specific to Jsonnet
                                properties:
                                  extVars:
                                    description: ExtVars is a list of Jsonnet External
                                      Variables
                                    items:
                                      description: JsonnetVar represents a variable
                                        to be passed to jsonnet during manifest generation
                                      properties:
                                        code:
                                          type: boolean
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  libs:
                                    description: Additional library search dirs
                                    items:
                                      type: string
                                    type: array
                                  tlas:
                                    description: TLAS is a list of Jsonnet Top-level
                                      Arguments
                                    items:
                                      description: JsonnetVar represents a variable
                                        to be passed to jsonnet during manifest generation
                                      properties:
                                        code:
                                          type: boolean
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                type: object
                              recurse:
                                description: Recurse specifies whether to scan a directory
                                  recursively for manifests
                                type: boolean
                            type: object
                          helm:
                            description: Helm holds helm specific options
                            properties:
                              fileParameters:
                                description: FileParameters are file parameters to
                                  the helm template
                                items:
                                  description: HelmFileParameter is a file parameter
                                    that's passed to helm template during manifest
                                    generation
                                  properties:
                                    name:
                                      description: Name is the name of the Helm parameter
                                      type: string
                                    path:
                                      description: Path is the path to the file containing
                                        the values for the Helm parameter
                                      type: string
                                  type: object
                                type: array
                              parameters:
                                description: Parameters is a list of Helm parameters
                                  which are passed to the helm template command upon
                                  manifest generation
                                items:
                                  description: HelmParameter is a parameter that's
                                    passed to helm template during manifest generation
                                  properties:
                                    forceString:
                                      description: ForceString determines whether
                                        to tell Helm to interpret booleans and numbers
                                        as strings
                                      type: boolean
                                    name:
                                      description: Name is the name of the Helm parameter
                                      type: string
                                    value:
                                      description: Value is the value for the Helm
                                        parameter
                                      type: string
                                  type: object
                                type: array
                              releaseName:
                                description: ReleaseName is the Helm release name
                                  to use. If omitted it will use the application name
                                type: string
                              valueFiles:
                                description: ValuesFiles is a list of Helm value files
                                  to use when generating a template
                                items:
                                  type: string
                                type: array
                              values:
                                description: Values specifies Helm values to be passed
                                  to helm template, typically defined as a block
                                type: string
                              version:
                                description: Version is the Helm version to use for
                                  templating (either "2" or "3")
                                type: string
                            type: object
                          ksonnet:
                            description: Ksonnet holds ksonnet specific options
                            properties:
                              environment:
                                description: Environment is a ksonnet application
                                  environment name
                                type: string
                              parameters:
                                description: Parameters are a list of ksonnet component
                                  parameter override values
                                items:
                                  description: KsonnetParameter is a ksonnet component
                                    parameter
                                  properties:
                                    component:
                                      type: string
                                    name:
                                      type: string
                                    value:
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                            type: object
                          kustomize:
                            description: Kustomize holds kustomize specific options
                            properties:
                              commonAnnotations:
                                additionalProperties:
                                  type: string
                                description: CommonAnnotations is a list of additional
                                  annotations to add to rendered manifests
                                type: object
                              commonLabels:
                                additionalProperties:
                                  type: string
                                description: CommonLabels is a list of additional
                                  labels to add to rendered manifests
                                type: object
                              forceCommonAnnotations:
                                description: ForceCommonAnnotations specifies whether
                                  to force applying common annotations to resources
                                  for Kustomize apps
                                type: boolean
                              forceCommonLabels:
                                description: ForceCommonLabels specifies whether toforce
                                  applying common labels to resources for Kustomizeapps
                                type: boolean
                              images:
                                description: Images is a list of Kustomize image override
                                  specifications
                                items:
                                  description: KustomizeImage represents a Kustomize
                                    image definition in the format [old_image_name=]<image_name>:<image_tag>
                                  type: string
                                type: array
                              namePrefix:
                                description: NamePrefix is a prefix appended to resources
                                  for Kustomize apps
                                type: string
                              nameSuffix:
                                description: NameSuffix is a suffix appended to resources
                                  for Kustomize apps
                                type: string
                              version:
                                description: Version controls which version of Kustomize
                                  to use for rendering manifests
                                type: string
                            type: object
                          path:
                            description: Path is a directory path within the Git repository,
                              and is only valid for applications sourced from Git.
                            type: string
                          plugin:
                            description: ConfigManagementPlugin holds config management
                              plugin specific options
                            properties:
                              env:
                                description: Env is a list of environment variable
                                  entries
                                items:
                                  description: EnvEntry represents an entry in the
                                    application's environment
                                  properties:
                                    name:
                                      description: Name is the name of the variable,
                                        usually expressed in uppercase
                                      type: string
                                    value:
                                      description: Value is the value of the variable
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              name:
                                type: string
                            type: object
                          repoURL:
                            description: RepoURL is the URL to the repository (Git
                              or Helm) that contains the application manifests
                            type: string
                          targetRevision:
                            description: TargetRevision defines the revision of the
                              source to sync the application to. In case of Git, this
                              can be commit, tag, or branch. If omitted, will equal
                              to HEAD. In case of Helm, this is a semver tag for the
                              Chart's version.
                            type: string
                        required:
                        - repoURL
                        type: object
                    required:
                    - deployedAt
                    - id
                    - revision
                    type: object
                  type: array
                observedAt:
                  description: 'ObservedAt indicates when the application state was
                    updated without querying latest git state Deprecated: controller
                    no longer updates ObservedAt field'
                  format: date-time
                  type: string
                operationState:
                  description: OperationState contains information about any ongoing
                    operations, such as a sync
                  properties:
                    finishedAt:
                      description: FinishedAt contains time of operation completion
                      format: date-time
                      type: string
                    message:
                      description: Message holds any pertinent messages when attempting
                        to perform operation (typically errors).
                      type: string
                    operation:
                      description: Operation is the original requested operation
                      properties:
                        info:
                          description: Info is a list of informational items for this
                            operation
                          items:
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        initiatedBy:
                          description: InitiatedBy contains information about who
                            initiated the operations
                          properties:
                            automated:
                              description: Automated is set to true if operation was
                                initiated automatically by the application controller.
                              type: boolean
                            username:
                              description: Username contains the name of a user who
                                started operation
                              type: string
                          type: object
                        retry:
                          description: Retry controls the strategy to apply if a sync
                            fails
                          properties:
                            backoff:
                              description: Backoff controls how to backoff on subsequent
                                retries of failed syncs
                              properties:
                                duration:
                                  description: Duration is the amount to back off.
                                    Default unit is seconds, but could also be a duration
                                    (e.g. "2m", "1h")
                                  type: string
                                factor:
                                  description: Factor is a factor to multiply the
                                    base duration after each failed retry
                                  format: int64
                                  type: integer
                                maxDuration:
                                  description: MaxDuration is the maximum amount of
                                    time allowed for the backoff strategy
                                  type: string
                              type: object
                            limit:
                              description: Limit is the maximum number of attempts
                                for retrying a failed sync. If set to 0, no retries
                                will be performed.
                              format: int64
                              type: integer
                          type: object
                        sync:
                          description: Sync contains parameters for the operation
                          properties:
                            dryRun:
                              description: DryRun specifies to perform a `kubectl
                                apply --dry-run` without actually performing the sync
                              type: boolean
                            manifests:
                              description: Manifests is an optional field that overrides
                                sync source with a local directory for development
                              items:
                                type: string
                              type: array
                            prune:
                              description: Prune specifies to delete resources from
                                the cluster that are no longer tracked in git
                              type: boolean
                            resources:
                              description: Resources describes which resources shall
                                be part of the sync
                              items:
                                description: SyncOperationResource contains resources
                                  to sync.
                                properties:
                                  group:
                                    type: string
                                  kind:
                                    type: string
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                required:
                                - kind
                                - name
                                type: object
                              type: array
                            revision:
                              description: Revision is the revision (Git) or chart
                                version (Helm) which to sync the application to If
                                omitted, will use the revision specified in app spec.
                              type: string
                            source:
                              description: Source overrides the source definition
                                set in the application. This is typically set in a
                                Rollback operation and is nil during a Sync operation
                              properties:
                                chart:
                                  description: Chart is a Helm chart name, and must
                                    be specified for applications sourced from a Helm
                                    repo.
                                  type: string
                                directory:
                                  description: Directory holds path/directory specific
                                    options
                                  properties:
                                    exclude:
                                      description: Exclude contains a glob pattern
                                        to match paths against that should be explicitly
                                        excluded from being used during manifest generation
                                      type: string
                                    include:
                                      description: Include contains a glob pattern
                                        to match paths against that should be explicitly
                                        included during manifest generation
                                      type: string
                                    jsonnet:
                                      description: Jsonnet holds options specific
                                        to Jsonnet
                                      properties:
                                        extVars:
                                          description: ExtVars is a list of Jsonnet
                                            External Variables
                                          items:
                                            description: JsonnetVar represents a variable
                                              to be passed to jsonnet during manifest
                                              generation
                                            properties:
                                              code:
                                                type: boolean
                                              name:
                                                type: string
                                              value:
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        libs:
                                          description: Additional library search dirs
                                          items:
                                            type: string
                                          type: array
                                        tlas:
                                          description: TLAS is a list of Jsonnet Top-level
                                            Arguments
                                          items:
                                            description: JsonnetVar represents a variable
                                              to be passed to jsonnet during manifest
                                              generation
                                            properties:
                                              code:
                                                type: boolean
                                              name:
                                                type: string
                                              value:
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                      type: object
                                    recurse:
                                      description: Recurse specifies whether to scan
                                        a directory recursively for manifests
                                      type: boolean
                                  type: object
                                helm:
                                  description: Helm holds helm specific options
                                  properties:
                                    fileParameters:
                                      description: FileParameters are file parameters
                                        to the helm template
                                      items:
                                        description: HelmFileParameter is a file parameter
                                          that's passed to helm template during manifest
                                          generation
                                        properties:
                                          name:
                                            description: Name is the name of the Helm
                                              parameter
                                            type: string
                                          path:
                                            description: Path is the path to the file
                                              containing the values for the Helm parameter
                                            type: string
                                        type: object
                                      type: array
                                    parameters:
                                      description: Parameters is a list of Helm parameters
                                        which are passed to the helm template command
                                        upon manifest generation
                                      items:
                                        description: HelmParameter is a parameter
                                          that's passed to helm template during manifest
                                          generation
                                        properties:
                                          forceString:
                                            description: ForceString determines whether
                                              to tell Helm to interpret booleans and
                                              numbers as strings
                                            type: boolean
                                          name:
                                            description: Name is the name of the Helm
                                              parameter
                                            type: string
                                          value:
                                            description: Value is the value for the
                                              Helm parameter
                                            type: string
                                        type: object
                                      type: array
                                    releaseName:
                                      description: ReleaseName is the Helm release
                                        name to use. If omitted it will use the application
                                        name
                                      type: string
                                    valueFiles:
                                      description: ValuesFiles is a list of Helm value
                                        files to use when generating a template
                                      items:
                                        type: string
                                      type: array
                                    values:
                                      description: Values specifies Helm values to
                                        be passed to helm template, typically defined
                                        as a block
                                      type: string
                                    version:
                                      description: Version is the Helm version to
                                        use for templating (either "2" or "3")
                                      type: string
                                  type: object
                                ksonnet:
                                  description: Ksonnet holds ksonnet specific options
                                  properties:
                                    environment:
                                      description: Environment is a ksonnet application
                                        environment name
                                      type: string
                                    parameters:
                                      description: Parameters are a list of ksonnet
                                        component parameter override values
                                      items:
                                        description: KsonnetParameter is a ksonnet
                                          component parameter
                                        properties:
                                          component:
                                            type: string
                                          name:
                                            type: string
                                          value:
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                  type: object
                                kustomize:
                                  description: Kustomize holds kustomize specific
                                    options
                                  properties:
                                    commonAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: CommonAnnotations is a list of
                                        additional annotations to add to rendered
                                        manifests
                                      type: object
                                    commonLabels:
                                      additionalProperties:
                                        type: string
                                      description: CommonLabels is a list of additional
                                        labels to add to rendered manifests
                                      type: object
                                    forceCommonAnnotations:
                                      description: ForceCommonAnnotations specifies
                                        whether to force applying common annotations
                                        to resources for Kustomize apps
                                      type: boolean
                                    forceCommonLabels:
                                      description: ForceCommonLabels specifies whether
                                        to force applying common labels to resources
                                        for Kustomize apps
                                      type: boolean
                                    images:
                                      description: Images is a list of Kustomize image
                                        override specifications
                                      items:
                                        description: KustomizeImage represents a Kustomize
                                          image definition in the format [old_image_name=]<image_name>:<image_tag>
                                        type: string
                                      type: array
                                    namePrefix:
                                      description: NamePrefix is a prefix appended
                                        to resources for Kustomize apps
                                      type: string
                                    nameSuffix:
                                      description: NameSuffix is a suffix appended
                                        to resources for Kustomize apps
                                      type: string
                                    version:
                                      description: Version controls which version
                                        of Kustomize to use for rendering manifests
                                      type: string
                                  type: object
                                path:
                                  description: Path is a directory path within the
                                    Git repository, and is only valid for applications
                                    sourced from Git.
                                  type: string
                                plugin:
                                  description: ConfigManagementPlugin holds config
                                    management plugin specific options
                                  properties:
                                    env:
                                      description: Env is a list of environment variable
                                        entries
                                      items:
                                        description: EnvEntry represents an entry
                                          in the application's environment
                                        properties:
                                          name:
                                            description: Name is the name of the variable,
                                              usually expressed in uppercase
                                            type: string
                                          value:
                                            description: Value is the value of the
                                              variable
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    name:
                                      type: string
                                  type: object
                                repoURL:
                                  description: RepoURL is the URL to the repository
                                    (Git or Helm) that contains the application manifests
                                  type: string
                                targetRevision:
                                  description: TargetRevision defines the revision
                                    of the source to sync the application to. In case
                                    of Git, this can be commit, tag, or branch. If
                                    omitted, will equal to HEAD. In case of Helm,
                                    this is a semver tag for the Chart's version.
                                  type: string
                              required:
                              - repoURL
                              type: object
                            syncOptions:
                              description: SyncOptions provide per-sync sync-options,
                                e.g. Validate=false
                              items:
                                type: string
                              type: array
                            syncStrategy:
                              description: SyncStrategy describes how to perform the
                                sync
                              properties:
                                apply:
                                  description: Apply will perform a `kubectl apply`
                                    to perform the sync.
                                  properties:
                                    force:
                                      description: Force indicates whether or not
                                        to supply the --force flag to `kubectl apply`.
                                        The --force flag deletes and re-create the
                                        resource, when PATCH encounters conflict and
                                        has retried for 5 times.
                                      type: boolean
                                  type: object
                                hook:
                                  description: Hook will submit any referenced resources
                                    to perform the sync. This is the default strategy
                                  properties:
                                    force:
                                      description: Force indicates whether or not
                                        to supply the --force flag to `kubectl apply`.
                                        The --force flag deletes and re-create the
                                        resource, when PATCH encounters conflict and
                                        has retried for 5 times.
                                      type: boolean
                                  type: object
                              type: object
                          type: object
                      type: object
                    phase:
                      description: Phase is the current phase of the operation
                      type: string
                    retryCount:
                      description: RetryCount contains time of operation retries
                      format: int64
                      type: integer
                    startedAt:
                      description: StartedAt contains time of operation start
                      format: date-time
                      type: string
                    syncResult:
                      description: SyncResult is the result of a Sync operation
                      properties:
                        resources:
                          description: Resources contains a list of sync result items
                            for each individual resource in a sync operation
                          items:
                            description: ResourceResult holds the operation result
                              details of a specific resource
                            properties:
                              group:
                                description: Group specifies the API group of the
                                  resource
                                type: string
                              hookPhase:
                                description: HookPhase contains the state of any operation
                                  associated with this resource OR hook This can also
                                  contain values for non-hook resources.
                                type: string
                              hookType:
                                description: HookType specifies the type of the hook.
                                  Empty for non-hook resources
                                type: string
                              kind:
                                description: Kind specifies the API kind of the resource
                                type: string
                              message:
                                description: Message contains an informational or
                                  error message for the last sync OR operation
                                type: string
                              name:
                                description: Name specifies the name of the resource
                                type: string
                              namespace:
                                description: Namespace specifies the target namespace
                                  of the resource
                                type: string
                              status:
                                description: Status holds the final result of the
                                  sync. Will be empty if the resources is yet to be
                                  applied/pruned and is always zero-value for hooks
                                type: string
                              syncPhase:
                                description: SyncPhase indicates the particular phase
                                  of the sync that this result was acquired in
                                type: string
                              version:
                                description: Version specifies the API version of
                                  the resource
                                type: string
                            required:
                            - group
                            - kind
                            - name
                            - namespace
                            - version
                            type: object
                          type: array
                        revision:
                          description: Revision holds the revision this sync operation
                            was performed to
                          type: string
                        source:
                          description: Source records the application source information
                            of the sync, used for comparing auto-sync
                          properties:
                            chart:
                              description: Chart is a Helm chart name, and must be
                                specified for applications sourced from a Helm repo.
                              type: string
                            directory:
                              description: Directory holds path/directory specific
                                options
                              properties:
                                exclude:
                                  description: Exclude contains a glob pattern to
                                    match paths against that should be explicitly
                                    excluded from being used during manifest generation
                                  type: string
                                include:
                                  description: Include contains a glob pattern to
                                    match paths against that should be explicitly
                                    included during manifest generation
                                  type: string
                                jsonnet:
                                  description: Jsonnet holds options specific to Jsonnet
                                  properties:
                                    extVars:
                                      description: ExtVars is a list of Jsonnet External
                                        Variables
                                      items:
                                        description: JsonnetVar represents a variable
                                          to be passed to jsonnet during manifest
                                          generation
                                        properties:
                                          code:
                                            type: boolean
                                          name:
                                            type: string
                                          value:
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    libs:
                                      description: Additional library search dirs
                                      items:
                                        type: string
                                      type: array
                                    tlas:
                                      description: TLAS is a list of Jsonnet Top-level
                                        Arguments
                                      items:
                                        description: JsonnetVar represents a variable
                                          to be passed to jsonnet during manifest
                                          generation
                                        properties:
                                          code:
                                            type: boolean
                                          name:
                                            type: string
                                          value:
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                  type: object
                                recurse:
                                  description: Recurse specifies whether to scan a
                                    directory recursively for manifests
                                  type: boolean
                              type: object
                            helm:
                              description: Helm holds helm specific options
                              properties:
                                fileParameters:
                                  description: FileParameters are file parameters
                                    to the helm template
                                  items:
                                    description: HelmFileParameter is a file parameter
                                      that's passed to helm template during manifest
                                      generation
                                    properties:
                                      name:
                                        description: Name is the name of the Helm
                                          parameter
                                        type: string
                                      path:
                                        description: Path is the path to the file
                                          containing the values for the Helm parameter
                                        type: string
                                    type: object
                                  type: array
                                parameters:
                                  description: Parameters is a list of Helm parameters
                                    which are passed to the helm template command
                                    upon manifest generation
                                  items:
                                    description: HelmParameter is a parameter that's
                                      passed to helm template during manifest generation
                                    properties:
                                      forceString:
                                        description: ForceString determines whether
                                          to tell Helm to interpret booleans and numbers
                                          as strings
                                        type: boolean
                                      name:
                                        description: Name is the name of the Helm
                                          parameter
                                        type: string
                                      value:
                                        description: Value is the value for the Helm
                                          parameter
                                        type: string
                                    type: object
                                  type: array
                                releaseName:
                                  description: ReleaseName is the Helm release name
                                    to use. If omitted it will use the application
                                    name
                                  type: string
                                valueFiles:
                                  description: ValuesFiles is a list of Helm value
                                    files to use when generating a template
                                  items:
                                    type: string
                                  type: array
                                values:
                                  description: Values specifies Helm values to be
                                    passed to helm template, typically defined as
                                    a block
                                  type: string
                                version:
                                  description: Version is the Helm version to use
                                    for templating (either "2" or "3")
                                  type: string
                              type: object
                            ksonnet:
                              description: Ksonnet holds ksonnet specific options
                              properties:
                                environment:
                                  description: Environment is a ksonnet application
                                    environment name
                                  type: string
                                parameters:
                                  description: Parameters are a list of ksonnet component
                                    parameter override values
                                  items:
                                    description: KsonnetParameter is a ksonnet component
                                      parameter
                                    properties:
                                      component:
                                        type: string
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                              type: object
                            kustomize:
                              description: Kustomize holds kustomize specific options
                              properties:
                                commonAnnotations:
                                  additionalProperties:
                                    type: string
                                  description: CommonAnnotations is a list of additional
                                    annotations to add to rendered manifests
                                  type: object
                                commonLabels:
                                  additionalProperties:
                                    type: string
                                  description: CommonLabels is a list of additional
                                    labels to add to rendered manifests
                                  type: object
                                forceCommonAnnotations:
                                  description: ForceCommonAnnotations specifies whether
                                    to force applying common annotations to resources
                                    for Kustomize apps
                                  type: boolean
                                forceCommonLabels:
                                  description: ForceCommonLabels specifies whether
                                    to force applying common labels to resources for
                                    Kustomize apps
                                  type: boolean
                                images:
                                  description: Images is a list of Kustomize image
                                    override specifications
                                  items:
                                    description: KustomizeImage represents a Kustomize
                                      image definition in the format [old_image_name=]<image_name>:<image_tag>
                                    type: string
                                  type: array
                                namePrefix:
                                  description: NamePrefix is a prefix appended to
                                    resources for Kustomize apps
                                  type: string
                                nameSuffix:
                                  description: NameSuffix is a suffix appended to
                                    resources for Kustomize apps
                                  type: string
                                version:
                                  description: Version controls which version of Kustomize
                                    to use for rendering manifests
                                  type: string
                              type: object
                            path:
                              description: Path is a directory path within the Git
                                repository, and is only valid for applications sourced
                                from Git.
                              type: string
                            plugin:
                              description: ConfigManagementPlugin holds config management
                                plugin specific options
                              properties:
                                env:
                                  description: Env is a list of environment variable
                                    entries
                                  items:
                                    description: EnvEntry represents an entry in the
                                      application's environment
                                    properties:
                                      name:
                                        description: Name is the name of the variable,
                                          usually expressed in uppercase
                                        type: string
                                      value:
                                        description: Value is the value of the variable
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                name:
                                  type: string
                              type: object
                            repoURL:
                              description: RepoURL is the URL to the repository (Git
                                or Helm) that contains the application manifests
                              type: string
                            targetRevision:
                              description: TargetRevision defines the revision of
                                the source to sync the application to. In case of
                                Git, this can be commit, tag, or branch. If omitted,
                                will equal to HEAD. In case of Helm, this is a semver
                                tag for the Chart's version.
                              type: string
                          required:
                          - repoURL
                          type: object
                      required:
                      - revision
                      type: object
                  required:
                  - operation
                  - phase
                  - startedAt
                  type: object
                reconciledAt:
                  description: ReconciledAt indicates when the application state was
                    reconciled using the latest git version
                  format: date-time
                  type: string
                resources:
                  description: Resources is a list of Kubernetes resources managed
                    by this application
                  items:
                    description: 'ResourceStatus holds the current sync and health
                      status of a resource TODO: describe members of this type'
                    properties:
                      group:
                        type: string
                      health:
                        description: HealthStatus contains information about the currently
                          observed health state of an application or resource
                        properties:
                          message:
                            description: Message is a human-readable informational
                              message describing the health status
                            type: string
                          status:
                            description: Status holds the status code of the application
                              or resource
                            type: string
                        type: object
                      hook:
                        type: boolean
                      kind:
                        type: string
                      name:
                        type: string
                      namespace:
                        type: string
                      requiresPruning:
                        type: boolean
                      status:
                        description: SyncStatusCode is a type which represents possible
                          comparison results
                        type: string
                      version:
                        type: string
                    type: object
                  type: array
                sourceType:
                  description: SourceType specifies the type of this application
                  type: string
                summary:
                  description: Summary contains a list of URLs and container images
                    used by this application
                  properties:
                    externalURLs:
                      description: ExternalURLs holds all external URLs of application
                        child resources.
                      items:
                        type: string
                      type: array
                    images:
                      description: Images holds all images of application child resources.
                      items:
                        type: string
                      type: array
                  type: object
                sync:
                  description: Sync contains information about the application's current
                    sync status
                  properties:
                    comparedTo:
                      description: ComparedTo contains information about what has
                        been compared
                      properties:
                        destination:
                          description: Destination is a reference to the application's
                            destination used for comparison
                          properties:
                            name:
                              description: Name is an alternate way of specifying
                                the target cluster by its symbolic name
                              type: string
                            namespace:
                              description: Namespace specifies the target namespace
                                for the application's resources. The namespace will
                                only be set for namespace-scoped resources that have
                                not set a value for .metadata.namespace
                              type: string
                            server:
                              description: Server specifies the URL of the target
                                cluster and must be set to the Kubernetes control
                                plane API
                              type: string
                          type: object
                        source:
                          description: Source is a reference to the application's
                            source used for comparison
                          properties:
                            chart:
                              description: Chart is a Helm chart name, and must be
                                specified for applications sourced from a Helm repo.
                              type: string
                            directory:
                              description: Directory holds path/directory specific
                                options
                              properties:
                                exclude:
                                  description: Exclude contains a glob pattern to
                                    match paths against that should be explicitly
                                    excluded from being used during manifest generation
                                  type: string
                                include:
                                  description: Include contains a glob pattern to
                                    match paths against that should be explicitly
                                    included during manifest generation
                                  type: string
                                jsonnet:
                                  description: Jsonnet holds options specific to Jsonnet
                                  properties:
                                    extVars:
                                      description: ExtVars is a list of Jsonnet External
                                        Variables
                                      items:
                                        description: JsonnetVar represents a variable
                                          to be passed to jsonnet during manifest
                                          generation
                                        properties:
                                          code:
                                            type: boolean
                                          name:
                                            type: string
                                          value:
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    libs:
                                      description: Additional library search dirs
                                      items:
                                        type: string
                                      type: array
                                    tlas:
                                      description: TLAS is a list of Jsonnet Top-level
                                        Arguments
                                      items:
                                        description: JsonnetVar represents a variable
                                          to be passed to jsonnet during manifest
                                          generation
                                        properties:
                                          code:
                                            type: boolean
                                          name:
                                            type: string
                                          value:
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                  type: object
                                recurse:
                                  description: Recurse specifies whether to scan a
                                    directory recursively for manifests
                                  type: boolean
                              type: object
                            helm:
                              description: Helm holds helm specific options
                              properties:
                                fileParameters:
                                  description: FileParameters are file parameters
                                    to the helm template
                                  items:
                                    description: HelmFileParameter is a file parameter
                                      that's passed to helm template during manifest
                                      generation
                                    properties:
                                      name:
                                        description: Name is the name of the Helm
                                          parameter
                                        type: string
                                      path:
                                        description: Path is the path to the file
                                          containing the values for the Helm parameter
                                        type: string
                                    type: object
                                  type: array
                                parameters:
                                  description: Parameters is a list of Helm parameters
                                    which are passed to the helm template command
                                    upon manifest generation
                                  items:
                                    description: HelmParameter is a parameter that's
                                      passed to helm template during manifest generation
                                    properties:
                                      forceString:
                                        description: ForceString determines whether
                                          to tell Helm to interpret booleans and numbers
                                          as strings
                                        type: boolean
                                      name:
                                        description: Name is the name of the Helm
                                          parameter
                                        type: string
                                      value:
                                        description: Value is the value for the Helm
                                          parameter
                                        type: string
                                    type: object
                                  type: array
                                releaseName:
                                  description: ReleaseName is the Helm release name
                                    to use. If omitted it will use the application
                                    name
                                  type: string
                                valueFiles:
                                  description: ValuesFiles is a list of Helm value
                                    files to use when generating a template
                                  items:
                                    type: string
                                  type: array
                                values:
                                  description: Values specifies Helm values to be
                                    passed to helm template, typically defined as
                                    a block
                                  type: string
                                version:
                                  description: Version is the Helm version to use
                                    for templating (either "2" or "3")
                                  type: string
                              type: object
                            ksonnet:
                              description: Ksonnet holds ksonnet specific options
                              properties:
                                environment:
                                  description: Environment is a ksonnet application
                                    environment name
                                  type: string
                                parameters:
                                  description: Parameters are a list of ksonnet component
                                    parameter override values
                                  items:
                                    description: KsonnetParameter is a ksonnet component
                                      parameter
                                    properties:
                                      component:
                                        type: string
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                              type: object
                            kustomize:
                              description: Kustomize holds kustomize specific options
                              properties:
                                commonAnnotations:
                                  additionalProperties:
                                    type: string
                                  description: CommonAnnotations is a list of additional
                                    annotations to add to rendered manifests
                                  type: object
                                commonLabels:
                                  additionalProperties:
                                    type: string
                                  description: CommonLabels is a list of additional
                                    labels to add to rendered manifests
                                  type: object
                                forceCommonAnnotations:
                                  description: ForceCommonAnnotations specifies whether
                                    to force applying common annotations to resources
                                    for Kustomize apps
                                  type: boolean
                                forceCommonLabels:
                                  description: ForceCommonLabels specifies whether
                                    to force applying common labels to resources for
                                    Kustomize apps
                                  type: boolean
                                images:
                                  description: Images is a list of Kustomize image
                                    override specifications
                                  items:
                                    description: KustomizeImage represents a Kustomize
                                      image definition in the format [old_image_name=]<image_name>:<image_tag>
                                    type: string
                                  type: array
                                namePrefix:
                                  description: NamePrefix is a prefix appended to
                                    resources for Kustomize apps
                                  type: string
                                nameSuffix:
                                  description: NameSuffix is a suffix appended to
                                    resources for Kustomize apps
                                  type: string
                                version:
                                  description: Version controls which version of Kustomize
                                    to use for rendering manifests
                                  type: string
                              type: object
                            path:
                              description: Path is a directory path within the Git
                                repository, and is only valid for applications sourced
                                from Git.
                              type: string
                            plugin:
                              description: ConfigManagementPlugin holds config management
                                plugin specific options
                              properties:
                                env:
                                  description: Env is a list of environment variable
                                    entries
                                  items:
                                    description: EnvEntry represents an entry in the
                                      application's environment
                                    properties:
                                      name:
                                        description: Name is the name of the variable,
                                          usually expressed in uppercase
                                        type: string
                                      value:
                                        description: Value is the value of the variable
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                name:
                                  type: string
                              type: object
                            repoURL:
                              description: RepoURL is the URL to the repository (Git
                                or Helm) that contains the application manifests
                              type: string
                            targetRevision:
                              description: TargetRevision defines the revision of
                                the source to sync the application to. In case of
                                Git, this can be commit, tag, or branch. If omitted,
                                will equal to HEAD. In case of Helm, this is a semver
                                tag for the Chart's version.
                              type: string
                          required:
                          - repoURL
                          type: object
                      required:
                      - destination
                      - source
                      type: object
                    revision:
                      description: Revision contains information about the revision
                        the comparison has been performed to
                      type: string
                    status:
                      description: Status is the sync state of the comparison
                      type: string
                  required:
                  - status
                  type: object
              type: object
          required:
          - metadata
          - spec
          type: object
      served: true
      storage: true
      subresources: {}
  status:
    acceptedNames:
      kind: Application
      listKind: ApplicationList
      plural: applications
      shortNames:
      - app
      - apps
      singular: application
    conditions:
    - lastTransitionTime: "2021-12-07T20:55:41Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-07T20:55:42Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2021-12-07T20:55:42Z"
    generation: 1
    labels:
      app.kubernetes.io/name: appprojects.argoproj.io
      app.kubernetes.io/part-of: argocd
    name: appprojects.argoproj.io
    resourceVersion: "2730269"
    uid: cb08c49e-e0f5-4b5a-a022-e8ac0a69e3aa
  spec:
    conversion:
      strategy: None
    group: argoproj.io
    names:
      kind: AppProject
      listKind: AppProjectList
      plural: appprojects
      shortNames:
      - appproj
      - appprojs
      singular: appproject
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: 'AppProject provides a logical grouping of applications, providing
            controls for: * where the apps may deploy to (cluster whitelist) * what
            may be deployed (repository whitelist, resource whitelist/blacklist) *
            who can access these applications (roles, OIDC group claims bindings)
            * and what they can do (RBAC policies) * automation access to these roles
            (JWT tokens)'
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AppProjectSpec is the specification of an AppProject
              properties:
                clusterResourceBlacklist:
                  description: ClusterResourceBlacklist contains list of blacklisted
                    cluster level resources
                  items:
                    description: GroupKind specifies a Group and a Kind, but does
                      not force a version.  This is useful for identifying concepts
                      during lookup stages without having partially valid types
                    properties:
                      group:
                        type: string
                      kind:
                        type: string
                    required:
                    - group
                    - kind
                    type: object
                  type: array
                clusterResourceWhitelist:
                  description: ClusterResourceWhitelist contains list of whitelisted
                    cluster level resources
                  items:
                    description: GroupKind specifies a Group and a Kind, but does
                      not force a version.  This is useful for identifying concepts
                      during lookup stages without having partially valid types
                    properties:
                      group:
                        type: string
                      kind:
                        type: string
                    required:
                    - group
                    - kind
                    type: object
                  type: array
                description:
                  description: Description contains optional project description
                  type: string
                destinations:
                  description: Destinations contains list of destinations available
                    for deployment
                  items:
                    description: ApplicationDestination holds information about the
                      application's destination
                    properties:
                      name:
                        description: Name is an alternate way of specifying the target
                          cluster by its symbolic name
                        type: string
                      namespace:
                        description: Namespace specifies the target namespace for
                          the application's resources. The namespace will only be
                          set for namespace-scoped resources that have not set a value
                          for .metadata.namespace
                        type: string
                      server:
                        description: Server specifies the URL of the target cluster
                          and must be set to the Kubernetes control plane API
                        type: string
                    type: object
                  type: array
                namespaceResourceBlacklist:
                  description: NamespaceResourceBlacklist contains list of blacklisted
                    namespace level resources
                  items:
                    description: GroupKind specifies a Group and a Kind, but does
                      not force a version.  This is useful for identifying concepts
                      during lookup stages without having partially valid types
                    properties:
                      group:
                        type: string
                      kind:
                        type: string
                    required:
                    - group
                    - kind
                    type: object
                  type: array
                namespaceResourceWhitelist:
                  description: NamespaceResourceWhitelist contains list of whitelisted
                    namespace level resources
                  items:
                    description: GroupKind specifies a Group and a Kind, but does
                      not force a version.  This is useful for identifying concepts
                      during lookup stages without having partially valid types
                    properties:
                      group:
                        type: string
                      kind:
                        type: string
                    required:
                    - group
                    - kind
                    type: object
                  type: array
                orphanedResources:
                  description: OrphanedResources specifies if controller should monitor
                    orphaned resources of apps in this project
                  properties:
                    ignore:
                      description: Ignore contains a list of resources that are to
                        be excluded from orphaned resources monitoring
                      items:
                        description: OrphanedResourceKey is a reference to a resource
                          to be ignored from
                        properties:
                          group:
                            type: string
                          kind:
                            type: string
                          name:
                            type: string
                        type: object
                      type: array
                    warn:
                      description: Warn indicates if warning condition should be created
                        for apps which have orphaned resources
                      type: boolean
                  type: object
                roles:
                  description: Roles are user defined RBAC roles associated with this
                    project
                  items:
                    description: ProjectRole represents a role that has access to
                      a project
                    properties:
                      description:
                        description: Description is a description of the role
                        type: string
                      groups:
                        description: Groups are a list of OIDC group claims bound
                          to this role
                        items:
                          type: string
                        type: array
                      jwtTokens:
                        description: JWTTokens are a list of generated JWT tokens
                          bound to this role
                        items:
                          description: JWTToken holds the issuedAt and expiresAt values
                            of a token
                          properties:
                            exp:
                              format: int64
                              type: integer
                            iat:
                              format: int64
                              type: integer
                            id:
                              type: string
                          required:
                          - iat
                          type: object
                        type: array
                      name:
                        description: Name is a name for this role
                        type: string
                      policies:
                        description: Policies Stores a list of casbin formated strings
                          that define access policies for the role in the project
                        items:
                          type: string
                        type: array
                    required:
                    - name
                    type: object
                  type: array
                signatureKeys:
                  description: SignatureKeys contains a list of PGP key IDs that commits
                    in Git must be signed with in order to be allowed for sync
                  items:
                    description: SignatureKey is the specification of a key required
                      to verify commit signatures with
                    properties:
                      keyID:
                        description: The ID of the key in hexadecimal notation
                        type: string
                    required:
                    - keyID
                    type: object
                  type: array
                sourceRepos:
                  description: SourceRepos contains list of repository URLs which
                    can be used for deployment
                  items:
                    type: string
                  type: array
                syncWindows:
                  description: SyncWindows controls when syncs can be run for apps
                    in this project
                  items:
                    description: SyncWindow contains the kind, time, duration and
                      attributes that are used to assign the syncWindows to apps
                    properties:
                      applications:
                        description: Applications contains a list of applications
                          that the window will apply to
                        items:
                          type: string
                        type: array
                      clusters:
                        description: Clusters contains a list of clusters that the
                          window will apply to
                        items:
                          type: string
                        type: array
                      duration:
                        description: Duration is the amount of time the sync window
                          will be open
                        type: string
                      kind:
                        description: Kind defines if the window allows or blocks syncs
                        type: string
                      manualSync:
                        description: ManualSync enables manual syncs when they would
                          otherwise be blocked
                        type: boolean
                      namespaces:
                        description: Namespaces contains a list of namespaces that
                          the window will apply to
                        items:
                          type: string
                        type: array
                      schedule:
                        description: Schedule is the time the window will begin, specified
                          in cron format
                        type: string
                    type: object
                  type: array
              type: object
            status:
              description: AppProjectStatus contains status information for AppProject
                CRs
              properties:
                jwtTokensByRole:
                  additionalProperties:
                    description: JWTTokens represents a list of JWT tokens
                    properties:
                      items:
                        items:
                          description: JWTToken holds the issuedAt and expiresAt values
                            of a token
                          properties:
                            exp:
                              format: int64
                              type: integer
                            iat:
                              format: int64
                              type: integer
                            id:
                              type: string
                          required:
                          - iat
                          type: object
                        type: array
                    type: object
                  description: JWTTokensByRole contains a list of JWT tokens issued
                    for a given role
                  type: object
              type: object
          required:
          - metadata
          - spec
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: AppProject
      listKind: AppProjectList
      plural: appprojects
      shortNames:
      - appproj
      - appprojs
      singular: appproject
    conditions:
    - lastTransitionTime: "2021-12-07T20:55:42Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-07T20:55:42Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: "2021-12-04T17:03:56Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v0.24.0
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: buckets.source.toolkit.fluxcd.io
    resourceVersion: "1781"
    uid: d2d9509b-d2f8-4167-8496-1ca7a51de513
  spec:
    conversion:
      strategy: None
    group: source.toolkit.fluxcd.io
    names:
      kind: Bucket
      listKind: BucketList
      plural: buckets
      singular: bucket
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .spec.url
        name: URL
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Bucket is the Schema for the buckets API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: BucketSpec defines the desired state of an S3 compatible
                bucket
              properties:
                accessFrom:
                  description: AccessFrom defines an Access Control List for allowing
                    cross-namespace references to this object.
                  properties:
                    namespaceSelectors:
                      description: NamespaceSelectors is the list of namespace selectors
                        to which this ACL applies. Items in this list are evaluated
                        using a logical OR operation.
                      items:
                        description: NamespaceSelector selects the namespaces to which
                          this ACL applies. An empty map of MatchLabels matches all
                          namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                  - namespaceSelectors
                  type: object
                bucketName:
                  description: The bucket name.
                  type: string
                endpoint:
                  description: The bucket endpoint address.
                  type: string
                ignore:
                  description: Ignore overrides the set of excluded patterns in the
                    .sourceignore format (which is the same as .gitignore). If not
                    provided, a default will be used, consult the documentation for
                    your version to find out what those are.
                  type: string
                insecure:
                  description: Insecure allows connecting to a non-TLS S3 HTTP endpoint.
                  type: boolean
                interval:
                  description: The interval at which to check for bucket updates.
                  type: string
                provider:
                  default: generic
                  description: The S3 compatible storage provider name, default ('generic').
                  enum:
                  - generic
                  - aws
                  - gcp
                  type: string
                region:
                  description: The bucket region.
                  type: string
                secretRef:
                  description: The name of the secret containing authentication credentials
                    for the Bucket.
                  properties:
                    name:
                      description: Name of the referent
                      type: string
                  required:
                  - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend the reconciliation
                    of this source.
                  type: boolean
                timeout:
                  default: 20s
                  description: The timeout for download operations, defaults to 20s.
                  type: string
              required:
              - bucketName
              - endpoint
              - interval
              type: object
            status:
              description: BucketStatus defines the observed state of a bucket
              properties:
                artifact:
                  description: Artifact represents the output of the last successful
                    Bucket sync.
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the artifact.
                      type: string
                    lastUpdateTime:
                      description: LastUpdateTime is the timestamp corresponding to
                        the last update of this artifact.
                      format: date-time
                      type: string
                    path:
                      description: Path is the relative file path of this artifact.
                      type: string
                    revision:
                      description: Revision is a human readable identifier traceable
                        in the origin source system. It can be a Git commit SHA, Git
                        tag, a Helm index timestamp, a Helm chart version, etc.
                      type: string
                    url:
                      description: URL is the HTTP address of this artifact.
                      type: string
                  required:
                  - path
                  - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the Bucket.
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most
                    recent reconcile request value, so a change can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                url:
                  description: URL is the download link for the artifact output of
                    the last Bucket sync.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: Bucket
      listKind: BucketList
      plural: buckets
      singular: bucket
    conditions:
    - lastTransitionTime: "2021-12-04T17:03:56Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-04T17:03:56Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from-secret: cert-manager/cert-manager-cert-manager-webhook-ca
      meta.helm.sh/release-name: cert-manager-cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2021-12-04T17:04:19Z"
    generation: 2
    labels:
      app: cert-manager
      app.kubernetes.io/instance: cert-manager-cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.6.1
      helm.sh/chart: cert-manager-v1.6.1
      helm.toolkit.fluxcd.io/name: cert-manager
      helm.toolkit.fluxcd.io/namespace: flux-system
    name: certificaterequests.cert-manager.io
    resourceVersion: "2481"
    uid: db25fd66-b2ca-44da-bf57-189bf709226a
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJ3ekNDQVVpZ0F3SUJBZ0lSQUp1UTVrL2dQcjIxSmxZcm9PRlhWdnd3Q2dZSUtvWkl6ajBFQXdNd0lqRWcKTUI0R0ExVUVBeE1YWTJWeWRDMXRZVzVoWjJWeUxYZGxZbWh2YjJzdFkyRXdIaGNOTWpFeE1qQTBNVGN3TkRJNQpXaGNOTWpJeE1qQTBNVGN3TkRJNVdqQWlNU0F3SGdZRFZRUURFeGRqWlhKMExXMWhibUZuWlhJdGQyVmlhRzl2CmF5MWpZVEIyTUJBR0J5cUdTTTQ5QWdFR0JTdUJCQUFpQTJJQUJNeXNkL090dkRqYVZ6ZXBvMXhabks5aVRsOVAKeHZ3L3ljZkg0UU80VHozSFhPT3A3U1p4WjhsWlA4WHFuZGpWdnl6dm9ka0hxMFUrbjdySjQ5aEt2aEtWRS81SQphdjRtM2NBZ1NFUVh4aXh0NmFaWDc2cXkydmNMMmZQTnpWK1NFNk5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trCk1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZOQ014dTNWSmJTV1VNbzJXYUg2SEV2a0prTjkKTUFvR0NDcUdTTTQ5QkFNREEya0FNR1lDTVFDZ2JkUVBiZ2s1K2J2UjEyZ1l6VVQwSlJLeG1WRHRBeXRwWVN2ZQpjQXc0TVBXNFNjN0ptbjEyNHg5cG0rUTJvTE1DTVFDUnc4RDBpWnVCV1RnVE5OT2htVEh1MklRVXBJaFNtR3REClg4ZW5aZ1FmdEVBTVJzaHQwVUl6bXVlWmVSTlhUd0E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
          service:
            name: cert-manager-cert-manager-webhook
            namespace: cert-manager
            path: /convert
            port: 443
        conversionReviewVersions:
        - v1
        - v1beta1
    group: cert-manager.io
    names:
      categories:
      - cert-manager
      kind: CertificateRequest
      listKind: CertificateRequestList
      plural: certificaterequests
      shortNames:
      - cr
      - crs
      singular: certificaterequest
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Approved")].status
        name: Approved
        type: string
      - jsonPath: .status.conditions[?(@.type=="Denied")].status
        name: Denied
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        type: string
      - jsonPath: .spec.username
        name: Requestor
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: "A CertificateRequest is used to request a signed certificate
            from one of the configured issuers. \n All fields within the CertificateRequest's
            `spec` are immutable after creation. A CertificateRequest will either
            succeed or fail, as denoted by its `status.state` field. \n A CertificateRequest
            is a one-shot resource, meaning it represents a single point in time request
            for a certificate and cannot be re-used."
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the CertificateRequest resource.
              properties:
                csr:
                  description: The PEM-encoded x509 certificate signing request to
                    be submitted to the CA for signing.
                  format: byte
                  type: string
                duration:
                  description: The requested 'duration' (i.e. lifetime) of the Certificate.
                    This option may be ignored/overridden by some issuer types.
                  type: string
                extra:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: Extra contains extra attributes of the user that created
                    the CertificateRequest. Populated by the cert-manager webhook
                    on creation and immutable.
                  type: object
                groups:
                  description: Groups contains group membership of the user that created
                    the CertificateRequest. Populated by the cert-manager webhook
                    on creation and immutable.
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: atomic
                isCA:
                  description: IsCA will request to mark the certificate as valid
                    for certificate signing when submitting to the issuer. This will
                    automatically add the `cert sign` usage to the list of `usages`.
                  type: boolean
                issuerRef:
                  description: IssuerRef is a reference to the issuer for this CertificateRequest.  If
                    the `kind` field is not set, or set to `Issuer`, an Issuer resource
                    with the given name in the same namespace as the CertificateRequest
                    will be used.  If the `kind` field is set to `ClusterIssuer`,
                    a ClusterIssuer with the provided name will be used. The `name`
                    field in this stanza is required at all times. The group field
                    refers to the API group of the issuer which defaults to `cert-manager.io`
                    if empty.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                uid:
                  description: UID contains the uid of the user that created the CertificateRequest.
                    Populated by the cert-manager webhook on creation and immutable.
                  type: string
                usages:
                  description: Usages is the set of x509 usages that are requested
                    for the certificate. Defaults to `digital signature` and `key
                    encipherment` if not specified.
                  items:
                    description: 'KeyUsage specifies valid usage contexts for keys.
                      See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12
                      Valid KeyUsage values are as follows: "signing", "digital signature",
                      "content commitment", "key encipherment", "key agreement", "data
                      encipherment", "cert sign", "crl sign", "encipher only", "decipher
                      only", "any", "server auth", "client auth", "code signing",
                      "email protection", "s/mime", "ipsec end system", "ipsec tunnel",
                      "ipsec user", "timestamping", "ocsp signing", "microsoft sgc",
                      "netscape sgc"'
                    enum:
                    - signing
                    - digital signature
                    - content commitment
                    - key encipherment
                    - key agreement
                    - data encipherment
                    - cert sign
                    - crl sign
                    - encipher only
                    - decipher only
                    - any
                    - server auth
                    - client auth
                    - code signing
                    - email protection
                    - s/mime
                    - ipsec end system
                    - ipsec tunnel
                    - ipsec user
                    - timestamping
                    - ocsp signing
                    - microsoft sgc
                    - netscape sgc
                    type: string
                  type: array
                username:
                  description: Username contains the name of the user that created
                    the CertificateRequest. Populated by the cert-manager webhook
                    on creation and immutable.
                  type: string
              required:
              - csr
              - issuerRef
              type: object
            status:
              description: Status of the CertificateRequest. This is set and managed
                automatically.
              properties:
                ca:
                  description: The PEM encoded x509 certificate of the signer, also
                    known as the CA (Certificate Authority). This is set on a best-effort
                    basis by different issuers. If not set, the CA is assumed to be
                    unknown/not available.
                  format: byte
                  type: string
                certificate:
                  description: The PEM encoded x509 certificate resulting from the
                    certificate signing request. If not set, the CertificateRequest
                    has either not been completed or has failed. More information
                    on failure can be found by checking the `conditions` field.
                  format: byte
                  type: string
                conditions:
                  description: List of status conditions to indicate the status of
                    a CertificateRequest. Known condition types are `Ready` and `InvalidRequest`.
                  items:
                    description: CertificateRequestCondition contains condition information
                      for a CertificateRequest.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`,
                          `InvalidRequest`, `Approved`, `Denied`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                failureTime:
                  description: FailureTime stores the time that this CertificateRequest
                    failed. This is used to influence garbage collection and back-off.
                  format: date-time
                  type: string
              type: object
          type: object
      served: false
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Approved")].status
        name: Approved
        type: string
      - jsonPath: .status.conditions[?(@.type=="Denied")].status
        name: Denied
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        type: string
      - jsonPath: .spec.username
        name: Requestor
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha3
      schema:
        openAPIV3Schema:
          description: "A CertificateRequest is used to request a signed certificate
            from one of the configured issuers. \n All fields within the CertificateRequest's
            `spec` are immutable after creation. A CertificateRequest will either
            succeed or fail, as denoted by its `status.state` field. \n A CertificateRequest
            is a one-shot resource, meaning it represents a single point in time request
            for a certificate and cannot be re-used."
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the CertificateRequest resource.
              properties:
                csr:
                  description: The PEM-encoded x509 certificate signing request to
                    be submitted to the CA for signing.
                  format: byte
                  type: string
                duration:
                  description: The requested 'duration' (i.e. lifetime) of the Certificate.
                    This option may be ignored/overridden by some issuer types.
                  type: string
                extra:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: Extra contains extra attributes of the user that created
                    the CertificateRequest. Populated by the cert-manager webhook
                    on creation and immutable.
                  type: object
                groups:
                  description: Groups contains group membership of the user that created
                    the CertificateRequest. Populated by the cert-manager webhook
                    on creation and immutable.
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: atomic
                isCA:
                  description: IsCA will request to mark the certificate as valid
                    for certificate signing when submitting to the issuer. This will
                    automatically add the `cert sign` usage to the list of `usages`.
                  type: boolean
                issuerRef:
                  description: IssuerRef is a reference to the issuer for this CertificateRequest.  If
                    the `kind` field is not set, or set to `Issuer`, an Issuer resource
                    with the given name in the same namespace as the CertificateRequest
                    will be used.  If the `kind` field is set to `ClusterIssuer`,
                    a ClusterIssuer with the provided name will be used. The `name`
                    field in this stanza is required at all times. The group field
                    refers to the API group of the issuer which defaults to `cert-manager.io`
                    if empty.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                uid:
                  description: UID contains the uid of the user that created the CertificateRequest.
                    Populated by the cert-manager webhook on creation and immutable.
                  type: string
                usages:
                  description: Usages is the set of x509 usages that are requested
                    for the certificate. Defaults to `digital signature` and `key
                    encipherment` if not specified.
                  items:
                    description: 'KeyUsage specifies valid usage contexts for keys.
                      See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12
                      Valid KeyUsage values are as follows: "signing", "digital signature",
                      "content commitment", "key encipherment", "key agreement", "data
                      encipherment", "cert sign", "crl sign", "encipher only", "decipher
                      only", "any", "server auth", "client auth", "code signing",
                      "email protection", "s/mime", "ipsec end system", "ipsec tunnel",
                      "ipsec user", "timestamping", "ocsp signing", "microsoft sgc",
                      "netscape sgc"'
                    enum:
                    - signing
                    - digital signature
                    - content commitment
                    - key encipherment
                    - key agreement
                    - data encipherment
                    - cert sign
                    - crl sign
                    - encipher only
                    - decipher only
                    - any
                    - server auth
                    - client auth
                    - code signing
                    - email protection
                    - s/mime
                    - ipsec end system
                    - ipsec tunnel
                    - ipsec user
                    - timestamping
                    - ocsp signing
                    - microsoft sgc
                    - netscape sgc
                    type: string
                  type: array
                username:
                  description: Username contains the name of the user that created
                    the CertificateRequest. Populated by the cert-manager webhook
                    on creation and immutable.
                  type: string
              required:
              - csr
              - issuerRef
              type: object
            status:
              description: Status of the CertificateRequest. This is set and managed
                automatically.
              properties:
                ca:
                  description: The PEM encoded x509 certificate of the signer, also
                    known as the CA (Certificate Authority). This is set on a best-effort
                    basis by different issuers. If not set, the CA is assumed to be
                    unknown/not available.
                  format: byte
                  type: string
                certificate:
                  description: The PEM encoded x509 certificate resulting from the
                    certificate signing request. If not set, the CertificateRequest
                    has either not been completed or has failed. More information
                    on failure can be found by checking the `conditions` field.
                  format: byte
                  type: string
                conditions:
                  description: List of status conditions to indicate the status of
                    a CertificateRequest. Known condition types are `Ready` and `InvalidRequest`.
                  items:
                    description: CertificateRequestCondition contains condition information
                      for a CertificateRequest.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`,
                          `InvalidRequest`, `Approved`, `Denied`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                failureTime:
                  description: FailureTime stores the time that this CertificateRequest
                    failed. This is used to influence garbage collection and back-off.
                  format: date-time
                  type: string
              type: object
          type: object
      served: false
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Approved")].status
        name: Approved
        type: string
      - jsonPath: .status.conditions[?(@.type=="Denied")].status
        name: Denied
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        type: string
      - jsonPath: .spec.username
        name: Requestor
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: "A CertificateRequest is used to request a signed certificate
            from one of the configured issuers. \n All fields within the CertificateRequest's
            `spec` are immutable after creation. A CertificateRequest will either
            succeed or fail, as denoted by its `status.state` field. \n A CertificateRequest
            is a one-shot resource, meaning it represents a single point in time request
            for a certificate and cannot be re-used."
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the CertificateRequest resource.
              properties:
                duration:
                  description: The requested 'duration' (i.e. lifetime) of the Certificate.
                    This option may be ignored/overridden by some issuer types.
                  type: string
                extra:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: Extra contains extra attributes of the user that created
                    the CertificateRequest. Populated by the cert-manager webhook
                    on creation and immutable.
                  type: object
                groups:
                  description: Groups contains group membership of the user that created
                    the CertificateRequest. Populated by the cert-manager webhook
                    on creation and immutable.
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: atomic
                isCA:
                  description: IsCA will request to mark the certificate as valid
                    for certificate signing when submitting to the issuer. This will
                    automatically add the `cert sign` usage to the list of `usages`.
                  type: boolean
                issuerRef:
                  description: IssuerRef is a reference to the issuer for this CertificateRequest.  If
                    the `kind` field is not set, or set to `Issuer`, an Issuer resource
                    with the given name in the same namespace as the CertificateRequest
                    will be used.  If the `kind` field is set to `ClusterIssuer`,
                    a ClusterIssuer with the provided name will be used. The `name`
                    field in this stanza is required at all times. The group field
                    refers to the API group of the issuer which defaults to `cert-manager.io`
                    if empty.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                request:
                  description: The PEM-encoded x509 certificate signing request to
                    be submitted to the CA for signing.
                  format: byte
                  type: string
                uid:
                  description: UID contains the uid of the user that created the CertificateRequest.
                    Populated by the cert-manager webhook on creation and immutable.
                  type: string
                usages:
                  description: Usages is the set of x509 usages that are requested
                    for the certificate. Defaults to `digital signature` and `key
                    encipherment` if not specified.
                  items:
                    description: 'KeyUsage specifies valid usage contexts for keys.
                      See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12
                      Valid KeyUsage values are as follows: "signing", "digital signature",
                      "content commitment", "key encipherment", "key agreement", "data
                      encipherment", "cert sign", "crl sign", "encipher only", "decipher
                      only", "any", "server auth", "client auth", "code signing",
                      "email protection", "s/mime", "ipsec end system", "ipsec tunnel",
                      "ipsec user", "timestamping", "ocsp signing", "microsoft sgc",
                      "netscape sgc"'
                    enum:
                    - signing
                    - digital signature
                    - content commitment
                    - key encipherment
                    - key agreement
                    - data encipherment
                    - cert sign
                    - crl sign
                    - encipher only
                    - decipher only
                    - any
                    - server auth
                    - client auth
                    - code signing
                    - email protection
                    - s/mime
                    - ipsec end system
                    - ipsec tunnel
                    - ipsec user
                    - timestamping
                    - ocsp signing
                    - microsoft sgc
                    - netscape sgc
                    type: string
                  type: array
                username:
                  description: Username contains the name of the user that created
                    the CertificateRequest. Populated by the cert-manager webhook
                    on creation and immutable.
                  type: string
              required:
              - issuerRef
              - request
              type: object
            status:
              description: Status of the CertificateRequest. This is set and managed
                automatically.
              properties:
                ca:
                  description: The PEM encoded x509 certificate of the signer, also
                    known as the CA (Certificate Authority). This is set on a best-effort
                    basis by different issuers. If not set, the CA is assumed to be
                    unknown/not available.
                  format: byte
                  type: string
                certificate:
                  description: The PEM encoded x509 certificate resulting from the
                    certificate signing request. If not set, the CertificateRequest
                    has either not been completed or has failed. More information
                    on failure can be found by checking the `conditions` field.
                  format: byte
                  type: string
                conditions:
                  description: List of status conditions to indicate the status of
                    a CertificateRequest. Known condition types are `Ready` and `InvalidRequest`.
                  items:
                    description: CertificateRequestCondition contains condition information
                      for a CertificateRequest.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`,
                          `InvalidRequest`, `Approved`, `Denied`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                failureTime:
                  description: FailureTime stores the time that this CertificateRequest
                    failed. This is used to influence garbage collection and back-off.
                  format: date-time
                  type: string
              type: object
          required:
          - spec
          type: object
      served: false
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Approved")].status
        name: Approved
        type: string
      - jsonPath: .status.conditions[?(@.type=="Denied")].status
        name: Denied
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        type: string
      - jsonPath: .spec.username
        name: Requestor
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: "A CertificateRequest is used to request a signed certificate
            from one of the configured issuers. \n All fields within the CertificateRequest's
            `spec` are immutable after creation. A CertificateRequest will either
            succeed or fail, as denoted by its `status.state` field. \n A CertificateRequest
            is a one-shot resource, meaning it represents a single point in time request
            for a certificate and cannot be re-used."
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the CertificateRequest resource.
              properties:
                duration:
                  description: The requested 'duration' (i.e. lifetime) of the Certificate.
                    This option may be ignored/overridden by some issuer types.
                  type: string
                extra:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: Extra contains extra attributes of the user that created
                    the CertificateRequest. Populated by the cert-manager webhook
                    on creation and immutable.
                  type: object
                groups:
                  description: Groups contains group membership of the user that created
                    the CertificateRequest. Populated by the cert-manager webhook
                    on creation and immutable.
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: atomic
                isCA:
                  description: IsCA will request to mark the certificate as valid
                    for certificate signing when submitting to the issuer. This will
                    automatically add the `cert sign` usage to the list of `usages`.
                  type: boolean
                issuerRef:
                  description: IssuerRef is a reference to the issuer for this CertificateRequest.  If
                    the `kind` field is not set, or set to `Issuer`, an Issuer resource
                    with the given name in the same namespace as the CertificateRequest
                    will be used.  If the `kind` field is set to `ClusterIssuer`,
                    a ClusterIssuer with the provided name will be used. The `name`
                    field in this stanza is required at all times. The group field
                    refers to the API group of the issuer which defaults to `cert-manager.io`
                    if empty.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                request:
                  description: The PEM-encoded x509 certificate signing request to
                    be submitted to the CA for signing.
                  format: byte
                  type: string
                uid:
                  description: UID contains the uid of the user that created the CertificateRequest.
                    Populated by the cert-manager webhook on creation and immutable.
                  type: string
                usages:
                  description: Usages is the set of x509 usages that are requested
                    for the certificate. If usages are set they SHOULD be encoded
                    inside the CSR spec Defaults to `digital signature` and `key encipherment`
                    if not specified.
                  items:
                    description: 'KeyUsage specifies valid usage contexts for keys.
                      See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12
                      Valid KeyUsage values are as follows: "signing", "digital signature",
                      "content commitment", "key encipherment", "key agreement", "data
                      encipherment", "cert sign", "crl sign", "encipher only", "decipher
                      only", "any", "server auth", "client auth", "code signing",
                      "email protection", "s/mime", "ipsec end system", "ipsec tunnel",
                      "ipsec user", "timestamping", "ocsp signing", "microsoft sgc",
                      "netscape sgc"'
                    enum:
                    - signing
                    - digital signature
                    - content commitment
                    - key encipherment
                    - key agreement
                    - data encipherment
                    - cert sign
                    - crl sign
                    - encipher only
                    - decipher only
                    - any
                    - server auth
                    - client auth
                    - code signing
                    - email protection
                    - s/mime
                    - ipsec end system
                    - ipsec tunnel
                    - ipsec user
                    - timestamping
                    - ocsp signing
                    - microsoft sgc
                    - netscape sgc
                    type: string
                  type: array
                username:
                  description: Username contains the name of the user that created
                    the CertificateRequest. Populated by the cert-manager webhook
                    on creation and immutable.
                  type: string
              required:
              - issuerRef
              - request
              type: object
            status:
              description: Status of the CertificateRequest. This is set and managed
                automatically.
              properties:
                ca:
                  description: The PEM encoded x509 certificate of the signer, also
                    known as the CA (Certificate Authority). This is set on a best-effort
                    basis by different issuers. If not set, the CA is assumed to be
                    unknown/not available.
                  format: byte
                  type: string
                certificate:
                  description: The PEM encoded x509 certificate resulting from the
                    certificate signing request. If not set, the CertificateRequest
                    has either not been completed or has failed. More information
                    on failure can be found by checking the `conditions` field.
                  format: byte
                  type: string
                conditions:
                  description: List of status conditions to indicate the status of
                    a CertificateRequest. Known condition types are `Ready` and `InvalidRequest`.
                  items:
                    description: CertificateRequestCondition contains condition information
                      for a CertificateRequest.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`,
                          `InvalidRequest`, `Approved`, `Denied`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                failureTime:
                  description: FailureTime stores the time that this CertificateRequest
                    failed. This is used to influence garbage collection and back-off.
                  format: date-time
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - cert-manager
      kind: CertificateRequest
      listKind: CertificateRequestList
      plural: certificaterequests
      shortNames:
      - cr
      - crs
      singular: certificaterequest
    conditions:
    - lastTransitionTime: "2021-12-04T17:04:20Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-04T17:04:21Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from-secret: cert-manager/cert-manager-cert-manager-webhook-ca
      meta.helm.sh/release-name: cert-manager-cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2021-12-04T17:04:19Z"
    generation: 2
    labels:
      app: cert-manager
      app.kubernetes.io/instance: cert-manager-cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.6.1
      helm.sh/chart: cert-manager-v1.6.1
      helm.toolkit.fluxcd.io/name: cert-manager
      helm.toolkit.fluxcd.io/namespace: flux-system
    name: certificates.cert-manager.io
    resourceVersion: "2490"
    uid: 25438813-4480-4e2f-aca1-554e640a56bb
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJ3ekNDQVVpZ0F3SUJBZ0lSQUp1UTVrL2dQcjIxSmxZcm9PRlhWdnd3Q2dZSUtvWkl6ajBFQXdNd0lqRWcKTUI0R0ExVUVBeE1YWTJWeWRDMXRZVzVoWjJWeUxYZGxZbWh2YjJzdFkyRXdIaGNOTWpFeE1qQTBNVGN3TkRJNQpXaGNOTWpJeE1qQTBNVGN3TkRJNVdqQWlNU0F3SGdZRFZRUURFeGRqWlhKMExXMWhibUZuWlhJdGQyVmlhRzl2CmF5MWpZVEIyTUJBR0J5cUdTTTQ5QWdFR0JTdUJCQUFpQTJJQUJNeXNkL090dkRqYVZ6ZXBvMXhabks5aVRsOVAKeHZ3L3ljZkg0UU80VHozSFhPT3A3U1p4WjhsWlA4WHFuZGpWdnl6dm9ka0hxMFUrbjdySjQ5aEt2aEtWRS81SQphdjRtM2NBZ1NFUVh4aXh0NmFaWDc2cXkydmNMMmZQTnpWK1NFNk5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trCk1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZOQ014dTNWSmJTV1VNbzJXYUg2SEV2a0prTjkKTUFvR0NDcUdTTTQ5QkFNREEya0FNR1lDTVFDZ2JkUVBiZ2s1K2J2UjEyZ1l6VVQwSlJLeG1WRHRBeXRwWVN2ZQpjQXc0TVBXNFNjN0ptbjEyNHg5cG0rUTJvTE1DTVFDUnc4RDBpWnVCV1RnVE5OT2htVEh1MklRVXBJaFNtR3REClg4ZW5aZ1FmdEVBTVJzaHQwVUl6bXVlWmVSTlhUd0E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
          service:
            name: cert-manager-cert-manager-webhook
            namespace: cert-manager
            path: /convert
            port: 443
        conversionReviewVersions:
        - v1
        - v1beta1
    group: cert-manager.io
    names:
      categories:
      - cert-manager
      kind: Certificate
      listKind: CertificateList
      plural: certificates
      shortNames:
      - cert
      - certs
      singular: certificate
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .spec.secretName
        name: Secret
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        priority: 1
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: "A Certificate resource should be created to ensure an up to
            date and signed x509 certificate is stored in the Kubernetes Secret resource
            named in `spec.secretName`. \n The stored certificate will be renewed
            before it expires (as configured by `spec.renewBefore`)."
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the Certificate resource.
              properties:
                commonName:
                  description: 'CommonName is a common name to be used on the Certificate.
                    The CommonName should have a length of 64 characters or fewer
                    to avoid generating invalid CSRs. This value is ignored by TLS
                    clients when any subject alt name is set. This is x509 behaviour:
                    https://tools.ietf.org/html/rfc6125#section-6.4.4'
                  type: string
                dnsNames:
                  description: DNSNames is a list of DNS subjectAltNames to be set
                    on the Certificate.
                  items:
                    type: string
                  type: array
                duration:
                  description: The requested 'duration' (i.e. lifetime) of the Certificate.
                    This option may be ignored/overridden by some issuer types. If
                    unset this defaults to 90 days. Certificate will be renewed either
                    2/3 through its duration or `renewBefore` period before its expiry,
                    whichever is later. Minimum accepted duration is 1 hour. Value
                    must be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration
                  type: string
                emailSANs:
                  description: EmailSANs is a list of email subjectAltNames to be
                    set on the Certificate.
                  items:
                    type: string
                  type: array
                encodeUsagesInRequest:
                  description: EncodeUsagesInRequest controls whether key usages should
                    be present in the CertificateRequest
                  type: boolean
                ipAddresses:
                  description: IPAddresses is a list of IP address subjectAltNames
                    to be set on the Certificate.
                  items:
                    type: string
                  type: array
                isCA:
                  description: IsCA will mark this Certificate as valid for certificate
                    signing. This will automatically add the `cert sign` usage to
                    the list of `usages`.
                  type: boolean
                issuerRef:
                  description: IssuerRef is a reference to the issuer for this certificate.
                    If the `kind` field is not set, or set to `Issuer`, an Issuer
                    resource with the given name in the same namespace as the Certificate
                    will be used. If the `kind` field is set to `ClusterIssuer`, a
                    ClusterIssuer with the provided name will be used. The `name`
                    field in this stanza is required at all times.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                keyAlgorithm:
                  description: KeyAlgorithm is the private key algorithm of the corresponding
                    private key for this certificate. If provided, allowed values
                    are either `rsa` or `ecdsa` If `keyAlgorithm` is specified and
                    `keySize` is not provided, key size of 256 will be used for `ecdsa`
                    key algorithm and key size of 2048 will be used for `rsa` key
                    algorithm.
                  enum:
                  - rsa
                  - ecdsa
                  type: string
                keyEncoding:
                  description: KeyEncoding is the private key cryptography standards
                    (PKCS) for this certificate's private key to be encoded in. If
                    provided, allowed values are `pkcs1` and `pkcs8` standing for
                    PKCS#1 and PKCS#8, respectively. If KeyEncoding is not specified,
                    then `pkcs1` will be used by default.
                  enum:
                  - pkcs1
                  - pkcs8
                  type: string
                keySize:
                  description: KeySize is the key bit size of the corresponding private
                    key for this certificate. If `keyAlgorithm` is set to `rsa`, valid
                    values are `2048`, `4096` or `8192`, and will default to `2048`
                    if not specified. If `keyAlgorithm` is set to `ecdsa`, valid values
                    are `256`, `384` or `521`, and will default to `256` if not specified.
                    No other values are allowed.
                  type: integer
                keystores:
                  description: Keystores configures additional keystore output formats
                    stored in the `secretName` Secret resource.
                  properties:
                    jks:
                      description: JKS configures options for storing a JKS keystore
                        in the `spec.secretName` Secret resource.
                      properties:
                        create:
                          description: Create enables JKS keystore creation for the
                            Certificate. If true, a file named `keystore.jks` will
                            be created in the target Secret resource, encrypted using
                            the password stored in `passwordSecretRef`. The keystore
                            file will only be updated upon re-issuance.
                          type: boolean
                        passwordSecretRef:
                          description: PasswordSecretRef is a reference to a key in
                            a Secret resource containing the password used to encrypt
                            the JKS keystore.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - create
                      - passwordSecretRef
                      type: object
                    pkcs12:
                      description: PKCS12 configures options for storing a PKCS12
                        keystore in the `spec.secretName` Secret resource.
                      properties:
                        create:
                          description: Create enables PKCS12 keystore creation for
                            the Certificate. If true, a file named `keystore.p12`
                            will be created in the target Secret resource, encrypted
                            using the password stored in `passwordSecretRef`. The
                            keystore file will only be updated upon re-issuance.
                          type: boolean
                        passwordSecretRef:
                          description: PasswordSecretRef is a reference to a key in
                            a Secret resource containing the password used to encrypt
                            the PKCS12 keystore.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - create
                      - passwordSecretRef
                      type: object
                  type: object
                organization:
                  description: Organization is a list of organizations to be used
                    on the Certificate.
                  items:
                    type: string
                  type: array
                privateKey:
                  description: Options to control private keys used for the Certificate.
                  properties:
                    rotationPolicy:
                      description: RotationPolicy controls how private keys should
                        be regenerated when a re-issuance is being processed. If set
                        to Never, a private key will only be generated if one does
                        not already exist in the target `spec.secretName`. If one
                        does exists but it does not have the correct algorithm or
                        size, a warning will be raised to await user intervention.
                        If set to Always, a private key matching the specified requirements
                        will be generated whenever a re-issuance occurs. Default is
                        'Never' for backward compatibility.
                      type: string
                  type: object
                renewBefore:
                  description: How long before the currently issued certificate's
                    expiry cert-manager should renew the certificate. The default
                    is 2/3 of the issued certificate's duration. Minimum accepted
                    value is 5 minutes. Value must be in units accepted by Go time.ParseDuration
                    https://golang.org/pkg/time/#ParseDuration
                  type: string
                revisionHistoryLimit:
                  description: revisionHistoryLimit is the maximum number of CertificateRequest
                    revisions that are maintained in the Certificate's history. Each
                    revision represents a single `CertificateRequest` created by this
                    Certificate, either when it was created, renewed, or Spec was
                    changed. Revisions will be removed by oldest first if the number
                    of revisions exceeds this number. If set, revisionHistoryLimit
                    must be a value of `1` or greater. If unset (`nil`), revisions
                    will not be garbage collected. Default value is `nil`.
                  format: int32
                  type: integer
                secretName:
                  description: SecretName is the name of the secret resource that
                    will be automatically created and managed by this Certificate
                    resource. It will be populated with a private key and certificate,
                    signed by the denoted issuer.
                  type: string
                secretTemplate:
                  description: SecretTemplate defines annotations and labels to be
                    propagated to the Kubernetes Secret when it is created or updated.
                    Once created, labels and annotations are not yet removed from
                    the Secret when they are removed from the template. See https://github.com/jetstack/cert-manager/issues/4292
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations is a key value map to be copied to
                        the target Kubernetes Secret.
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels is a key value map to be copied to the target
                        Kubernetes Secret.
                      type: object
                  type: object
                subject:
                  description: Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).
                  properties:
                    countries:
                      description: Countries to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    localities:
                      description: Cities to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    organizationalUnits:
                      description: Organizational Units to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    postalCodes:
                      description: Postal codes to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    provinces:
                      description: State/Provinces to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    serialNumber:
                      description: Serial number to be used on the Certificate.
                      type: string
                    streetAddresses:
                      description: Street addresses to be used on the Certificate.
                      items:
                        type: string
                      type: array
                  type: object
                uriSANs:
                  description: URISANs is a list of URI subjectAltNames to be set
                    on the Certificate.
                  items:
                    type: string
                  type: array
                usages:
                  description: Usages is the set of x509 usages that are requested
                    for the certificate. Defaults to `digital signature` and `key
                    encipherment` if not specified.
                  items:
                    description: 'KeyUsage specifies valid usage contexts for keys.
                      See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12
                      Valid KeyUsage values are as follows: "signing", "digital signature",
                      "content commitment", "key encipherment", "key agreement", "data
                      encipherment", "cert sign", "crl sign", "encipher only", "decipher
                      only", "any", "server auth", "client auth", "code signing",
                      "email protection", "s/mime", "ipsec end system", "ipsec tunnel",
                      "ipsec user", "timestamping", "ocsp signing", "microsoft sgc",
                      "netscape sgc"'
                    enum:
                    - signing
                    - digital signature
                    - content commitment
                    - key encipherment
                    - key agreement
                    - data encipherment
                    - cert sign
                    - crl sign
                    - encipher only
                    - decipher only
                    - any
                    - server auth
                    - client auth
                    - code signing
                    - email protection
                    - s/mime
                    - ipsec end system
                    - ipsec tunnel
                    - ipsec user
                    - timestamping
                    - ocsp signing
                    - microsoft sgc
                    - netscape sgc
                    type: string
                  type: array
              required:
              - issuerRef
              - secretName
              type: object
            status:
              description: Status of the Certificate. This is set and managed automatically.
              properties:
                conditions:
                  description: List of status conditions to indicate the status of
                    certificates. Known condition types are `Ready` and `Issuing`.
                  items:
                    description: CertificateCondition contains condition information
                      for an Certificate.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.condition[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the Certificate.
                        format: int64
                        type: integer
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`,
                          `Issuing`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                lastFailureTime:
                  description: LastFailureTime is the time as recorded by the Certificate
                    controller of the most recent failure to complete a CertificateRequest
                    for this Certificate resource. If set, cert-manager will not re-request
                    another Certificate until 1 hour has elapsed from this time.
                  format: date-time
                  type: string
                nextPrivateKeySecretName:
                  description: The name of the Secret resource containing the private
                    key to be used for the next certificate iteration. The keymanager
                    controller will automatically set this field if the `Issuing`
                    condition is set to `True`. It will automatically unset this field
                    when the Issuing condition is not set or False.
                  type: string
                notAfter:
                  description: The expiration time of the certificate stored in the
                    secret named by this resource in `spec.secretName`.
                  format: date-time
                  type: string
                notBefore:
                  description: The time after which the certificate stored in the
                    secret named by this resource in spec.secretName is valid.
                  format: date-time
                  type: string
                renewalTime:
                  description: RenewalTime is the time at which the certificate will
                    be next renewed. If not set, no upcoming renewal is scheduled.
                  format: date-time
                  type: string
                revision:
                  description: "The current 'revision' of the certificate as issued.
                    \n When a CertificateRequest resource is created, it will have
                    the `cert-manager.io/certificate-revision` set to one greater
                    than the current value of this field. \n Upon issuance, this field
                    will be set to the value of the annotation on the CertificateRequest
                    resource used to issue the certificate. \n Persisting the value
                    on the CertificateRequest resource allows the certificates controller
                    to know whether a request is part of an old issuance or if it
                    is part of the ongoing revision's issuance by checking if the
                    revision value in the annotation is greater than this field."
                  type: integer
              type: object
          type: object
      served: false
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .spec.secretName
        name: Secret
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        priority: 1
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha3
      schema:
        openAPIV3Schema:
          description: "A Certificate resource should be created to ensure an up to
            date and signed x509 certificate is stored in the Kubernetes Secret resource
            named in `spec.secretName`. \n The stored certificate will be renewed
            before it expires (as configured by `spec.renewBefore`)."
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the Certificate resource.
              properties:
                commonName:
                  description: 'CommonName is a common name to be used on the Certificate.
                    The CommonName should have a length of 64 characters or fewer
                    to avoid generating invalid CSRs. This value is ignored by TLS
                    clients when any subject alt name is set. This is x509 behaviour:
                    https://tools.ietf.org/html/rfc6125#section-6.4.4'
                  type: string
                dnsNames:
                  description: DNSNames is a list of DNS subjectAltNames to be set
                    on the Certificate.
                  items:
                    type: string
                  type: array
                duration:
                  description: The requested 'duration' (i.e. lifetime) of the Certificate.
                    This option may be ignored/overridden by some issuer types. If
                    unset this defaults to 90 days. Certificate will be renewed either
                    2/3 through its duration or `renewBefore` period before its expiry,
                    whichever is later. Minimum accepted duration is 1 hour. Value
                    must be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration
                  type: string
                emailSANs:
                  description: EmailSANs is a list of email subjectAltNames to be
                    set on the Certificate.
                  items:
                    type: string
                  type: array
                encodeUsagesInRequest:
                  description: EncodeUsagesInRequest controls whether key usages should
                    be present in the CertificateRequest
                  type: boolean
                ipAddresses:
                  description: IPAddresses is a list of IP address subjectAltNames
                    to be set on the Certificate.
                  items:
                    type: string
                  type: array
                isCA:
                  description: IsCA will mark this Certificate as valid for certificate
                    signing. This will automatically add the `cert sign` usage to
                    the list of `usages`.
                  type: boolean
                issuerRef:
                  description: IssuerRef is a reference to the issuer for this certificate.
                    If the `kind` field is not set, or set to `Issuer`, an Issuer
                    resource with the given name in the same namespace as the Certificate
                    will be used. If the `kind` field is set to `ClusterIssuer`, a
                    ClusterIssuer with the provided name will be used. The `name`
                    field in this stanza is required at all times.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                keyAlgorithm:
                  description: KeyAlgorithm is the private key algorithm of the corresponding
                    private key for this certificate. If provided, allowed values
                    are either `rsa` or `ecdsa` If `keyAlgorithm` is specified and
                    `keySize` is not provided, key size of 256 will be used for `ecdsa`
                    key algorithm and key size of 2048 will be used for `rsa` key
                    algorithm.
                  enum:
                  - rsa
                  - ecdsa
                  type: string
                keyEncoding:
                  description: KeyEncoding is the private key cryptography standards
                    (PKCS) for this certificate's private key to be encoded in. If
                    provided, allowed values are `pkcs1` and `pkcs8` standing for
                    PKCS#1 and PKCS#8, respectively. If KeyEncoding is not specified,
                    then `pkcs1` will be used by default.
                  enum:
                  - pkcs1
                  - pkcs8
                  type: string
                keySize:
                  description: KeySize is the key bit size of the corresponding private
                    key for this certificate. If `keyAlgorithm` is set to `rsa`, valid
                    values are `2048`, `4096` or `8192`, and will default to `2048`
                    if not specified. If `keyAlgorithm` is set to `ecdsa`, valid values
                    are `256`, `384` or `521`, and will default to `256` if not specified.
                    No other values are allowed.
                  type: integer
                keystores:
                  description: Keystores configures additional keystore output formats
                    stored in the `secretName` Secret resource.
                  properties:
                    jks:
                      description: JKS configures options for storing a JKS keystore
                        in the `spec.secretName` Secret resource.
                      properties:
                        create:
                          description: Create enables JKS keystore creation for the
                            Certificate. If true, a file named `keystore.jks` will
                            be created in the target Secret resource, encrypted using
                            the password stored in `passwordSecretRef`. The keystore
                            file will only be updated upon re-issuance. A file named
                            `truststore.jks` will also be created in the target Secret
                            resource, encrypted using the password stored in `passwordSecretRef`
                            containing the issuing Certificate Authority.
                          type: boolean
                        passwordSecretRef:
                          description: PasswordSecretRef is a reference to a key in
                            a Secret resource containing the password used to encrypt
                            the JKS keystore.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - create
                      - passwordSecretRef
                      type: object
                    pkcs12:
                      description: PKCS12 configures options for storing a PKCS12
                        keystore in the `spec.secretName` Secret resource.
                      properties:
                        create:
                          description: Create enables PKCS12 keystore creation for
                            the Certificate. If true, a file named `keystore.p12`
                            will be created in the target Secret resource, encrypted
                            using the password stored in `passwordSecretRef`. The
                            keystore file will only be updated upon re-issuance. A
                            file named `truststore.p12` will also be created in the
                            target Secret resource, encrypted using the password stored
                            in `passwordSecretRef` containing the issuing Certificate
                            Authority.
                          type: boolean
                        passwordSecretRef:
                          description: PasswordSecretRef is a reference to a key in
                            a Secret resource containing the password used to encrypt
                            the PKCS12 keystore.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - create
                      - passwordSecretRef
                      type: object
                  type: object
                privateKey:
                  description: Options to control private keys used for the Certificate.
                  properties:
                    rotationPolicy:
                      description: RotationPolicy controls how private keys should
                        be regenerated when a re-issuance is being processed. If set
                        to Never, a private key will only be generated if one does
                        not already exist in the target `spec.secretName`. If one
                        does exists but it does not have the correct algorithm or
                        size, a warning will be raised to await user intervention.
                        If set to Always, a private key matching the specified requirements
                        will be generated whenever a re-issuance occurs. Default is
                        'Never' for backward compatibility.
                      type: string
                  type: object
                renewBefore:
                  description: How long before the currently issued certificate's
                    expiry cert-manager should renew the certificate. The default
                    is 2/3 of the issued certificate's duration. Minimum accepted
                    value is 5 minutes. Value must be in units accepted by Go time.ParseDuration
                    https://golang.org/pkg/time/#ParseDuration
                  type: string
                revisionHistoryLimit:
                  description: revisionHistoryLimit is the maximum number of CertificateRequest
                    revisions that are maintained in the Certificate's history. Each
                    revision represents a single `CertificateRequest` created by this
                    Certificate, either when it was created, renewed, or Spec was
                    changed. Revisions will be removed by oldest first if the number
                    of revisions exceeds this number. If set, revisionHistoryLimit
                    must be a value of `1` or greater. If unset (`nil`), revisions
                    will not be garbage collected. Default value is `nil`.
                  format: int32
                  type: integer
                secretName:
                  description: SecretName is the name of the secret resource that
                    will be automatically created and managed by this Certificate
                    resource. It will be populated with a private key and certificate,
                    signed by the denoted issuer.
                  type: string
                secretTemplate:
                  description: SecretTemplate defines annotations and labels to be
                    propagated to the Kubernetes Secret when it is created or updated.
                    Once created, labels and annotations are not yet removed from
                    the Secret when they are removed from the template. See https://github.com/jetstack/cert-manager/issues/4292
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations is a key value map to be copied to
                        the target Kubernetes Secret.
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels is a key value map to be copied to the target
                        Kubernetes Secret.
                      type: object
                  type: object
                subject:
                  description: Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).
                  properties:
                    countries:
                      description: Countries to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    localities:
                      description: Cities to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    organizationalUnits:
                      description: Organizational Units to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    organizations:
                      description: Organizations to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    postalCodes:
                      description: Postal codes to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    provinces:
                      description: State/Provinces to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    serialNumber:
                      description: Serial number to be used on the Certificate.
                      type: string
                    streetAddresses:
                      description: Street addresses to be used on the Certificate.
                      items:
                        type: string
                      type: array
                  type: object
                uriSANs:
                  description: URISANs is a list of URI subjectAltNames to be set
                    on the Certificate.
                  items:
                    type: string
                  type: array
                usages:
                  description: Usages is the set of x509 usages that are requested
                    for the certificate. Defaults to `digital signature` and `key
                    encipherment` if not specified.
                  items:
                    description: 'KeyUsage specifies valid usage contexts for keys.
                      See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12
                      Valid KeyUsage values are as follows: "signing", "digital signature",
                      "content commitment", "key encipherment", "key agreement", "data
                      encipherment", "cert sign", "crl sign", "encipher only", "decipher
                      only", "any", "server auth", "client auth", "code signing",
                      "email protection", "s/mime", "ipsec end system", "ipsec tunnel",
                      "ipsec user", "timestamping", "ocsp signing", "microsoft sgc",
                      "netscape sgc"'
                    enum:
                    - signing
                    - digital signature
                    - content commitment
                    - key encipherment
                    - key agreement
                    - data encipherment
                    - cert sign
                    - crl sign
                    - encipher only
                    - decipher only
                    - any
                    - server auth
                    - client auth
                    - code signing
                    - email protection
                    - s/mime
                    - ipsec end system
                    - ipsec tunnel
                    - ipsec user
                    - timestamping
                    - ocsp signing
                    - microsoft sgc
                    - netscape sgc
                    type: string
                  type: array
              required:
              - issuerRef
              - secretName
              type: object
            status:
              description: Status of the Certificate. This is set and managed automatically.
              properties:
                conditions:
                  description: List of status conditions to indicate the status of
                    certificates. Known condition types are `Ready` and `Issuing`.
                  items:
                    description: CertificateCondition contains condition information
                      for an Certificate.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.condition[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the Certificate.
                        format: int64
                        type: integer
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`,
                          `Issuing`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                lastFailureTime:
                  description: LastFailureTime is the time as recorded by the Certificate
                    controller of the most recent failure to complete a CertificateRequest
                    for this Certificate resource. If set, cert-manager will not re-request
                    another Certificate until 1 hour has elapsed from this time.
                  format: date-time
                  type: string
                nextPrivateKeySecretName:
                  description: The name of the Secret resource containing the private
                    key to be used for the next certificate iteration. The keymanager
                    controller will automatically set this field if the `Issuing`
                    condition is set to `True`. It will automatically unset this field
                    when the Issuing condition is not set or False.
                  type: string
                notAfter:
                  description: The expiration time of the certificate stored in the
                    secret named by this resource in `spec.secretName`.
                  format: date-time
                  type: string
                notBefore:
                  description: The time after which the certificate stored in the
                    secret named by this resource in spec.secretName is valid.
                  format: date-time
                  type: string
                renewalTime:
                  description: RenewalTime is the time at which the certificate will
                    be next renewed. If not set, no upcoming renewal is scheduled.
                  format: date-time
                  type: string
                revision:
                  description: "The current 'revision' of the certificate as issued.
                    \n When a CertificateRequest resource is created, it will have
                    the `cert-manager.io/certificate-revision` set to one greater
                    than the current value of this field. \n Upon issuance, this field
                    will be set to the value of the annotation on the CertificateRequest
                    resource used to issue the certificate. \n Persisting the value
                    on the CertificateRequest resource allows the certificates controller
                    to know whether a request is part of an old issuance or if it
                    is part of the ongoing revision's issuance by checking if the
                    revision value in the annotation is greater than this field."
                  type: integer
              type: object
          type: object
      served: false
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .spec.secretName
        name: Secret
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        priority: 1
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: "A Certificate resource should be created to ensure an up to
            date and signed x509 certificate is stored in the Kubernetes Secret resource
            named in `spec.secretName`. \n The stored certificate will be renewed
            before it expires (as configured by `spec.renewBefore`)."
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the Certificate resource.
              properties:
                commonName:
                  description: 'CommonName is a common name to be used on the Certificate.
                    The CommonName should have a length of 64 characters or fewer
                    to avoid generating invalid CSRs. This value is ignored by TLS
                    clients when any subject alt name is set. This is x509 behaviour:
                    https://tools.ietf.org/html/rfc6125#section-6.4.4'
                  type: string
                dnsNames:
                  description: DNSNames is a list of DNS subjectAltNames to be set
                    on the Certificate.
                  items:
                    type: string
                  type: array
                duration:
                  description: The requested 'duration' (i.e. lifetime) of the Certificate.
                    This option may be ignored/overridden by some issuer types. If
                    unset this defaults to 90 days. Certificate will be renewed either
                    2/3 through its duration or `renewBefore` period before its expiry,
                    whichever is later. Minimum accepted duration is 1 hour. Value
                    must be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration
                  type: string
                emailSANs:
                  description: EmailSANs is a list of email subjectAltNames to be
                    set on the Certificate.
                  items:
                    type: string
                  type: array
                encodeUsagesInRequest:
                  description: EncodeUsagesInRequest controls whether key usages should
                    be present in the CertificateRequest
                  type: boolean
                ipAddresses:
                  description: IPAddresses is a list of IP address subjectAltNames
                    to be set on the Certificate.
                  items:
                    type: string
                  type: array
                isCA:
                  description: IsCA will mark this Certificate as valid for certificate
                    signing. This will automatically add the `cert sign` usage to
                    the list of `usages`.
                  type: boolean
                issuerRef:
                  description: IssuerRef is a reference to the issuer for this certificate.
                    If the `kind` field is not set, or set to `Issuer`, an Issuer
                    resource with the given name in the same namespace as the Certificate
                    will be used. If the `kind` field is set to `ClusterIssuer`, a
                    ClusterIssuer with the provided name will be used. The `name`
                    field in this stanza is required at all times.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                keystores:
                  description: Keystores configures additional keystore output formats
                    stored in the `secretName` Secret resource.
                  properties:
                    jks:
                      description: JKS configures options for storing a JKS keystore
                        in the `spec.secretName` Secret resource.
                      properties:
                        create:
                          description: Create enables JKS keystore creation for the
                            Certificate. If true, a file named `keystore.jks` will
                            be created in the target Secret resource, encrypted using
                            the password stored in `passwordSecretRef`. The keystore
                            file will only be updated upon re-issuance.
                          type: boolean
                        passwordSecretRef:
                          description: PasswordSecretRef is a reference to a key in
                            a Secret resource containing the password used to encrypt
                            the JKS keystore.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - create
                      - passwordSecretRef
                      type: object
                    pkcs12:
                      description: PKCS12 configures options for storing a PKCS12
                        keystore in the `spec.secretName` Secret resource.
                      properties:
                        create:
                          description: Create enables PKCS12 keystore creation for
                            the Certificate. If true, a file named `keystore.p12`
                            will be created in the target Secret resource, encrypted
                            using the password stored in `passwordSecretRef`. The
                            keystore file will only be updated upon re-issuance.
                          type: boolean
                        passwordSecretRef:
                          description: PasswordSecretRef is a reference to a key in
                            a Secret resource containing the password used to encrypt
                            the PKCS12 keystore.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - create
                      - passwordSecretRef
                      type: object
                  type: object
                privateKey:
                  description: Options to control private keys used for the Certificate.
                  properties:
                    algorithm:
                      description: Algorithm is the private key algorithm of the corresponding
                        private key for this certificate. If provided, allowed values
                        are either `RSA` or `ECDSA` If `algorithm` is specified and
                        `size` is not provided, key size of 256 will be used for `ECDSA`
                        key algorithm and key size of 2048 will be used for `RSA`
                        key algorithm.
                      enum:
                      - RSA
                      - ECDSA
                      type: string
                    encoding:
                      description: The private key cryptography standards (PKCS) encoding
                        for this certificate's private key to be encoded in. If provided,
                        allowed values are `PKCS1` and `PKCS8` standing for PKCS#1
                        and PKCS#8, respectively. Defaults to `PKCS1` if not specified.
                      enum:
                      - PKCS1
                      - PKCS8
                      type: string
                    rotationPolicy:
                      description: RotationPolicy controls how private keys should
                        be regenerated when a re-issuance is being processed. If set
                        to Never, a private key will only be generated if one does
                        not already exist in the target `spec.secretName`. If one
                        does exists but it does not have the correct algorithm or
                        size, a warning will be raised to await user intervention.
                        If set to Always, a private key matching the specified requirements
                        will be generated whenever a re-issuance occurs. Default is
                        'Never' for backward compatibility.
                      type: string
                    size:
                      description: Size is the key bit size of the corresponding private
                        key for this certificate. If `algorithm` is set to `RSA`,
                        valid values are `2048`, `4096` or `8192`, and will default
                        to `2048` if not specified. If `algorithm` is set to `ECDSA`,
                        valid values are `256`, `384` or `521`, and will default to
                        `256` if not specified. No other values are allowed.
                      type: integer
                  type: object
                renewBefore:
                  description: How long before the currently issued certificate's
                    expiry cert-manager should renew the certificate. The default
                    is 2/3 of the issued certificate's duration. Minimum accepted
                    value is 5 minutes. Value must be in units accepted by Go time.ParseDuration
                    https://golang.org/pkg/time/#ParseDuration
                  type: string
                revisionHistoryLimit:
                  description: revisionHistoryLimit is the maximum number of CertificateRequest
                    revisions that are maintained in the Certificate's history. Each
                    revision represents a single `CertificateRequest` created by this
                    Certificate, either when it was created, renewed, or Spec was
                    changed. Revisions will be removed by oldest first if the number
                    of revisions exceeds this number. If set, revisionHistoryLimit
                    must be a value of `1` or greater. If unset (`nil`), revisions
                    will not be garbage collected. Default value is `nil`.
                  format: int32
                  type: integer
                secretName:
                  description: SecretName is the name of the secret resource that
                    will be automatically created and managed by this Certificate
                    resource. It will be populated with a private key and certificate,
                    signed by the denoted issuer.
                  type: string
                secretTemplate:
                  description: SecretTemplate defines annotations and labels to be
                    propagated to the Kubernetes Secret when it is created or updated.
                    Once created, labels and annotations are not yet removed from
                    the Secret when they are removed from the template. See https://github.com/jetstack/cert-manager/issues/4292
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations is a key value map to be copied to
                        the target Kubernetes Secret.
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels is a key value map to be copied to the target
                        Kubernetes Secret.
                      type: object
                  type: object
                subject:
                  description: Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).
                  properties:
                    countries:
                      description: Countries to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    localities:
                      description: Cities to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    organizationalUnits:
                      description: Organizational Units to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    organizations:
                      description: Organizations to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    postalCodes:
                      description: Postal codes to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    provinces:
                      description: State/Provinces to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    serialNumber:
                      description: Serial number to be used on the Certificate.
                      type: string
                    streetAddresses:
                      description: Street addresses to be used on the Certificate.
                      items:
                        type: string
                      type: array
                  type: object
                uriSANs:
                  description: URISANs is a list of URI subjectAltNames to be set
                    on the Certificate.
                  items:
                    type: string
                  type: array
                usages:
                  description: Usages is the set of x509 usages that are requested
                    for the certificate. Defaults to `digital signature` and `key
                    encipherment` if not specified.
                  items:
                    description: 'KeyUsage specifies valid usage contexts for keys.
                      See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12
                      Valid KeyUsage values are as follows: "signing", "digital signature",
                      "content commitment", "key encipherment", "key agreement", "data
                      encipherment", "cert sign", "crl sign", "encipher only", "decipher
                      only", "any", "server auth", "client auth", "code signing",
                      "email protection", "s/mime", "ipsec end system", "ipsec tunnel",
                      "ipsec user", "timestamping", "ocsp signing", "microsoft sgc",
                      "netscape sgc"'
                    enum:
                    - signing
                    - digital signature
                    - content commitment
                    - key encipherment
                    - key agreement
                    - data encipherment
                    - cert sign
                    - crl sign
                    - encipher only
                    - decipher only
                    - any
                    - server auth
                    - client auth
                    - code signing
                    - email protection
                    - s/mime
                    - ipsec end system
                    - ipsec tunnel
                    - ipsec user
                    - timestamping
                    - ocsp signing
                    - microsoft sgc
                    - netscape sgc
                    type: string
                  type: array
              required:
              - issuerRef
              - secretName
              type: object
            status:
              description: Status of the Certificate. This is set and managed automatically.
              properties:
                conditions:
                  description: List of status conditions to indicate the status of
                    certificates. Known condition types are `Ready` and `Issuing`.
                  items:
                    description: CertificateCondition contains condition information
                      for an Certificate.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.condition[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the Certificate.
                        format: int64
                        type: integer
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`,
                          `Issuing`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                lastFailureTime:
                  description: LastFailureTime is the time as recorded by the Certificate
                    controller of the most recent failure to complete a CertificateRequest
                    for this Certificate resource. If set, cert-manager will not re-request
                    another Certificate until 1 hour has elapsed from this time.
                  format: date-time
                  type: string
                nextPrivateKeySecretName:
                  description: The name of the Secret resource containing the private
                    key to be used for the next certificate iteration. The keymanager
                    controller will automatically set this field if the `Issuing`
                    condition is set to `True`. It will automatically unset this field
                    when the Issuing condition is not set or False.
                  type: string
                notAfter:
                  description: The expiration time of the certificate stored in the
                    secret named by this resource in `spec.secretName`.
                  format: date-time
                  type: string
                notBefore:
                  description: The time after which the certificate stored in the
                    secret named by this resource in spec.secretName is valid.
                  format: date-time
                  type: string
                renewalTime:
                  description: RenewalTime is the time at which the certificate will
                    be next renewed. If not set, no upcoming renewal is scheduled.
                  format: date-time
                  type: string
                revision:
                  description: "The current 'revision' of the certificate as issued.
                    \n When a CertificateRequest resource is created, it will have
                    the `cert-manager.io/certificate-revision` set to one greater
                    than the current value of this field. \n Upon issuance, this field
                    will be set to the value of the annotation on the CertificateRequest
                    resource used to issue the certificate. \n Persisting the value
                    on the CertificateRequest resource allows the certificates controller
                    to know whether a request is part of an old issuance or if it
                    is part of the ongoing revision's issuance by checking if the
                    revision value in the annotation is greater than this field."
                  type: integer
              type: object
          required:
          - spec
          type: object
      served: false
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .spec.secretName
        name: Secret
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        priority: 1
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: "A Certificate resource should be created to ensure an up to
            date and signed x509 certificate is stored in the Kubernetes Secret resource
            named in `spec.secretName`. \n The stored certificate will be renewed
            before it expires (as configured by `spec.renewBefore`)."
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the Certificate resource.
              properties:
                commonName:
                  description: 'CommonName is a common name to be used on the Certificate.
                    The CommonName should have a length of 64 characters or fewer
                    to avoid generating invalid CSRs. This value is ignored by TLS
                    clients when any subject alt name is set. This is x509 behaviour:
                    https://tools.ietf.org/html/rfc6125#section-6.4.4'
                  type: string
                dnsNames:
                  description: DNSNames is a list of DNS subjectAltNames to be set
                    on the Certificate.
                  items:
                    type: string
                  type: array
                duration:
                  description: The requested 'duration' (i.e. lifetime) of the Certificate.
                    This option may be ignored/overridden by some issuer types. If
                    unset this defaults to 90 days. Certificate will be renewed either
                    2/3 through its duration or `renewBefore` period before its expiry,
                    whichever is later. Minimum accepted duration is 1 hour. Value
                    must be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration
                  type: string
                emailAddresses:
                  description: EmailAddresses is a list of email subjectAltNames to
                    be set on the Certificate.
                  items:
                    type: string
                  type: array
                encodeUsagesInRequest:
                  description: EncodeUsagesInRequest controls whether key usages should
                    be present in the CertificateRequest
                  type: boolean
                ipAddresses:
                  description: IPAddresses is a list of IP address subjectAltNames
                    to be set on the Certificate.
                  items:
                    type: string
                  type: array
                isCA:
                  description: IsCA will mark this Certificate as valid for certificate
                    signing. This will automatically add the `cert sign` usage to
                    the list of `usages`.
                  type: boolean
                issuerRef:
                  description: IssuerRef is a reference to the issuer for this certificate.
                    If the `kind` field is not set, or set to `Issuer`, an Issuer
                    resource with the given name in the same namespace as the Certificate
                    will be used. If the `kind` field is set to `ClusterIssuer`, a
                    ClusterIssuer with the provided name will be used. The `name`
                    field in this stanza is required at all times.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                keystores:
                  description: Keystores configures additional keystore output formats
                    stored in the `secretName` Secret resource.
                  properties:
                    jks:
                      description: JKS configures options for storing a JKS keystore
                        in the `spec.secretName` Secret resource.
                      properties:
                        create:
                          description: Create enables JKS keystore creation for the
                            Certificate. If true, a file named `keystore.jks` will
                            be created in the target Secret resource, encrypted using
                            the password stored in `passwordSecretRef`. The keystore
                            file will only be updated upon re-issuance. A file named
                            `truststore.jks` will also be created in the target Secret
                            resource, encrypted using the password stored in `passwordSecretRef`
                            containing the issuing Certificate Authority
                          type: boolean
                        passwordSecretRef:
                          description: PasswordSecretRef is a reference to a key in
                            a Secret resource containing the password used to encrypt
                            the JKS keystore.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - create
                      - passwordSecretRef
                      type: object
                    pkcs12:
                      description: PKCS12 configures options for storing a PKCS12
                        keystore in the `spec.secretName` Secret resource.
                      properties:
                        create:
                          description: Create enables PKCS12 keystore creation for
                            the Certificate. If true, a file named `keystore.p12`
                            will be created in the target Secret resource, encrypted
                            using the password stored in `passwordSecretRef`. The
                            keystore file will only be updated upon re-issuance. A
                            file named `truststore.p12` will also be created in the
                            target Secret resource, encrypted using the password stored
                            in `passwordSecretRef` containing the issuing Certificate
                            Authority
                          type: boolean
                        passwordSecretRef:
                          description: PasswordSecretRef is a reference to a key in
                            a Secret resource containing the password used to encrypt
                            the PKCS12 keystore.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - create
                      - passwordSecretRef
                      type: object
                  type: object
                privateKey:
                  description: Options to control private keys used for the Certificate.
                  properties:
                    algorithm:
                      description: Algorithm is the private key algorithm of the corresponding
                        private key for this certificate. If provided, allowed values
                        are either `RSA`,`Ed25519` or `ECDSA` If `algorithm` is specified
                        and `size` is not provided, key size of 256 will be used for
                        `ECDSA` key algorithm and key size of 2048 will be used for
                        `RSA` key algorithm. key size is ignored when using the `Ed25519`
                        key algorithm.
                      enum:
                      - RSA
                      - ECDSA
                      - Ed25519
                      type: string
                    encoding:
                      description: The private key cryptography standards (PKCS) encoding
                        for this certificate's private key to be encoded in. If provided,
                        allowed values are `PKCS1` and `PKCS8` standing for PKCS#1
                        and PKCS#8, respectively. Defaults to `PKCS1` if not specified.
                      enum:
                      - PKCS1
                      - PKCS8
                      type: string
                    rotationPolicy:
                      description: RotationPolicy controls how private keys should
                        be regenerated when a re-issuance is being processed. If set
                        to Never, a private key will only be generated if one does
                        not already exist in the target `spec.secretName`. If one
                        does exists but it does not have the correct algorithm or
                        size, a warning will be raised to await user intervention.
                        If set to Always, a private key matching the specified requirements
                        will be generated whenever a re-issuance occurs. Default is
                        'Never' for backward compatibility.
                      type: string
                    size:
                      description: Size is the key bit size of the corresponding private
                        key for this certificate. If `algorithm` is set to `RSA`,
                        valid values are `2048`, `4096` or `8192`, and will default
                        to `2048` if not specified. If `algorithm` is set to `ECDSA`,
                        valid values are `256`, `384` or `521`, and will default to
                        `256` if not specified. If `algorithm` is set to `Ed25519`,
                        Size is ignored. No other values are allowed.
                      type: integer
                  type: object
                renewBefore:
                  description: How long before the currently issued certificate's
                    expiry cert-manager should renew the certificate. The default
                    is 2/3 of the issued certificate's duration. Minimum accepted
                    value is 5 minutes. Value must be in units accepted by Go time.ParseDuration
                    https://golang.org/pkg/time/#ParseDuration
                  type: string
                revisionHistoryLimit:
                  description: revisionHistoryLimit is the maximum number of CertificateRequest
                    revisions that are maintained in the Certificate's history. Each
                    revision represents a single `CertificateRequest` created by this
                    Certificate, either when it was created, renewed, or Spec was
                    changed. Revisions will be removed by oldest first if the number
                    of revisions exceeds this number. If set, revisionHistoryLimit
                    must be a value of `1` or greater. If unset (`nil`), revisions
                    will not be garbage collected. Default value is `nil`.
                  format: int32
                  type: integer
                secretName:
                  description: SecretName is the name of the secret resource that
                    will be automatically created and managed by this Certificate
                    resource. It will be populated with a private key and certificate,
                    signed by the denoted issuer.
                  type: string
                secretTemplate:
                  description: SecretTemplate defines annotations and labels to be
                    propagated to the Kubernetes Secret when it is created or updated.
                    Once created, labels and annotations are not yet removed from
                    the Secret when they are removed from the template. See https://github.com/jetstack/cert-manager/issues/4292
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations is a key value map to be copied to
                        the target Kubernetes Secret.
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels is a key value map to be copied to the target
                        Kubernetes Secret.
                      type: object
                  type: object
                subject:
                  description: Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).
                  properties:
                    countries:
                      description: Countries to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    localities:
                      description: Cities to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    organizationalUnits:
                      description: Organizational Units to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    organizations:
                      description: Organizations to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    postalCodes:
                      description: Postal codes to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    provinces:
                      description: State/Provinces to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    serialNumber:
                      description: Serial number to be used on the Certificate.
                      type: string
                    streetAddresses:
                      description: Street addresses to be used on the Certificate.
                      items:
                        type: string
                      type: array
                  type: object
                uris:
                  description: URIs is a list of URI subjectAltNames to be set on
                    the Certificate.
                  items:
                    type: string
                  type: array
                usages:
                  description: Usages is the set of x509 usages that are requested
                    for the certificate. Defaults to `digital signature` and `key
                    encipherment` if not specified.
                  items:
                    description: 'KeyUsage specifies valid usage contexts for keys.
                      See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12
                      Valid KeyUsage values are as follows: "signing", "digital signature",
                      "content commitment", "key encipherment", "key agreement", "data
                      encipherment", "cert sign", "crl sign", "encipher only", "decipher
                      only", "any", "server auth", "client auth", "code signing",
                      "email protection", "s/mime", "ipsec end system", "ipsec tunnel",
                      "ipsec user", "timestamping", "ocsp signing", "microsoft sgc",
                      "netscape sgc"'
                    enum:
                    - signing
                    - digital signature
                    - content commitment
                    - key encipherment
                    - key agreement
                    - data encipherment
                    - cert sign
                    - crl sign
                    - encipher only
                    - decipher only
                    - any
                    - server auth
                    - client auth
                    - code signing
                    - email protection
                    - s/mime
                    - ipsec end system
                    - ipsec tunnel
                    - ipsec user
                    - timestamping
                    - ocsp signing
                    - microsoft sgc
                    - netscape sgc
                    type: string
                  type: array
              required:
              - issuerRef
              - secretName
              type: object
            status:
              description: Status of the Certificate. This is set and managed automatically.
              properties:
                conditions:
                  description: List of status conditions to indicate the status of
                    certificates. Known condition types are `Ready` and `Issuing`.
                  items:
                    description: CertificateCondition contains condition information
                      for an Certificate.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.condition[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the Certificate.
                        format: int64
                        type: integer
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`,
                          `Issuing`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                lastFailureTime:
                  description: LastFailureTime is the time as recorded by the Certificate
                    controller of the most recent failure to complete a CertificateRequest
                    for this Certificate resource. If set, cert-manager will not re-request
                    another Certificate until 1 hour has elapsed from this time.
                  format: date-time
                  type: string
                nextPrivateKeySecretName:
                  description: The name of the Secret resource containing the private
                    key to be used for the next certificate iteration. The keymanager
                    controller will automatically set this field if the `Issuing`
                    condition is set to `True`. It will automatically unset this field
                    when the Issuing condition is not set or False.
                  type: string
                notAfter:
                  description: The expiration time of the certificate stored in the
                    secret named by this resource in `spec.secretName`.
                  format: date-time
                  type: string
                notBefore:
                  description: The time after which the certificate stored in the
                    secret named by this resource in spec.secretName is valid.
                  format: date-time
                  type: string
                renewalTime:
                  description: RenewalTime is the time at which the certificate will
                    be next renewed. If not set, no upcoming renewal is scheduled.
                  format: date-time
                  type: string
                revision:
                  description: "The current 'revision' of the certificate as issued.
                    \n When a CertificateRequest resource is created, it will have
                    the `cert-manager.io/certificate-revision` set to one greater
                    than the current value of this field. \n Upon issuance, this field
                    will be set to the value of the annotation on the CertificateRequest
                    resource used to issue the certificate. \n Persisting the value
                    on the CertificateRequest resource allows the certificates controller
                    to know whether a request is part of an old issuance or if it
                    is part of the ongoing revision's issuance by checking if the
                    revision value in the annotation is greater than this field."
                  type: integer
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - cert-manager
      kind: Certificate
      listKind: CertificateList
      plural: certificates
      shortNames:
      - cert
      - certs
      singular: certificate
    conditions:
    - lastTransitionTime: "2021-12-04T17:04:20Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-04T17:04:21Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from-secret: cert-manager/cert-manager-cert-manager-webhook-ca
      meta.helm.sh/release-name: cert-manager-cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2021-12-04T17:04:19Z"
    generation: 2
    labels:
      app: cert-manager
      app.kubernetes.io/instance: cert-manager-cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.6.1
      helm.sh/chart: cert-manager-v1.6.1
      helm.toolkit.fluxcd.io/name: cert-manager
      helm.toolkit.fluxcd.io/namespace: flux-system
    name: challenges.acme.cert-manager.io
    resourceVersion: "2486"
    uid: d99e39c7-271c-4fc0-8a2d-45b4f7591aff
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJ3ekNDQVVpZ0F3SUJBZ0lSQUp1UTVrL2dQcjIxSmxZcm9PRlhWdnd3Q2dZSUtvWkl6ajBFQXdNd0lqRWcKTUI0R0ExVUVBeE1YWTJWeWRDMXRZVzVoWjJWeUxYZGxZbWh2YjJzdFkyRXdIaGNOTWpFeE1qQTBNVGN3TkRJNQpXaGNOTWpJeE1qQTBNVGN3TkRJNVdqQWlNU0F3SGdZRFZRUURFeGRqWlhKMExXMWhibUZuWlhJdGQyVmlhRzl2CmF5MWpZVEIyTUJBR0J5cUdTTTQ5QWdFR0JTdUJCQUFpQTJJQUJNeXNkL090dkRqYVZ6ZXBvMXhabks5aVRsOVAKeHZ3L3ljZkg0UU80VHozSFhPT3A3U1p4WjhsWlA4WHFuZGpWdnl6dm9ka0hxMFUrbjdySjQ5aEt2aEtWRS81SQphdjRtM2NBZ1NFUVh4aXh0NmFaWDc2cXkydmNMMmZQTnpWK1NFNk5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trCk1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZOQ014dTNWSmJTV1VNbzJXYUg2SEV2a0prTjkKTUFvR0NDcUdTTTQ5QkFNREEya0FNR1lDTVFDZ2JkUVBiZ2s1K2J2UjEyZ1l6VVQwSlJLeG1WRHRBeXRwWVN2ZQpjQXc0TVBXNFNjN0ptbjEyNHg5cG0rUTJvTE1DTVFDUnc4RDBpWnVCV1RnVE5OT2htVEh1MklRVXBJaFNtR3REClg4ZW5aZ1FmdEVBTVJzaHQwVUl6bXVlWmVSTlhUd0E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
          service:
            name: cert-manager-cert-manager-webhook
            namespace: cert-manager
            path: /convert
            port: 443
        conversionReviewVersions:
        - v1
        - v1beta1
    group: acme.cert-manager.io
    names:
      categories:
      - cert-manager
      - cert-manager-acme
      kind: Challenge
      listKind: ChallengeList
      plural: challenges
      singular: challenge
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.state
        name: State
        type: string
      - jsonPath: .spec.dnsName
        name: Domain
        type: string
      - jsonPath: .status.reason
        name: Reason
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: Challenge is a type to represent a Challenge request with an
            ACME server
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                authzURL:
                  description: AuthzURL is the URL to the ACME Authorization resource
                    that this challenge is a part of.
                  type: string
                dnsName:
                  description: DNSName is the identifier that this challenge is for,
                    e.g. example.com. If the requested DNSName is a 'wildcard', this
                    field MUST be set to the non-wildcard domain, e.g. for `*.example.com`,
                    it must be `example.com`.
                  type: string
                issuerRef:
                  description: IssuerRef references a properly configured ACME-type
                    Issuer which should be used to create this Challenge. If the Issuer
                    does not exist, processing will be retried. If the Issuer is not
                    an 'ACME' Issuer, an error will be returned and the Challenge
                    will be marked as failed.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                key:
                  description: 'Key is the ACME challenge key for this challenge For
                    HTTP01 challenges, this is the value that must be responded with
                    to complete the HTTP01 challenge in the format: `<private key
                    JWK thumbprint>.<key from acme server for challenge>`. For DNS01
                    challenges, this is the base64 encoded SHA256 sum of the `<private
                    key JWK thumbprint>.<key from acme server for challenge>` text
                    that must be set as the TXT record content.'
                  type: string
                solver:
                  description: Solver contains the domain solving configuration that
                    should be used to solve this challenge resource.
                  properties:
                    dns01:
                      description: Configures cert-manager to attempt to complete
                        authorizations by performing the DNS01 challenge flow.
                      properties:
                        acmedns:
                          description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                            API to manage DNS01 challenge records.
                          properties:
                            accountSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            host:
                              type: string
                          required:
                          - accountSecretRef
                          - host
                          type: object
                        akamai:
                          description: Use the Akamai DNS zone management API to manage
                            DNS01 challenge records.
                          properties:
                            accessTokenSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            clientSecretSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            clientTokenSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            serviceConsumerDomain:
                              type: string
                          required:
                          - accessTokenSecretRef
                          - clientSecretSecretRef
                          - clientTokenSecretRef
                          - serviceConsumerDomain
                          type: object
                        azuredns:
                          description: Use the Microsoft Azure DNS API to manage DNS01
                            challenge records.
                          properties:
                            clientID:
                              description: if both this and ClientSecret are left
                                unset MSI will be used
                              type: string
                            clientSecretSecretRef:
                              description: if both this and ClientID are left unset
                                MSI will be used
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            environment:
                              description: name of the Azure environment (default
                                AzurePublicCloud)
                              enum:
                              - AzurePublicCloud
                              - AzureChinaCloud
                              - AzureGermanCloud
                              - AzureUSGovernmentCloud
                              type: string
                            hostedZoneName:
                              description: name of the DNS zone that should be used
                              type: string
                            managedIdentity:
                              description: managed identity configuration, can not
                                be used at the same time as clientID, clientSecretSecretRef
                                or tenantID
                              properties:
                                clientID:
                                  description: client ID of the managed identity,
                                    can not be used at the same time as resourceID
                                  type: string
                                resourceID:
                                  description: resource ID of the managed identity,
                                    can not be used at the same time as clientID
                                  type: string
                              type: object
                            resourceGroupName:
                              description: resource group the DNS zone is located
                                in
                              type: string
                            subscriptionID:
                              description: ID of the Azure subscription
                              type: string
                            tenantID:
                              description: when specifying ClientID and ClientSecret
                                then this field is also needed
                              type: string
                          required:
                          - resourceGroupName
                          - subscriptionID
                          type: object
                        clouddns:
                          description: Use the Google Cloud DNS API to manage DNS01
                            challenge records.
                          properties:
                            hostedZoneName:
                              description: HostedZoneName is an optional field that
                                tells cert-manager in which Cloud DNS zone the challenge
                                record has to be created. If left empty cert-manager
                                will automatically choose a zone.
                              type: string
                            project:
                              type: string
                            serviceAccountSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - project
                          type: object
                        cloudflare:
                          description: Use the Cloudflare API to manage DNS01 challenge
                            records.
                          properties:
                            apiKeySecretRef:
                              description: 'API key to use to authenticate with Cloudflare.
                                Note: using an API token to authenticate is now the
                                recommended method as it allows greater control of
                                permissions.'
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            apiTokenSecretRef:
                              description: API token used to authenticate with Cloudflare.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            email:
                              description: Email of the account, only required when
                                using API key based authentication.
                              type: string
                          type: object
                        cnameStrategy:
                          description: CNAMEStrategy configures how the DNS01 provider
                            should handle CNAME records when found in DNS zones.
                          enum:
                          - None
                          - Follow
                          type: string
                        digitalocean:
                          description: Use the DigitalOcean DNS API to manage DNS01
                            challenge records.
                          properties:
                            tokenSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - tokenSecretRef
                          type: object
                        rfc2136:
                          description: Use RFC2136 ("Dynamic Updates in the Domain
                            Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                            to manage DNS01 challenge records.
                          properties:
                            nameserver:
                              description: The IP address or hostname of an authoritative
                                DNS server supporting RFC2136 in the form host:port.
                                If the host is an IPv6 address it must be enclosed
                                in square brackets (e.g [2001:db8::1]) ; port is optional.
                                This field is required.
                              type: string
                            tsigAlgorithm:
                              description: 'The TSIG Algorithm configured in the DNS
                                supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                and ``tsigKeyName`` are defined. Supported values
                                are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``,
                                ``HMACSHA256`` or ``HMACSHA512``.'
                              type: string
                            tsigKeyName:
                              description: The TSIG Key name configured in the DNS.
                                If ``tsigSecretSecretRef`` is defined, this field
                                is required.
                              type: string
                            tsigSecretSecretRef:
                              description: The name of the secret containing the TSIG
                                value. If ``tsigKeyName`` is defined, this field is
                                required.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - nameserver
                          type: object
                        route53:
                          description: Use the AWS Route53 API to manage DNS01 challenge
                            records.
                          properties:
                            accessKeyID:
                              description: 'The AccessKeyID is used for authentication.
                                If not set we fall-back to using env vars, shared
                                credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                              type: string
                            hostedZoneID:
                              description: If set, the provider will manage only this
                                zone in Route53 and will not do an lookup using the
                                route53:ListHostedZonesByName api call.
                              type: string
                            region:
                              description: Always set the region when using AccessKeyID
                                and SecretAccessKey
                              type: string
                            role:
                              description: Role is a Role ARN which the Route53 provider
                                will assume using either the explicit credentials
                                AccessKeyID/SecretAccessKey or the inferred credentials
                                from environment variables, shared credentials file
                                or AWS Instance metadata
                              type: string
                            secretAccessKeySecretRef:
                              description: The SecretAccessKey is used for authentication.
                                If not set we fall-back to using env vars, shared
                                credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - region
                          type: object
                        webhook:
                          description: Configure an external webhook based DNS01 challenge
                            solver to manage DNS01 challenge records.
                          properties:
                            config:
                              description: Additional configuration that should be
                                passed to the webhook apiserver when challenges are
                                processed. This can contain arbitrary JSON data. Secret
                                values should not be specified in this stanza. If
                                secret values are needed (e.g. credentials for a DNS
                                service), you should use a SecretKeySelector to reference
                                a Secret resource. For details on the schema of this
                                field, consult the webhook provider implementation's
                                documentation.
                              x-kubernetes-preserve-unknown-fields: true
                            groupName:
                              description: The API group name that should be used
                                when POSTing ChallengePayload resources to the webhook
                                apiserver. This should be the same as the GroupName
                                specified in the webhook provider implementation.
                              type: string
                            solverName:
                              description: The name of the solver to use, as defined
                                in the webhook provider implementation. This will
                                typically be the name of the provider, e.g. 'cloudflare'.
                              type: string
                          required:
                          - groupName
                          - solverName
                          type: object
                      type: object
                    http01:
                      description: Configures cert-manager to attempt to complete
                        authorizations by performing the HTTP01 challenge flow. It
                        is not possible to obtain certificates for wildcard domain
                        names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
                      properties:
                        gatewayHTTPRoute:
                          description: The Gateway API is a sig-network community
                            API that models service networking in Kubernetes (https://gateway-api.sigs.k8s.io/).
                            The Gateway solver will create HTTPRoutes with the specified
                            labels in the same namespace as the challenge. This solver
                            is experimental, and fields / behaviour may change in
                            the future.
                          properties:
                            labels:
                              additionalProperties:
                                type: string
                              description: The labels that cert-manager will use when
                                creating the temporary HTTPRoute needed for solving
                                the HTTP-01 challenge. These labels must match the
                                label selector of at least one Gateway.
                              type: object
                            serviceType:
                              description: Optional service type for Kubernetes solver
                                service. Supported values are NodePort or ClusterIP.
                                If unset, defaults to NodePort.
                              type: string
                          type: object
                        ingress:
                          description: The ingress based HTTP01 challenge solver will
                            solve challenges by creating or modifying Ingress resources
                            in order to route requests for '/.well-known/acme-challenge/XYZ'
                            to 'challenge solver' pods that are provisioned by cert-manager
                            for each Challenge to be completed.
                          properties:
                            class:
                              description: The ingress class to use when creating
                                Ingress resources to solve ACME challenges that use
                                this challenge solver. Only one of 'class' or 'name'
                                may be specified.
                              type: string
                            ingressTemplate:
                              description: Optional ingress template used to configure
                                the ACME challenge solver ingress used for HTTP01
                                challenges
                              properties:
                                metadata:
                                  description: ObjectMeta overrides for the ingress
                                    used to solve HTTP01 challenges. Only the 'labels'
                                    and 'annotations' fields may be set. If labels
                                    or annotations overlap with in-built values, the
                                    values here will override the in-built values.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations that should be added
                                        to the created ACME HTTP01 solver ingress.
                                      type: object
                                    labels:
                                      additionalProperties:
                                        type: string
                                      description: Labels that should be added to
                                        the created ACME HTTP01 solver ingress.
                                      type: object
                                  type: object
                              type: object
                            name:
                              description: The name of the ingress resource that should
                                have ACME challenge solving routes inserted into it
                                in order to solve HTTP01 challenges. This is typically
                                used in conjunction with ingress controllers like
                                ingress-gce, which maintains a 1:1 mapping between
                                external IPs and ingress resources.
                              type: string
                            podTemplate:
                              description: Optional pod template used to configure
                                the ACME challenge solver pods used for HTTP01 challenges.
                              properties:
                                metadata:
                                  description: ObjectMeta overrides for the pod used
                                    to solve HTTP01 challenges. Only the 'labels'
                                    and 'annotations' fields may be set. If labels
                                    or annotations overlap with in-built values, the
                                    values here will override the in-built values.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations that should be added
                                        to the create ACME HTTP01 solver pods.
                                      type: object
                                    labels:
                                      additionalProperties:
                                        type: string
                                      description: Labels that should be added to
                                        the created ACME HTTP01 solver pods.
                                      type: object
                                  type: object
                                spec:
                                  description: PodSpec defines overrides for the HTTP01
                                    challenge solver pod. Only the 'priorityClassName',
                                    'nodeSelector', 'affinity', 'serviceAccountName'
                                    and 'tolerations' fields are supported currently.
                                    All other fields will be ignored.
                                  properties:
                                    affinity:
                                      description: If specified, the pod's scheduling
                                        constraints
                                      properties:
                                        nodeAffinity:
                                          description: Describes node affinity scheduling
                                            rules for the pod.
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                affinity expressions, etc.), compute
                                                a sum by iterating through the elements
                                                of this field and adding "weight"
                                                to the sum if the node matches the
                                                corresponding matchExpressions; the
                                                node(s) with the highest sum are the
                                                most preferred.
                                              items:
                                                description: An empty preferred scheduling
                                                  term matches all objects with implicit
                                                  weight 0 (i.e. it's a no-op). A
                                                  null preferred scheduling term matches
                                                  no objects (i.e. is also a no-op).
                                                properties:
                                                  preference:
                                                    description: A node selector term,
                                                      associated with the corresponding
                                                      weight.
                                                    properties:
                                                      matchExpressions:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's labels.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchFields:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's fields.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                    type: object
                                                  weight:
                                                    description: Weight associated
                                                      with matching the corresponding
                                                      nodeSelectorTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - preference
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                affinity requirements specified by
                                                this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to an update), the system may or may
                                                not try to eventually evict the pod
                                                from its node.
                                              properties:
                                                nodeSelectorTerms:
                                                  description: Required. A list of
                                                    node selector terms. The terms
                                                    are ORed.
                                                  items:
                                                    description: A null or empty node
                                                      selector term matches no objects.
                                                      The requirements of them are
                                                      ANDed. The TopologySelectorTerm
                                                      type implements a subset of
                                                      the NodeSelectorTerm.
                                                    properties:
                                                      matchExpressions:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's labels.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchFields:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's fields.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                    type: object
                                                  type: array
                                              required:
                                              - nodeSelectorTerms
                                              type: object
                                          type: object
                                        podAffinity:
                                          description: Describes pod affinity scheduling
                                            rules (e.g. co-locate this pod in the
                                            same node, zone, etc. as some other pod(s)).
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                affinity expressions, etc.), compute
                                                a sum by iterating through the elements
                                                of this field and adding "weight"
                                                to the sum if the node has pods which
                                                matches the corresponding podAffinityTerm;
                                                the node(s) with the highest sum are
                                                the most preferred.
                                              items:
                                                description: The weights of all of
                                                  the matched WeightedPodAffinityTerm
                                                  fields are added per-node to find
                                                  the most preferred node(s)
                                                properties:
                                                  podAffinityTerm:
                                                    description: Required. A pod affinity
                                                      term, associated with the corresponding
                                                      weight.
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces. This field
                                                          is beta-level and is only
                                                          honored when PodAffinityNamespaceSelector
                                                          feature is enabled.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace"
                                                        items:
                                                          type: string
                                                        type: array
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                                    required:
                                                    - topologyKey
                                                    type: object
                                                  weight:
                                                    description: weight associated
                                                      with matching the corresponding
                                                      podAffinityTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - podAffinityTerm
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                affinity requirements specified by
                                                this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to a pod label update), the system
                                                may or may not try to eventually evict
                                                the pod from its node. When there
                                                are multiple elements, the lists of
                                                nodes corresponding to each podAffinityTerm
                                                are intersected, i.e. all terms must
                                                be satisfied.
                                              items:
                                                description: Defines a set of pods
                                                  (namely those matching the labelSelector
                                                  relative to the given namespace(s))
                                                  that this pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with, where co-located is defined
                                                  as running on a node whose value
                                                  of the label with key <topologyKey>
                                                  matches that of any node on which
                                                  a pod of the set of pods is running
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this
                                                      case pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaceSelector:
                                                    description: A label query over
                                                      the set of namespaces that the
                                                      term applies to. The term is
                                                      applied to the union of the
                                                      namespaces selected by this
                                                      field and the ones listed in
                                                      the namespaces field. null selector
                                                      and null or empty namespaces
                                                      list means "this pod's namespace".
                                                      An empty selector ({}) matches
                                                      all namespaces. This field is
                                                      beta-level and is only honored
                                                      when PodAffinityNamespaceSelector
                                                      feature is enabled.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaces:
                                                    description: namespaces specifies
                                                      a static list of namespace names
                                                      that the term applies to. The
                                                      term is applied to the union
                                                      of the namespaces listed in
                                                      this field and the ones selected
                                                      by namespaceSelector. null or
                                                      empty namespaces list and null
                                                      namespaceSelector means "this
                                                      pod's namespace"
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not
                                                      co-located (anti-affinity) with
                                                      the pods matching the labelSelector
                                                      in the specified namespaces,
                                                      where co-located is defined
                                                      as running on a node whose value
                                                      of the label with key topologyKey
                                                      matches that of any node on
                                                      which any of the selected pods
                                                      is running. Empty topologyKey
                                                      is not allowed.
                                                    type: string
                                                required:
                                                - topologyKey
                                                type: object
                                              type: array
                                          type: object
                                        podAntiAffinity:
                                          description: Describes pod anti-affinity
                                            scheduling rules (e.g. avoid putting this
                                            pod in the same node, zone, etc. as some
                                            other pod(s)).
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the anti-affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                anti-affinity expressions, etc.),
                                                compute a sum by iterating through
                                                the elements of this field and adding
                                                "weight" to the sum if the node has
                                                pods which matches the corresponding
                                                podAffinityTerm; the node(s) with
                                                the highest sum are the most preferred.
                                              items:
                                                description: The weights of all of
                                                  the matched WeightedPodAffinityTerm
                                                  fields are added per-node to find
                                                  the most preferred node(s)
                                                properties:
                                                  podAffinityTerm:
                                                    description: Required. A pod affinity
                                                      term, associated with the corresponding
                                                      weight.
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces. This field
                                                          is beta-level and is only
                                                          honored when PodAffinityNamespaceSelector
                                                          feature is enabled.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace"
                                                        items:
                                                          type: string
                                                        type: array
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                                    required:
                                                    - topologyKey
                                                    type: object
                                                  weight:
                                                    description: weight associated
                                                      with matching the corresponding
                                                      podAffinityTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - podAffinityTerm
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the anti-affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                anti-affinity requirements specified
                                                by this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to a pod label update), the system
                                                may or may not try to eventually evict
                                                the pod from its node. When there
                                                are multiple elements, the lists of
                                                nodes corresponding to each podAffinityTerm
                                                are intersected, i.e. all terms must
                                                be satisfied.
                                              items:
                                                description: Defines a set of pods
                                                  (namely those matching the labelSelector
                                                  relative to the given namespace(s))
                                                  that this pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with, where co-located is defined
                                                  as running on a node whose value
                                                  of the label with key <topologyKey>
                                                  matches that of any node on which
                                                  a pod of the set of pods is running
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this
                                                      case pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaceSelector:
                                                    description: A label query over
                                                      the set of namespaces that the
                                                      term applies to. The term is
                                                      applied to the union of the
                                                      namespaces selected by this
                                                      field and the ones listed in
                                                      the namespaces field. null selector
                                                      and null or empty namespaces
                                                      list means "this pod's namespace".
                                                      An empty selector ({}) matches
                                                      all namespaces. This field is
                                                      beta-level and is only honored
                                                      when PodAffinityNamespaceSelector
                                                      feature is enabled.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaces:
                                                    description: namespaces specifies
                                                      a static list of namespace names
                                                      that the term applies to. The
                                                      term is applied to the union
                                                      of the namespaces listed in
                                                      this field and the ones selected
                                                      by namespaceSelector. null or
                                                      empty namespaces list and null
                                                      namespaceSelector means "this
                                                      pod's namespace"
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not
                                                      co-located (anti-affinity) with
                                                      the pods matching the labelSelector
                                                      in the specified namespaces,
                                                      where co-located is defined
                                                      as running on a node whose value
                                                      of the label with key topologyKey
                                                      matches that of any node on
                                                      which any of the selected pods
                                                      is running. Empty topologyKey
                                                      is not allowed.
                                                    type: string
                                                required:
                                                - topologyKey
                                                type: object
                                              type: array
                                          type: object
                                      type: object
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: 'NodeSelector is a selector which
                                        must be true for the pod to fit on a node.
                                        Selector which must match a node''s labels
                                        for the pod to be scheduled on that node.
                                        More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                      type: object
                                    priorityClassName:
                                      description: If specified, the pod's priorityClassName.
                                      type: string
                                    serviceAccountName:
                                      description: If specified, the pod's service
                                        account
                                      type: string
                                    tolerations:
                                      description: If specified, the pod's tolerations.
                                      items:
                                        description: The pod this Toleration is attached
                                          to tolerates any taint that matches the
                                          triple <key,value,effect> using the matching
                                          operator <operator>.
                                        properties:
                                          effect:
                                            description: Effect indicates the taint
                                              effect to match. Empty means match all
                                              taint effects. When specified, allowed
                                              values are NoSchedule, PreferNoSchedule
                                              and NoExecute.
                                            type: string
                                          key:
                                            description: Key is the taint key that
                                              the toleration applies to. Empty means
                                              match all taint keys. If the key is
                                              empty, operator must be Exists; this
                                              combination means to match all values
                                              and all keys.
                                            type: string
                                          operator:
                                            description: Operator represents a key's
                                              relationship to the value. Valid operators
                                              are Exists and Equal. Defaults to Equal.
                                              Exists is equivalent to wildcard for
                                              value, so that a pod can tolerate all
                                              taints of a particular category.
                                            type: string
                                          tolerationSeconds:
                                            description: TolerationSeconds represents
                                              the period of time the toleration (which
                                              must be of effect NoExecute, otherwise
                                              this field is ignored) tolerates the
                                              taint. By default, it is not set, which
                                              means tolerate the taint forever (do
                                              not evict). Zero and negative values
                                              will be treated as 0 (evict immediately)
                                              by the system.
                                            format: int64
                                            type: integer
                                          value:
                                            description: Value is the taint value
                                              the toleration matches to. If the operator
                                              is Exists, the value should be empty,
                                              otherwise just a regular string.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            serviceType:
                              description: Optional service type for Kubernetes solver
                                service. Supported values are NodePort or ClusterIP.
                                If unset, defaults to NodePort.
                              type: string
                          type: object
                      type: object
                    selector:
                      description: Selector selects a set of DNSNames on the Certificate
                        resource that should be solved using this challenge solver.
                        If not specified, the solver will be treated as the 'default'
                        solver with the lowest priority, i.e. if any other solver
                        has a more specific match, it will be used instead.
                      properties:
                        dnsNames:
                          description: List of DNSNames that this solver will be used
                            to solve. If specified and a match is found, a dnsNames
                            selector will take precedence over a dnsZones selector.
                            If multiple solvers match with the same dnsNames value,
                            the solver with the most matching labels in matchLabels
                            will be selected. If neither has more matches, the solver
                            defined earlier in the list will be selected.
                          items:
                            type: string
                          type: array
                        dnsZones:
                          description: List of DNSZones that this solver will be used
                            to solve. The most specific DNS zone match specified here
                            will take precedence over other DNS zone matches, so a
                            solver specifying sys.example.com will be selected over
                            one specifying example.com for the domain www.sys.example.com.
                            If multiple solvers match with the same dnsZones value,
                            the solver with the most matching labels in matchLabels
                            will be selected. If neither has more matches, the solver
                            defined earlier in the list will be selected.
                          items:
                            type: string
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: A label selector that is used to refine the
                            set of certificate's that this challenge solver will apply
                            to.
                          type: object
                      type: object
                  type: object
                token:
                  description: Token is the ACME challenge token for this challenge.
                    This is the raw value returned from the ACME server.
                  type: string
                type:
                  description: Type is the type of ACME challenge this resource represents.
                    One of "http-01" or "dns-01".
                  enum:
                  - http-01
                  - dns-01
                  type: string
                url:
                  description: URL is the URL of the ACME Challenge resource for this
                    challenge. This can be used to lookup details about the status
                    of this challenge.
                  type: string
                wildcard:
                  description: Wildcard will be true if this challenge is for a wildcard
                    identifier, for example '*.example.com'.
                  type: boolean
              required:
              - authzURL
              - dnsName
              - issuerRef
              - key
              - solver
              - token
              - type
              - url
              type: object
            status:
              properties:
                presented:
                  description: Presented will be set to true if the challenge values
                    for this challenge are currently 'presented'. This *does not*
                    imply the self check is passing. Only that the values have been
                    'submitted' for the appropriate challenge mechanism (i.e. the
                    DNS01 TXT record has been presented, or the HTTP01 configuration
                    has been configured).
                  type: boolean
                processing:
                  description: Processing is used to denote whether this challenge
                    should be processed or not. This field will only be set to true
                    by the 'scheduling' component. It will only be set to false by
                    the 'challenges' controller, after the challenge has reached a
                    final state or timed out. If this field is set to false, the challenge
                    controller will not take any more action.
                  type: boolean
                reason:
                  description: Reason contains human readable information on why the
                    Challenge is in the current state.
                  type: string
                state:
                  description: State contains the current 'state' of the challenge.
                    If not set, the state of the challenge is unknown.
                  enum:
                  - valid
                  - ready
                  - pending
                  - processing
                  - invalid
                  - expired
                  - errored
                  type: string
              type: object
          required:
          - metadata
          type: object
      served: false
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.state
        name: State
        type: string
      - jsonPath: .spec.dnsName
        name: Domain
        type: string
      - jsonPath: .status.reason
        name: Reason
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha3
      schema:
        openAPIV3Schema:
          description: Challenge is a type to represent a Challenge request with an
            ACME server
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                authzURL:
                  description: AuthzURL is the URL to the ACME Authorization resource
                    that this challenge is a part of.
                  type: string
                dnsName:
                  description: DNSName is the identifier that this challenge is for,
                    e.g. example.com. If the requested DNSName is a 'wildcard', this
                    field MUST be set to the non-wildcard domain, e.g. for `*.example.com`,
                    it must be `example.com`.
                  type: string
                issuerRef:
                  description: IssuerRef references a properly configured ACME-type
                    Issuer which should be used to create this Challenge. If the Issuer
                    does not exist, processing will be retried. If the Issuer is not
                    an 'ACME' Issuer, an error will be returned and the Challenge
                    will be marked as failed.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                key:
                  description: 'Key is the ACME challenge key for this challenge For
                    HTTP01 challenges, this is the value that must be responded with
                    to complete the HTTP01 challenge in the format: `<private key
                    JWK thumbprint>.<key from acme server for challenge>`. For DNS01
                    challenges, this is the base64 encoded SHA256 sum of the `<private
                    key JWK thumbprint>.<key from acme server for challenge>` text
                    that must be set as the TXT record content.'
                  type: string
                solver:
                  description: Solver contains the domain solving configuration that
                    should be used to solve this challenge resource.
                  properties:
                    dns01:
                      description: Configures cert-manager to attempt to complete
                        authorizations by performing the DNS01 challenge flow.
                      properties:
                        acmedns:
                          description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                            API to manage DNS01 challenge records.
                          properties:
                            accountSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            host:
                              type: string
                          required:
                          - accountSecretRef
                          - host
                          type: object
                        akamai:
                          description: Use the Akamai DNS zone management API to manage
                            DNS01 challenge records.
                          properties:
                            accessTokenSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            clientSecretSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            clientTokenSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            serviceConsumerDomain:
                              type: string
                          required:
                          - accessTokenSecretRef
                          - clientSecretSecretRef
                          - clientTokenSecretRef
                          - serviceConsumerDomain
                          type: object
                        azuredns:
                          description: Use the Microsoft Azure DNS API to manage DNS01
                            challenge records.
                          properties:
                            clientID:
                              description: if both this and ClientSecret are left
                                unset MSI will be used
                              type: string
                            clientSecretSecretRef:
                              description: if both this and ClientID are left unset
                                MSI will be used
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            environment:
                              description: name of the Azure environment (default
                                AzurePublicCloud)
                              enum:
                              - AzurePublicCloud
                              - AzureChinaCloud
                              - AzureGermanCloud
                              - AzureUSGovernmentCloud
                              type: string
                            hostedZoneName:
                              description: name of the DNS zone that should be used
                              type: string
                            managedIdentity:
                              description: managed identity configuration, can not
                                be used at the same time as clientID, clientSecretSecretRef
                                or tenantID
                              properties:
                                clientID:
                                  description: client ID of the managed identity,
                                    can not be used at the same time as resourceID
                                  type: string
                                resourceID:
                                  description: resource ID of the managed identity,
                                    can not be used at the same time as clientID
                                  type: string
                              type: object
                            resourceGroupName:
                              description: resource group the DNS zone is located
                                in
                              type: string
                            subscriptionID:
                              description: ID of the Azure subscription
                              type: string
                            tenantID:
                              description: when specifying ClientID and ClientSecret
                                then this field is also needed
                              type: string
                          required:
                          - resourceGroupName
                          - subscriptionID
                          type: object
                        clouddns:
                          description: Use the Google Cloud DNS API to manage DNS01
                            challenge records.
                          properties:
                            hostedZoneName:
                              description: HostedZoneName is an optional field that
                                tells cert-manager in which Cloud DNS zone the challenge
                                record has to be created. If left empty cert-manager
                                will automatically choose a zone.
                              type: string
                            project:
                              type: string
                            serviceAccountSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - project
                          type: object
                        cloudflare:
                          description: Use the Cloudflare API to manage DNS01 challenge
                            records.
                          properties:
                            apiKeySecretRef:
                              description: 'API key to use to authenticate with Cloudflare.
                                Note: using an API token to authenticate is now the
                                recommended method as it allows greater control of
                                permissions.'
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            apiTokenSecretRef:
                              description: API token used to authenticate with Cloudflare.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            email:
                              description: Email of the account, only required when
                                using API key based authentication.
                              type: string
                          type: object
                        cnameStrategy:
                          description: CNAMEStrategy configures how the DNS01 provider
                            should handle CNAME records when found in DNS zones.
                          enum:
                          - None
                          - Follow
                          type: string
                        digitalocean:
                          description: Use the DigitalOcean DNS API to manage DNS01
                            challenge records.
                          properties:
                            tokenSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - tokenSecretRef
                          type: object
                        rfc2136:
                          description: Use RFC2136 ("Dynamic Updates in the Domain
                            Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                            to manage DNS01 challenge records.
                          properties:
                            nameserver:
                              description: The IP address or hostname of an authoritative
                                DNS server supporting RFC2136 in the form host:port.
                                If the host is an IPv6 address it must be enclosed
                                in square brackets (e.g [2001:db8::1]) ; port is optional.
                                This field is required.
                              type: string
                            tsigAlgorithm:
                              description: 'The TSIG Algorithm configured in the DNS
                                supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                and ``tsigKeyName`` are defined. Supported values
                                are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``,
                                ``HMACSHA256`` or ``HMACSHA512``.'
                              type: string
                            tsigKeyName:
                              description: The TSIG Key name configured in the DNS.
                                If ``tsigSecretSecretRef`` is defined, this field
                                is required.
                              type: string
                            tsigSecretSecretRef:
                              description: The name of the secret containing the TSIG
                                value. If ``tsigKeyName`` is defined, this field is
                                required.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - nameserver
                          type: object
                        route53:
                          description: Use the AWS Route53 API to manage DNS01 challenge
                            records.
                          properties:
                            accessKeyID:
                              description: 'The AccessKeyID is used for authentication.
                                If not set we fall-back to using env vars, shared
                                credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                              type: string
                            hostedZoneID:
                              description: If set, the provider will manage only this
                                zone in Route53 and will not do an lookup using the
                                route53:ListHostedZonesByName api call.
                              type: string
                            region:
                              description: Always set the region when using AccessKeyID
                                and SecretAccessKey
                              type: string
                            role:
                              description: Role is a Role ARN which the Route53 provider
                                will assume using either the explicit credentials
                                AccessKeyID/SecretAccessKey or the inferred credentials
                                from environment variables, shared credentials file
                                or AWS Instance metadata
                              type: string
                            secretAccessKeySecretRef:
                              description: The SecretAccessKey is used for authentication.
                                If not set we fall-back to using env vars, shared
                                credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - region
                          type: object
                        webhook:
                          description: Configure an external webhook based DNS01 challenge
                            solver to manage DNS01 challenge records.
                          properties:
                            config:
                              description: Additional configuration that should be
                                passed to the webhook apiserver when challenges are
                                processed. This can contain arbitrary JSON data. Secret
                                values should not be specified in this stanza. If
                                secret values are needed (e.g. credentials for a DNS
                                service), you should use a SecretKeySelector to reference
                                a Secret resource. For details on the schema of this
                                field, consult the webhook provider implementation's
                                documentation.
                              x-kubernetes-preserve-unknown-fields: true
                            groupName:
                              description: The API group name that should be used
                                when POSTing ChallengePayload resources to the webhook
                                apiserver. This should be the same as the GroupName
                                specified in the webhook provider implementation.
                              type: string
                            solverName:
                              description: The name of the solver to use, as defined
                                in the webhook provider implementation. This will
                                typically be the name of the provider, e.g. 'cloudflare'.
                              type: string
                          required:
                          - groupName
                          - solverName
                          type: object
                      type: object
                    http01:
                      description: Configures cert-manager to attempt to complete
                        authorizations by performing the HTTP01 challenge flow. It
                        is not possible to obtain certificates for wildcard domain
                        names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
                      properties:
                        gatewayHTTPRoute:
                          description: The Gateway API is a sig-network community
                            API that models service networking in Kubernetes (https://gateway-api.sigs.k8s.io/).
                            The Gateway solver will create HTTPRoutes with the specified
                            labels in the same namespace as the challenge. This solver
                            is experimental, and fields / behaviour may change in
                            the future.
                          properties:
                            labels:
                              additionalProperties:
                                type: string
                              description: The labels that cert-manager will use when
                                creating the temporary HTTPRoute needed for solving
                                the HTTP-01 challenge. These labels must match the
                                label selector of at least one Gateway.
                              type: object
                            serviceType:
                              description: Optional service type for Kubernetes solver
                                service. Supported values are NodePort or ClusterIP.
                                If unset, defaults to NodePort.
                              type: string
                          type: object
                        ingress:
                          description: The ingress based HTTP01 challenge solver will
                            solve challenges by creating or modifying Ingress resources
                            in order to route requests for '/.well-known/acme-challenge/XYZ'
                            to 'challenge solver' pods that are provisioned by cert-manager
                            for each Challenge to be completed.
                          properties:
                            class:
                              description: The ingress class to use when creating
                                Ingress resources to solve ACME challenges that use
                                this challenge solver. Only one of 'class' or 'name'
                                may be specified.
                              type: string
                            ingressTemplate:
                              description: Optional ingress template used to configure
                                the ACME challenge solver ingress used for HTTP01
                                challenges
                              properties:
                                metadata:
                                  description: ObjectMeta overrides for the ingress
                                    used to solve HTTP01 challenges. Only the 'labels'
                                    and 'annotations' fields may be set. If labels
                                    or annotations overlap with in-built values, the
                                    values here will override the in-built values.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations that should be added
                                        to the created ACME HTTP01 solver ingress.
                                      type: object
                                    labels:
                                      additionalProperties:
                                        type: string
                                      description: Labels that should be added to
                                        the created ACME HTTP01 solver ingress.
                                      type: object
                                  type: object
                              type: object
                            name:
                              description: The name of the ingress resource that should
                                have ACME challenge solving routes inserted into it
                                in order to solve HTTP01 challenges. This is typically
                                used in conjunction with ingress controllers like
                                ingress-gce, which maintains a 1:1 mapping between
                                external IPs and ingress resources.
                              type: string
                            podTemplate:
                              description: Optional pod template used to configure
                                the ACME challenge solver pods used for HTTP01 challenges.
                              properties:
                                metadata:
                                  description: ObjectMeta overrides for the pod used
                                    to solve HTTP01 challenges. Only the 'labels'
                                    and 'annotations' fields may be set. If labels
                                    or annotations overlap with in-built values, the
                                    values here will override the in-built values.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations that should be added
                                        to the create ACME HTTP01 solver pods.
                                      type: object
                                    labels:
                                      additionalProperties:
                                        type: string
                                      description: Labels that should be added to
                                        the created ACME HTTP01 solver pods.
                                      type: object
                                  type: object
                                spec:
                                  description: PodSpec defines overrides for the HTTP01
                                    challenge solver pod. Only the 'priorityClassName',
                                    'nodeSelector', 'affinity', 'serviceAccountName'
                                    and 'tolerations' fields are supported currently.
                                    All other fields will be ignored.
                                  properties:
                                    affinity:
                                      description: If specified, the pod's scheduling
                                        constraints
                                      properties:
                                        nodeAffinity:
                                          description: Describes node affinity scheduling
                                            rules for the pod.
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                affinity expressions, etc.), compute
                                                a sum by iterating through the elements
                                                of this field and adding "weight"
                                                to the sum if the node matches the
                                                corresponding matchExpressions; the
                                                node(s) with the highest sum are the
                                                most preferred.
                                              items:
                                                description: An empty preferred scheduling
                                                  term matches all objects with implicit
                                                  weight 0 (i.e. it's a no-op). A
                                                  null preferred scheduling term matches
                                                  no objects (i.e. is also a no-op).
                                                properties:
                                                  preference:
                                                    description: A node selector term,
                                                      associated with the corresponding
                                                      weight.
                                                    properties:
                                                      matchExpressions:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's labels.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchFields:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's fields.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                    type: object
                                                  weight:
                                                    description: Weight associated
                                                      with matching the corresponding
                                                      nodeSelectorTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - preference
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                affinity requirements specified by
                                                this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to an update), the system may or may
                                                not try to eventually evict the pod
                                                from its node.
                                              properties:
                                                nodeSelectorTerms:
                                                  description: Required. A list of
                                                    node selector terms. The terms
                                                    are ORed.
                                                  items:
                                                    description: A null or empty node
                                                      selector term matches no objects.
                                                      The requirements of them are
                                                      ANDed. The TopologySelectorTerm
                                                      type implements a subset of
                                                      the NodeSelectorTerm.
                                                    properties:
                                                      matchExpressions:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's labels.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchFields:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's fields.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                    type: object
                                                  type: array
                                              required:
                                              - nodeSelectorTerms
                                              type: object
                                          type: object
                                        podAffinity:
                                          description: Describes pod affinity scheduling
                                            rules (e.g. co-locate this pod in the
                                            same node, zone, etc. as some other pod(s)).
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                affinity expressions, etc.), compute
                                                a sum by iterating through the elements
                                                of this field and adding "weight"
                                                to the sum if the node has pods which
                                                matches the corresponding podAffinityTerm;
                                                the node(s) with the highest sum are
                                                the most preferred.
                                              items:
                                                description: The weights of all of
                                                  the matched WeightedPodAffinityTerm
                                                  fields are added per-node to find
                                                  the most preferred node(s)
                                                properties:
                                                  podAffinityTerm:
                                                    description: Required. A pod affinity
                                                      term, associated with the corresponding
                                                      weight.
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces. This field
                                                          is beta-level and is only
                                                          honored when PodAffinityNamespaceSelector
                                                          feature is enabled.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace"
                                                        items:
                                                          type: string
                                                        type: array
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                                    required:
                                                    - topologyKey
                                                    type: object
                                                  weight:
                                                    description: weight associated
                                                      with matching the corresponding
                                                      podAffinityTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - podAffinityTerm
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                affinity requirements specified by
                                                this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to a pod label update), the system
                                                may or may not try to eventually evict
                                                the pod from its node. When there
                                                are multiple elements, the lists of
                                                nodes corresponding to each podAffinityTerm
                                                are intersected, i.e. all terms must
                                                be satisfied.
                                              items:
                                                description: Defines a set of pods
                                                  (namely those matching the labelSelector
                                                  relative to the given namespace(s))
                                                  that this pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with, where co-located is defined
                                                  as running on a node whose value
                                                  of the label with key <topologyKey>
                                                  matches that of any node on which
                                                  a pod of the set of pods is running
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this
                                                      case pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaceSelector:
                                                    description: A label query over
                                                      the set of namespaces that the
                                                      term applies to. The term is
                                                      applied to the union of the
                                                      namespaces selected by this
                                                      field and the ones listed in
                                                      the namespaces field. null selector
                                                      and null or empty namespaces
                                                      list means "this pod's namespace".
                                                      An empty selector ({}) matches
                                                      all namespaces. This field is
                                                      beta-level and is only honored
                                                      when PodAffinityNamespaceSelector
                                                      feature is enabled.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaces:
                                                    description: namespaces specifies
                                                      a static list of namespace names
                                                      that the term applies to. The
                                                      term is applied to the union
                                                      of the namespaces listed in
                                                      this field and the ones selected
                                                      by namespaceSelector. null or
                                                      empty namespaces list and null
                                                      namespaceSelector means "this
                                                      pod's namespace"
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not
                                                      co-located (anti-affinity) with
                                                      the pods matching the labelSelector
                                                      in the specified namespaces,
                                                      where co-located is defined
                                                      as running on a node whose value
                                                      of the label with key topologyKey
                                                      matches that of any node on
                                                      which any of the selected pods
                                                      is running. Empty topologyKey
                                                      is not allowed.
                                                    type: string
                                                required:
                                                - topologyKey
                                                type: object
                                              type: array
                                          type: object
                                        podAntiAffinity:
                                          description: Describes pod anti-affinity
                                            scheduling rules (e.g. avoid putting this
                                            pod in the same node, zone, etc. as some
                                            other pod(s)).
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the anti-affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                anti-affinity expressions, etc.),
                                                compute a sum by iterating through
                                                the elements of this field and adding
                                                "weight" to the sum if the node has
                                                pods which matches the corresponding
                                                podAffinityTerm; the node(s) with
                                                the highest sum are the most preferred.
                                              items:
                                                description: The weights of all of
                                                  the matched WeightedPodAffinityTerm
                                                  fields are added per-node to find
                                                  the most preferred node(s)
                                                properties:
                                                  podAffinityTerm:
                                                    description: Required. A pod affinity
                                                      term, associated with the corresponding
                                                      weight.
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces. This field
                                                          is beta-level and is only
                                                          honored when PodAffinityNamespaceSelector
                                                          feature is enabled.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace"
                                                        items:
                                                          type: string
                                                        type: array
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                                    required:
                                                    - topologyKey
                                                    type: object
                                                  weight:
                                                    description: weight associated
                                                      with matching the corresponding
                                                      podAffinityTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - podAffinityTerm
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the anti-affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                anti-affinity requirements specified
                                                by this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to a pod label update), the system
                                                may or may not try to eventually evict
                                                the pod from its node. When there
                                                are multiple elements, the lists of
                                                nodes corresponding to each podAffinityTerm
                                                are intersected, i.e. all terms must
                                                be satisfied.
                                              items:
                                                description: Defines a set of pods
                                                  (namely those matching the labelSelector
                                                  relative to the given namespace(s))
                                                  that this pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with, where co-located is defined
                                                  as running on a node whose value
                                                  of the label with key <topologyKey>
                                                  matches that of any node on which
                                                  a pod of the set of pods is running
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this
                                                      case pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaceSelector:
                                                    description: A label query over
                                                      the set of namespaces that the
                                                      term applies to. The term is
                                                      applied to the union of the
                                                      namespaces selected by this
                                                      field and the ones listed in
                                                      the namespaces field. null selector
                                                      and null or empty namespaces
                                                      list means "this pod's namespace".
                                                      An empty selector ({}) matches
                                                      all namespaces. This field is
                                                      beta-level and is only honored
                                                      when PodAffinityNamespaceSelector
                                                      feature is enabled.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaces:
                                                    description: namespaces specifies
                                                      a static list of namespace names
                                                      that the term applies to. The
                                                      term is applied to the union
                                                      of the namespaces listed in
                                                      this field and the ones selected
                                                      by namespaceSelector. null or
                                                      empty namespaces list and null
                                                      namespaceSelector means "this
                                                      pod's namespace"
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not
                                                      co-located (anti-affinity) with
                                                      the pods matching the labelSelector
                                                      in the specified namespaces,
                                                      where co-located is defined
                                                      as running on a node whose value
                                                      of the label with key topologyKey
                                                      matches that of any node on
                                                      which any of the selected pods
                                                      is running. Empty topologyKey
                                                      is not allowed.
                                                    type: string
                                                required:
                                                - topologyKey
                                                type: object
                                              type: array
                                          type: object
                                      type: object
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: 'NodeSelector is a selector which
                                        must be true for the pod to fit on a node.
                                        Selector which must match a node''s labels
                                        for the pod to be scheduled on that node.
                                        More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                      type: object
                                    priorityClassName:
                                      description: If specified, the pod's priorityClassName.
                                      type: string
                                    serviceAccountName:
                                      description: If specified, the pod's service
                                        account
                                      type: string
                                    tolerations:
                                      description: If specified, the pod's tolerations.
                                      items:
                                        description: The pod this Toleration is attached
                                          to tolerates any taint that matches the
                                          triple <key,value,effect> using the matching
                                          operator <operator>.
                                        properties:
                                          effect:
                                            description: Effect indicates the taint
                                              effect to match. Empty means match all
                                              taint effects. When specified, allowed
                                              values are NoSchedule, PreferNoSchedule
                                              and NoExecute.
                                            type: string
                                          key:
                                            description: Key is the taint key that
                                              the toleration applies to. Empty means
                                              match all taint keys. If the key is
                                              empty, operator must be Exists; this
                                              combination means to match all values
                                              and all keys.
                                            type: string
                                          operator:
                                            description: Operator represents a key's
                                              relationship to the value. Valid operators
                                              are Exists and Equal. Defaults to Equal.
                                              Exists is equivalent to wildcard for
                                              value, so that a pod can tolerate all
                                              taints of a particular category.
                                            type: string
                                          tolerationSeconds:
                                            description: TolerationSeconds represents
                                              the period of time the toleration (which
                                              must be of effect NoExecute, otherwise
                                              this field is ignored) tolerates the
                                              taint. By default, it is not set, which
                                              means tolerate the taint forever (do
                                              not evict). Zero and negative values
                                              will be treated as 0 (evict immediately)
                                              by the system.
                                            format: int64
                                            type: integer
                                          value:
                                            description: Value is the taint value
                                              the toleration matches to. If the operator
                                              is Exists, the value should be empty,
                                              otherwise just a regular string.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            serviceType:
                              description: Optional service type for Kubernetes solver
                                service. Supported values are NodePort or ClusterIP.
                                If unset, defaults to NodePort.
                              type: string
                          type: object
                      type: object
                    selector:
                      description: Selector selects a set of DNSNames on the Certificate
                        resource that should be solved using this challenge solver.
                        If not specified, the solver will be treated as the 'default'
                        solver with the lowest priority, i.e. if any other solver
                        has a more specific match, it will be used instead.
                      properties:
                        dnsNames:
                          description: List of DNSNames that this solver will be used
                            to solve. If specified and a match is found, a dnsNames
                            selector will take precedence over a dnsZones selector.
                            If multiple solvers match with the same dnsNames value,
                            the solver with the most matching labels in matchLabels
                            will be selected. If neither has more matches, the solver
                            defined earlier in the list will be selected.
                          items:
                            type: string
                          type: array
                        dnsZones:
                          description: List of DNSZones that this solver will be used
                            to solve. The most specific DNS zone match specified here
                            will take precedence over other DNS zone matches, so a
                            solver specifying sys.example.com will be selected over
                            one specifying example.com for the domain www.sys.example.com.
                            If multiple solvers match with the same dnsZones value,
                            the solver with the most matching labels in matchLabels
                            will be selected. If neither has more matches, the solver
                            defined earlier in the list will be selected.
                          items:
                            type: string
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: A label selector that is used to refine the
                            set of certificate's that this challenge solver will apply
                            to.
                          type: object
                      type: object
                  type: object
                token:
                  description: Token is the ACME challenge token for this challenge.
                    This is the raw value returned from the ACME server.
                  type: string
                type:
                  description: Type is the type of ACME challenge this resource represents.
                    One of "http-01" or "dns-01".
                  enum:
                  - http-01
                  - dns-01
                  type: string
                url:
                  description: URL is the URL of the ACME Challenge resource for this
                    challenge. This can be used to lookup details about the status
                    of this challenge.
                  type: string
                wildcard:
                  description: Wildcard will be true if this challenge is for a wildcard
                    identifier, for example '*.example.com'.
                  type: boolean
              required:
              - authzURL
              - dnsName
              - issuerRef
              - key
              - solver
              - token
              - type
              - url
              type: object
            status:
              properties:
                presented:
                  description: Presented will be set to true if the challenge values
                    for this challenge are currently 'presented'. This *does not*
                    imply the self check is passing. Only that the values have been
                    'submitted' for the appropriate challenge mechanism (i.e. the
                    DNS01 TXT record has been presented, or the HTTP01 configuration
                    has been configured).
                  type: boolean
                processing:
                  description: Processing is used to denote whether this challenge
                    should be processed or not. This field will only be set to true
                    by the 'scheduling' component. It will only be set to false by
                    the 'challenges' controller, after the challenge has reached a
                    final state or timed out. If this field is set to false, the challenge
                    controller will not take any more action.
                  type: boolean
                reason:
                  description: Reason contains human readable information on why the
                    Challenge is in the current state.
                  type: string
                state:
                  description: State contains the current 'state' of the challenge.
                    If not set, the state of the challenge is unknown.
                  enum:
                  - valid
                  - ready
                  - pending
                  - processing
                  - invalid
                  - expired
                  - errored
                  type: string
              type: object
          required:
          - metadata
          type: object
      served: false
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.state
        name: State
        type: string
      - jsonPath: .spec.dnsName
        name: Domain
        type: string
      - jsonPath: .status.reason
        name: Reason
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Challenge is a type to represent a Challenge request with an
            ACME server
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                authorizationURL:
                  description: The URL to the ACME Authorization resource that this
                    challenge is a part of.
                  type: string
                dnsName:
                  description: dnsName is the identifier that this challenge is for,
                    e.g. example.com. If the requested DNSName is a 'wildcard', this
                    field MUST be set to the non-wildcard domain, e.g. for `*.example.com`,
                    it must be `example.com`.
                  type: string
                issuerRef:
                  description: References a properly configured ACME-type Issuer which
                    should be used to create this Challenge. If the Issuer does not
                    exist, processing will be retried. If the Issuer is not an 'ACME'
                    Issuer, an error will be returned and the Challenge will be marked
                    as failed.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                key:
                  description: 'The ACME challenge key for this challenge For HTTP01
                    challenges, this is the value that must be responded with to complete
                    the HTTP01 challenge in the format: `<private key JWK thumbprint>.<key
                    from acme server for challenge>`. For DNS01 challenges, this is
                    the base64 encoded SHA256 sum of the `<private key JWK thumbprint>.<key
                    from acme server for challenge>` text that must be set as the
                    TXT record content.'
                  type: string
                solver:
                  description: Contains the domain solving configuration that should
                    be used to solve this challenge resource.
                  properties:
                    dns01:
                      description: Configures cert-manager to attempt to complete
                        authorizations by performing the DNS01 challenge flow.
                      properties:
                        acmeDNS:
                          description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                            API to manage DNS01 challenge records.
                          properties:
                            accountSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            host:
                              type: string
                          required:
                          - accountSecretRef
                          - host
                          type: object
                        akamai:
                          description: Use the Akamai DNS zone management API to manage
                            DNS01 challenge records.
                          properties:
                            accessTokenSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            clientSecretSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            clientTokenSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            serviceConsumerDomain:
                              type: string
                          required:
                          - accessTokenSecretRef
                          - clientSecretSecretRef
                          - clientTokenSecretRef
                          - serviceConsumerDomain
                          type: object
                        azureDNS:
                          description: Use the Microsoft Azure DNS API to manage DNS01
                            challenge records.
                          properties:
                            clientID:
                              description: if both this and ClientSecret are left
                                unset MSI will be used
                              type: string
                            clientSecretSecretRef:
                              description: if both this and ClientID are left unset
                                MSI will be used
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            environment:
                              description: name of the Azure environment (default
                                AzurePublicCloud)
                              enum:
                              - AzurePublicCloud
                              - AzureChinaCloud
                              - AzureGermanCloud
                              - AzureUSGovernmentCloud
                              type: string
                            hostedZoneName:
                              description: name of the DNS zone that should be used
                              type: string
                            managedIdentity:
                              description: managed identity configuration, can not
                                be used at the same time as clientID, clientSecretSecretRef
                                or tenantID
                              properties:
                                clientID:
                                  description: client ID of the managed identity,
                                    can not be used at the same time as resourceID
                                  type: string
                                resourceID:
                                  description: resource ID of the managed identity,
                                    can not be used at the same time as clientID
                                  type: string
                              type: object
                            resourceGroupName:
                              description: resource group the DNS zone is located
                                in
                              type: string
                            subscriptionID:
                              description: ID of the Azure subscription
                              type: string
                            tenantID:
                              description: when specifying ClientID and ClientSecret
                                then this field is also needed
                              type: string
                          required:
                          - resourceGroupName
                          - subscriptionID
                          type: object
                        cloudDNS:
                          description: Use the Google Cloud DNS API to manage DNS01
                            challenge records.
                          properties:
                            hostedZoneName:
                              description: HostedZoneName is an optional field that
                                tells cert-manager in which Cloud DNS zone the challenge
                                record has to be created. If left empty cert-manager
                                will automatically choose a zone.
                              type: string
                            project:
                              type: string
                            serviceAccountSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - project
                          type: object
                        cloudflare:
                          description: Use the Cloudflare API to manage DNS01 challenge
                            records.
                          properties:
                            apiKeySecretRef:
                              description: 'API key to use to authenticate with Cloudflare.
                                Note: using an API token to authenticate is now the
                                recommended method as it allows greater control of
                                permissions.'
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            apiTokenSecretRef:
                              description: API token used to authenticate with Cloudflare.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            email:
                              description: Email of the account, only required when
                                using API key based authentication.
                              type: string
                          type: object
                        cnameStrategy:
                          description: CNAMEStrategy configures how the DNS01 provider
                            should handle CNAME records when found in DNS zones.
                          enum:
                          - None
                          - Follow
                          type: string
                        digitalocean:
                          description: Use the DigitalOcean DNS API to manage DNS01
                            challenge records.
                          properties:
                            tokenSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - tokenSecretRef
                          type: object
                        rfc2136:
                          description: Use RFC2136 ("Dynamic Updates in the Domain
                            Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                            to manage DNS01 challenge records.
                          properties:
                            nameserver:
                              description: The IP address or hostname of an authoritative
                                DNS server supporting RFC2136 in the form host:port.
                                If the host is an IPv6 address it must be enclosed
                                in square brackets (e.g [2001:db8::1]) ; port is optional.
                                This field is required.
                              type: string
                            tsigAlgorithm:
                              description: 'The TSIG Algorithm configured in the DNS
                                supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                and ``tsigKeyName`` are defined. Supported values
                                are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``,
                                ``HMACSHA256`` or ``HMACSHA512``.'
                              type: string
                            tsigKeyName:
                              description: The TSIG Key name configured in the DNS.
                                If ``tsigSecretSecretRef`` is defined, this field
                                is required.
                              type: string
                            tsigSecretSecretRef:
                              description: The name of the secret containing the TSIG
                                value. If ``tsigKeyName`` is defined, this field is
                                required.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - nameserver
                          type: object
                        route53:
                          description: Use the AWS Route53 API to manage DNS01 challenge
                            records.
                          properties:
                            accessKeyID:
                              description: 'The AccessKeyID is used for authentication.
                                If not set we fall-back to using env vars, shared
                                credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                              type: string
                            hostedZoneID:
                              description: If set, the provider will manage only this
                                zone in Route53 and will not do an lookup using the
                                route53:ListHostedZonesByName api call.
                              type: string
                            region:
                              description: Always set the region when using AccessKeyID
                                and SecretAccessKey
                              type: string
                            role:
                              description: Role is a Role ARN which the Route53 provider
                                will assume using either the explicit credentials
                                AccessKeyID/SecretAccessKey or the inferred credentials
                                from environment variables, shared credentials file
                                or AWS Instance metadata
                              type: string
                            secretAccessKeySecretRef:
                              description: The SecretAccessKey is used for authentication.
                                If not set we fall-back to using env vars, shared
                                credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - region
                          type: object
                        webhook:
                          description: Configure an external webhook based DNS01 challenge
                            solver to manage DNS01 challenge records.
                          properties:
                            config:
                              description: Additional configuration that should be
                                passed to the webhook apiserver when challenges are
                                processed. This can contain arbitrary JSON data. Secret
                                values should not be specified in this stanza. If
                                secret values are needed (e.g. credentials for a DNS
                                service), you should use a SecretKeySelector to reference
                                a Secret resource. For details on the schema of this
                                field, consult the webhook provider implementation's
                                documentation.
                              x-kubernetes-preserve-unknown-fields: true
                            groupName:
                              description: The API group name that should be used
                                when POSTing ChallengePayload resources to the webhook
                                apiserver. This should be the same as the GroupName
                                specified in the webhook provider implementation.
                              type: string
                            solverName:
                              description: The name of the solver to use, as defined
                                in the webhook provider implementation. This will
                                typically be the name of the provider, e.g. 'cloudflare'.
                              type: string
                          required:
                          - groupName
                          - solverName
                          type: object
                      type: object
                    http01:
                      description: Configures cert-manager to attempt to complete
                        authorizations by performing the HTTP01 challenge flow. It
                        is not possible to obtain certificates for wildcard domain
                        names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
                      properties:
                        gatewayHTTPRoute:
                          description: The Gateway API is a sig-network community
                            API that models service networking in Kubernetes (https://gateway-api.sigs.k8s.io/).
                            The Gateway solver will create HTTPRoutes with the specified
                            labels in the same namespace as the challenge. This solver
                            is experimental, and fields / behaviour may change in
                            the future.
                          properties:
                            labels:
                              additionalProperties:
                                type: string
                              description: The labels that cert-manager will use when
                                creating the temporary HTTPRoute needed for solving
                                the HTTP-01 challenge. These labels must match the
                                label selector of at least one Gateway.
                              type: object
                            serviceType:
                              description: Optional service type for Kubernetes solver
                                service. Supported values are NodePort or ClusterIP.
                                If unset, defaults to NodePort.
                              type: string
                          type: object
                        ingress:
                          description: The ingress based HTTP01 challenge solver will
                            solve challenges by creating or modifying Ingress resources
                            in order to route requests for '/.well-known/acme-challenge/XYZ'
                            to 'challenge solver' pods that are provisioned by cert-manager
                            for each Challenge to be completed.
                          properties:
                            class:
                              description: The ingress class to use when creating
                                Ingress resources to solve ACME challenges that use
                                this challenge solver. Only one of 'class' or 'name'
                                may be specified.
                              type: string
                            ingressTemplate:
                              description: Optional ingress template used to configure
                                the ACME challenge solver ingress used for HTTP01
                                challenges.
                              properties:
                                metadata:
                                  description: ObjectMeta overrides for the ingress
                                    used to solve HTTP01 challenges. Only the 'labels'
                                    and 'annotations' fields may be set. If labels
                                    or annotations overlap with in-built values, the
                                    values here will override the in-built values.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations that should be added
                                        to the created ACME HTTP01 solver ingress.
                                      type: object
                                    labels:
                                      additionalProperties:
                                        type: string
                                      description: Labels that should be added to
                                        the created ACME HTTP01 solver ingress.
                                      type: object
                                  type: object
                              type: object
                            name:
                              description: The name of the ingress resource that should
                                have ACME challenge solving routes inserted into it
                                in order to solve HTTP01 challenges. This is typically
                                used in conjunction with ingress controllers like
                                ingress-gce, which maintains a 1:1 mapping between
                                external IPs and ingress resources.
                              type: string
                            podTemplate:
                              description: Optional pod template used to configure
                                the ACME challenge solver pods used for HTTP01 challenges
                              properties:
                                metadata:
                                  description: ObjectMeta overrides for the pod used
                                    to solve HTTP01 challenges. Only the 'labels'
                                    and 'annotations' fields may be set. If labels
                                    or annotations overlap with in-built values, the
                                    values here will override the in-built values.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations that should be added
                                        to the create ACME HTTP01 solver pods.
                                      type: object
                                    labels:
                                      additionalProperties:
                                        type: string
                                      description: Labels that should be added to
                                        the created ACME HTTP01 solver pods.
                                      type: object
                                  type: object
                                spec:
                                  description: PodSpec defines overrides for the HTTP01
                                    challenge solver pod. Only the 'priorityClassName',
                                    'nodeSelector', 'affinity', 'serviceAccountName'
                                    and 'tolerations' fields are supported currently.
                                    All other fields will be ignored.
                                  properties:
                                    affinity:
                                      description: If specified, the pod's scheduling
                                        constraints
                                      properties:
                                        nodeAffinity:
                                          description: Describes node affinity scheduling
                                            rules for the pod.
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                affinity expressions, etc.), compute
                                                a sum by iterating through the elements
                                                of this field and adding "weight"
                                                to the sum if the node matches the
                                                corresponding matchExpressions; the
                                                node(s) with the highest sum are the
                                                most preferred.
                                              items:
                                                description: An empty preferred scheduling
                                                  term matches all objects with implicit
                                                  weight 0 (i.e. it's a no-op). A
                                                  null preferred scheduling term matches
                                                  no objects (i.e. is also a no-op).
                                                properties:
                                                  preference:
                                                    description: A node selector term,
                                                      associated with the corresponding
                                                      weight.
                                                    properties:
                                                      matchExpressions:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's labels.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchFields:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's fields.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                    type: object
                                                  weight:
                                                    description: Weight associated
                                                      with matching the corresponding
                                                      nodeSelectorTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - preference
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                affinity requirements specified by
                                                this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to an update), the system may or may
                                                not try to eventually evict the pod
                                                from its node.
                                              properties:
                                                nodeSelectorTerms:
                                                  description: Required. A list of
                                                    node selector terms. The terms
                                                    are ORed.
                                                  items:
                                                    description: A null or empty node
                                                      selector term matches no objects.
                                                      The requirements of them are
                                                      ANDed. The TopologySelectorTerm
                                                      type implements a subset of
                                                      the NodeSelectorTerm.
                                                    properties:
                                                      matchExpressions:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's labels.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchFields:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's fields.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                    type: object
                                                  type: array
                                              required:
                                              - nodeSelectorTerms
                                              type: object
                                          type: object
                                        podAffinity:
                                          description: Describes pod affinity scheduling
                                            rules (e.g. co-locate this pod in the
                                            same node, zone, etc. as some other pod(s)).
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                affinity expressions, etc.), compute
                                                a sum by iterating through the elements
                                                of this field and adding "weight"
                                                to the sum if the node has pods which
                                                matches the corresponding podAffinityTerm;
                                                the node(s) with the highest sum are
                                                the most preferred.
                                              items:
                                                description: The weights of all of
                                                  the matched WeightedPodAffinityTerm
                                                  fields are added per-node to find
                                                  the most preferred node(s)
                                                properties:
                                                  podAffinityTerm:
                                                    description: Required. A pod affinity
                                                      term, associated with the corresponding
                                                      weight.
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces. This field
                                                          is beta-level and is only
                                                          honored when PodAffinityNamespaceSelector
                                                          feature is enabled.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace"
                                                        items:
                                                          type: string
                                                        type: array
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                                    required:
                                                    - topologyKey
                                                    type: object
                                                  weight:
                                                    description: weight associated
                                                      with matching the corresponding
                                                      podAffinityTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - podAffinityTerm
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                affinity requirements specified by
                                                this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to a pod label update), the system
                                                may or may not try to eventually evict
                                                the pod from its node. When there
                                                are multiple elements, the lists of
                                                nodes corresponding to each podAffinityTerm
                                                are intersected, i.e. all terms must
                                                be satisfied.
                                              items:
                                                description: Defines a set of pods
                                                  (namely those matching the labelSelector
                                                  relative to the given namespace(s))
                                                  that this pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with, where co-located is defined
                                                  as running on a node whose value
                                                  of the label with key <topologyKey>
                                                  matches that of any node on which
                                                  a pod of the set of pods is running
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this
                                                      case pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaceSelector:
                                                    description: A label query over
                                                      the set of namespaces that the
                                                      term applies to. The term is
                                                      applied to the union of the
                                                      namespaces selected by this
                                                      field and the ones listed in
                                                      the namespaces field. null selector
                                                      and null or empty namespaces
                                                      list means "this pod's namespace".
                                                      An empty selector ({}) matches
                                                      all namespaces. This field is
                                                      beta-level and is only honored
                                                      when PodAffinityNamespaceSelector
                                                      feature is enabled.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaces:
                                                    description: namespaces specifies
                                                      a static list of namespace names
                                                      that the term applies to. The
                                                      term is applied to the union
                                                      of the namespaces listed in
                                                      this field and the ones selected
                                                      by namespaceSelector. null or
                                                      empty namespaces list and null
                                                      namespaceSelector means "this
                                                      pod's namespace"
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not
                                                      co-located (anti-affinity) with
                                                      the pods matching the labelSelector
                                                      in the specified namespaces,
                                                      where co-located is defined
                                                      as running on a node whose value
                                                      of the label with key topologyKey
                                                      matches that of any node on
                                                      which any of the selected pods
                                                      is running. Empty topologyKey
                                                      is not allowed.
                                                    type: string
                                                required:
                                                - topologyKey
                                                type: object
                                              type: array
                                          type: object
                                        podAntiAffinity:
                                          description: Describes pod anti-affinity
                                            scheduling rules (e.g. avoid putting this
                                            pod in the same node, zone, etc. as some
                                            other pod(s)).
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the anti-affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                anti-affinity expressions, etc.),
                                                compute a sum by iterating through
                                                the elements of this field and adding
                                                "weight" to the sum if the node has
                                                pods which matches the corresponding
                                                podAffinityTerm; the node(s) with
                                                the highest sum are the most preferred.
                                              items:
                                                description: The weights of all of
                                                  the matched WeightedPodAffinityTerm
                                                  fields are added per-node to find
                                                  the most preferred node(s)
                                                properties:
                                                  podAffinityTerm:
                                                    description: Required. A pod affinity
                                                      term, associated with the corresponding
                                                      weight.
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces. This field
                                                          is beta-level and is only
                                                          honored when PodAffinityNamespaceSelector
                                                          feature is enabled.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace"
                                                        items:
                                                          type: string
                                                        type: array
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                                    required:
                                                    - topologyKey
                                                    type: object
                                                  weight:
                                                    description: weight associated
                                                      with matching the corresponding
                                                      podAffinityTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - podAffinityTerm
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the anti-affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                anti-affinity requirements specified
                                                by this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to a pod label update), the system
                                                may or may not try to eventually evict
                                                the pod from its node. When there
                                                are multiple elements, the lists of
                                                nodes corresponding to each podAffinityTerm
                                                are intersected, i.e. all terms must
                                                be satisfied.
                                              items:
                                                description: Defines a set of pods
                                                  (namely those matching the labelSelector
                                                  relative to the given namespace(s))
                                                  that this pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with, where co-located is defined
                                                  as running on a node whose value
                                                  of the label with key <topologyKey>
                                                  matches that of any node on which
                                                  a pod of the set of pods is running
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this
                                                      case pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaceSelector:
                                                    description: A label query over
                                                      the set of namespaces that the
                                                      term applies to. The term is
                                                      applied to the union of the
                                                      namespaces selected by this
                                                      field and the ones listed in
                                                      the namespaces field. null selector
                                                      and null or empty namespaces
                                                      list means "this pod's namespace".
                                                      An empty selector ({}) matches
                                                      all namespaces. This field is
                                                      beta-level and is only honored
                                                      when PodAffinityNamespaceSelector
                                                      feature is enabled.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaces:
                                                    description: namespaces specifies
                                                      a static list of namespace names
                                                      that the term applies to. The
                                                      term is applied to the union
                                                      of the namespaces listed in
                                                      this field and the ones selected
                                                      by namespaceSelector. null or
                                                      empty namespaces list and null
                                                      namespaceSelector means "this
                                                      pod's namespace"
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not
                                                      co-located (anti-affinity) with
                                                      the pods matching the labelSelector
                                                      in the specified namespaces,
                                                      where co-located is defined
                                                      as running on a node whose value
                                                      of the label with key topologyKey
                                                      matches that of any node on
                                                      which any of the selected pods
                                                      is running. Empty topologyKey
                                                      is not allowed.
                                                    type: string
                                                required:
                                                - topologyKey
                                                type: object
                                              type: array
                                          type: object
                                      type: object
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: 'NodeSelector is a selector which
                                        must be true for the pod to fit on a node.
                                        Selector which must match a node''s labels
                                        for the pod to be scheduled on that node.
                                        More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                      type: object
                                    priorityClassName:
                                      description: If specified, the pod's priorityClassName.
                                      type: string
                                    serviceAccountName:
                                      description: If specified, the pod's service
                                        account
                                      type: string
                                    tolerations:
                                      description: If specified, the pod's tolerations.
                                      items:
                                        description: The pod this Toleration is attached
                                          to tolerates any taint that matches the
                                          triple <key,value,effect> using the matching
                                          operator <operator>.
                                        properties:
                                          effect:
                                            description: Effect indicates the taint
                                              effect to match. Empty means match all
                                              taint effects. When specified, allowed
                                              values are NoSchedule, PreferNoSchedule
                                              and NoExecute.
                                            type: string
                                          key:
                                            description: Key is the taint key that
                                              the toleration applies to. Empty means
                                              match all taint keys. If the key is
                                              empty, operator must be Exists; this
                                              combination means to match all values
                                              and all keys.
                                            type: string
                                          operator:
                                            description: Operator represents a key's
                                              relationship to the value. Valid operators
                                              are Exists and Equal. Defaults to Equal.
                                              Exists is equivalent to wildcard for
                                              value, so that a pod can tolerate all
                                              taints of a particular category.
                                            type: string
                                          tolerationSeconds:
                                            description: TolerationSeconds represents
                                              the period of time the toleration (which
                                              must be of effect NoExecute, otherwise
                                              this field is ignored) tolerates the
                                              taint. By default, it is not set, which
                                              means tolerate the taint forever (do
                                              not evict). Zero and negative values
                                              will be treated as 0 (evict immediately)
                                              by the system.
                                            format: int64
                                            type: integer
                                          value:
                                            description: Value is the taint value
                                              the toleration matches to. If the operator
                                              is Exists, the value should be empty,
                                              otherwise just a regular string.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            serviceType:
                              description: Optional service type for Kubernetes solver
                                service. Supported values are NodePort or ClusterIP.
                                If unset, defaults to NodePort.
                              type: string
                          type: object
                      type: object
                    selector:
                      description: Selector selects a set of DNSNames on the Certificate
                        resource that should be solved using this challenge solver.
                        If not specified, the solver will be treated as the 'default'
                        solver with the lowest priority, i.e. if any other solver
                        has a more specific match, it will be used instead.
                      properties:
                        dnsNames:
                          description: List of DNSNames that this solver will be used
                            to solve. If specified and a match is found, a dnsNames
                            selector will take precedence over a dnsZones selector.
                            If multiple solvers match with the same dnsNames value,
                            the solver with the most matching labels in matchLabels
                            will be selected. If neither has more matches, the solver
                            defined earlier in the list will be selected.
                          items:
                            type: string
                          type: array
                        dnsZones:
                          description: List of DNSZones that this solver will be used
                            to solve. The most specific DNS zone match specified here
                            will take precedence over other DNS zone matches, so a
                            solver specifying sys.example.com will be selected over
                            one specifying example.com for the domain www.sys.example.com.
                            If multiple solvers match with the same dnsZones value,
                            the solver with the most matching labels in matchLabels
                            will be selected. If neither has more matches, the solver
                            defined earlier in the list will be selected.
                          items:
                            type: string
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: A label selector that is used to refine the
                            set of certificate's that this challenge solver will apply
                            to.
                          type: object
                      type: object
                  type: object
                token:
                  description: The ACME challenge token for this challenge. This is
                    the raw value returned from the ACME server.
                  type: string
                type:
                  description: The type of ACME challenge this resource represents.
                    One of "HTTP-01" or "DNS-01".
                  enum:
                  - HTTP-01
                  - DNS-01
                  type: string
                url:
                  description: The URL of the ACME Challenge resource for this challenge.
                    This can be used to lookup details about the status of this challenge.
                  type: string
                wildcard:
                  description: wildcard will be true if this challenge is for a wildcard
                    identifier, for example '*.example.com'.
                  type: boolean
              required:
              - authorizationURL
              - dnsName
              - issuerRef
              - key
              - solver
              - token
              - type
              - url
              type: object
            status:
              properties:
                presented:
                  description: presented will be set to true if the challenge values
                    for this challenge are currently 'presented'. This *does not*
                    imply the self check is passing. Only that the values have been
                    'submitted' for the appropriate challenge mechanism (i.e. the
                    DNS01 TXT record has been presented, or the HTTP01 configuration
                    has been configured).
                  type: boolean
                processing:
                  description: Used to denote whether this challenge should be processed
                    or not. This field will only be set to true by the 'scheduling'
                    component. It will only be set to false by the 'challenges' controller,
                    after the challenge has reached a final state or timed out. If
                    this field is set to false, the challenge controller will not
                    take any more action.
                  type: boolean
                reason:
                  description: Contains human readable information on why the Challenge
                    is in the current state.
                  type: string
                state:
                  description: Contains the current 'state' of the challenge. If not
                    set, the state of the challenge is unknown.
                  enum:
                  - valid
                  - ready
                  - pending
                  - processing
                  - invalid
                  - expired
                  - errored
                  type: string
              type: object
          required:
          - metadata
          - spec
          type: object
      served: false
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.state
        name: State
        type: string
      - jsonPath: .spec.dnsName
        name: Domain
        type: string
      - jsonPath: .status.reason
        name: Reason
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: Challenge is a type to represent a Challenge request with an
            ACME server
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                authorizationURL:
                  description: The URL to the ACME Authorization resource that this
                    challenge is a part of.
                  type: string
                dnsName:
                  description: dnsName is the identifier that this challenge is for,
                    e.g. example.com. If the requested DNSName is a 'wildcard', this
                    field MUST be set to the non-wildcard domain, e.g. for `*.example.com`,
                    it must be `example.com`.
                  type: string
                issuerRef:
                  description: References a properly configured ACME-type Issuer which
                    should be used to create this Challenge. If the Issuer does not
                    exist, processing will be retried. If the Issuer is not an 'ACME'
                    Issuer, an error will be returned and the Challenge will be marked
                    as failed.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                key:
                  description: 'The ACME challenge key for this challenge For HTTP01
                    challenges, this is the value that must be responded with to complete
                    the HTTP01 challenge in the format: `<private key JWK thumbprint>.<key
                    from acme server for challenge>`. For DNS01 challenges, this is
                    the base64 encoded SHA256 sum of the `<private key JWK thumbprint>.<key
                    from acme server for challenge>` text that must be set as the
                    TXT record content.'
                  type: string
                solver:
                  description: Contains the domain solving configuration that should
                    be used to solve this challenge resource.
                  properties:
                    dns01:
                      description: Configures cert-manager to attempt to complete
                        authorizations by performing the DNS01 challenge flow.
                      properties:
                        acmeDNS:
                          description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                            API to manage DNS01 challenge records.
                          properties:
                            accountSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            host:
                              type: string
                          required:
                          - accountSecretRef
                          - host
                          type: object
                        akamai:
                          description: Use the Akamai DNS zone management API to manage
                            DNS01 challenge records.
                          properties:
                            accessTokenSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            clientSecretSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            clientTokenSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            serviceConsumerDomain:
                              type: string
                          required:
                          - accessTokenSecretRef
                          - clientSecretSecretRef
                          - clientTokenSecretRef
                          - serviceConsumerDomain
                          type: object
                        azureDNS:
                          description: Use the Microsoft Azure DNS API to manage DNS01
                            challenge records.
                          properties:
                            clientID:
                              description: if both this and ClientSecret are left
                                unset MSI will be used
                              type: string
                            clientSecretSecretRef:
                              description: if both this and ClientID are left unset
                                MSI will be used
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            environment:
                              description: name of the Azure environment (default
                                AzurePublicCloud)
                              enum:
                              - AzurePublicCloud
                              - AzureChinaCloud
                              - AzureGermanCloud
                              - AzureUSGovernmentCloud
                              type: string
                            hostedZoneName:
                              description: name of the DNS zone that should be used
                              type: string
                            managedIdentity:
                              description: managed identity configuration, can not
                                be used at the same time as clientID, clientSecretSecretRef
                                or tenantID
                              properties:
                                clientID:
                                  description: client ID of the managed identity,
                                    can not be used at the same time as resourceID
                                  type: string
                                resourceID:
                                  description: resource ID of the managed identity,
                                    can not be used at the same time as clientID
                                  type: string
                              type: object
                            resourceGroupName:
                              description: resource group the DNS zone is located
                                in
                              type: string
                            subscriptionID:
                              description: ID of the Azure subscription
                              type: string
                            tenantID:
                              description: when specifying ClientID and ClientSecret
                                then this field is also needed
                              type: string
                          required:
                          - resourceGroupName
                          - subscriptionID
                          type: object
                        cloudDNS:
                          description: Use the Google Cloud DNS API to manage DNS01
                            challenge records.
                          properties:
                            hostedZoneName:
                              description: HostedZoneName is an optional field that
                                tells cert-manager in which Cloud DNS zone the challenge
                                record has to be created. If left empty cert-manager
                                will automatically choose a zone.
                              type: string
                            project:
                              type: string
                            serviceAccountSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - project
                          type: object
                        cloudflare:
                          description: Use the Cloudflare API to manage DNS01 challenge
                            records.
                          properties:
                            apiKeySecretRef:
                              description: 'API key to use to authenticate with Cloudflare.
                                Note: using an API token to authenticate is now the
                                recommended method as it allows greater control of
                                permissions.'
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            apiTokenSecretRef:
                              description: API token used to authenticate with Cloudflare.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                            email:
                              description: Email of the account, only required when
                                using API key based authentication.
                              type: string
                          type: object
                        cnameStrategy:
                          description: CNAMEStrategy configures how the DNS01 provider
                            should handle CNAME records when found in DNS zones.
                          enum:
                          - None
                          - Follow
                          type: string
                        digitalocean:
                          description: Use the DigitalOcean DNS API to manage DNS01
                            challenge records.
                          properties:
                            tokenSecretRef:
                              description: A reference to a specific 'key' within
                                a Secret resource. In some instances, `key` is a required
                                field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - tokenSecretRef
                          type: object
                        rfc2136:
                          description: Use RFC2136 ("Dynamic Updates in the Domain
                            Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                            to manage DNS01 challenge records.
                          properties:
                            nameserver:
                              description: The IP address or hostname of an authoritative
                                DNS server supporting RFC2136 in the form host:port.
                                If the host is an IPv6 address it must be enclosed
                                in square brackets (e.g [2001:db8::1]) ; port is optional.
                                This field is required.
                              type: string
                            tsigAlgorithm:
                              description: 'The TSIG Algorithm configured in the DNS
                                supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                and ``tsigKeyName`` are defined. Supported values
                                are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``,
                                ``HMACSHA256`` or ``HMACSHA512``.'
                              type: string
                            tsigKeyName:
                              description: The TSIG Key name configured in the DNS.
                                If ``tsigSecretSecretRef`` is defined, this field
                                is required.
                              type: string
                            tsigSecretSecretRef:
                              description: The name of the secret containing the TSIG
                                value. If ``tsigKeyName`` is defined, this field is
                                required.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - nameserver
                          type: object
                        route53:
                          description: Use the AWS Route53 API to manage DNS01 challenge
                            records.
                          properties:
                            accessKeyID:
                              description: 'The AccessKeyID is used for authentication.
                                If not set we fall-back to using env vars, shared
                                credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                              type: string
                            hostedZoneID:
                              description: If set, the provider will manage only this
                                zone in Route53 and will not do an lookup using the
                                route53:ListHostedZonesByName api call.
                              type: string
                            region:
                              description: Always set the region when using AccessKeyID
                                and SecretAccessKey
                              type: string
                            role:
                              description: Role is a Role ARN which the Route53 provider
                                will assume using either the explicit credentials
                                AccessKeyID/SecretAccessKey or the inferred credentials
                                from environment variables, shared credentials file
                                or AWS Instance metadata
                              type: string
                            secretAccessKeySecretRef:
                              description: The SecretAccessKey is used for authentication.
                                If not set we fall-back to using env vars, shared
                                credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - region
                          type: object
                        webhook:
                          description: Configure an external webhook based DNS01 challenge
                            solver to manage DNS01 challenge records.
                          properties:
                            config:
                              description: Additional configuration that should be
                                passed to the webhook apiserver when challenges are
                                processed. This can contain arbitrary JSON data. Secret
                                values should not be specified in this stanza. If
                                secret values are needed (e.g. credentials for a DNS
                                service), you should use a SecretKeySelector to reference
                                a Secret resource. For details on the schema of this
                                field, consult the webhook provider implementation's
                                documentation.
                              x-kubernetes-preserve-unknown-fields: true
                            groupName:
                              description: The API group name that should be used
                                when POSTing ChallengePayload resources to the webhook
                                apiserver. This should be the same as the GroupName
                                specified in the webhook provider implementation.
                              type: string
                            solverName:
                              description: The name of the solver to use, as defined
                                in the webhook provider implementation. This will
                                typically be the name of the provider, e.g. 'cloudflare'.
                              type: string
                          required:
                          - groupName
                          - solverName
                          type: object
                      type: object
                    http01:
                      description: Configures cert-manager to attempt to complete
                        authorizations by performing the HTTP01 challenge flow. It
                        is not possible to obtain certificates for wildcard domain
                        names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
                      properties:
                        gatewayHTTPRoute:
                          description: The Gateway API is a sig-network community
                            API that models service networking in Kubernetes (https://gateway-api.sigs.k8s.io/).
                            The Gateway solver will create HTTPRoutes with the specified
                            labels in the same namespace as the challenge. This solver
                            is experimental, and fields / behaviour may change in
                            the future.
                          properties:
                            labels:
                              additionalProperties:
                                type: string
                              description: The labels that cert-manager will use when
                                creating the temporary HTTPRoute needed for solving
                                the HTTP-01 challenge. These labels must match the
                                label selector of at least one Gateway.
                              type: object
                            serviceType:
                              description: Optional service type for Kubernetes solver
                                service. Supported values are NodePort or ClusterIP.
                                If unset, defaults to NodePort.
                              type: string
                          type: object
                        ingress:
                          description: The ingress based HTTP01 challenge solver will
                            solve challenges by creating or modifying Ingress resources
                            in order to route requests for '/.well-known/acme-challenge/XYZ'
                            to 'challenge solver' pods that are provisioned by cert-manager
                            for each Challenge to be completed.
                          properties:
                            class:
                              description: The ingress class to use when creating
                                Ingress resources to solve ACME challenges that use
                                this challenge solver. Only one of 'class' or 'name'
                                may be specified.
                              type: string
                            ingressTemplate:
                              description: Optional ingress template used to configure
                                the ACME challenge solver ingress used for HTTP01
                                challenges.
                              properties:
                                metadata:
                                  description: ObjectMeta overrides for the ingress
                                    used to solve HTTP01 challenges. Only the 'labels'
                                    and 'annotations' fields may be set. If labels
                                    or annotations overlap with in-built values, the
                                    values here will override the in-built values.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations that should be added
                                        to the created ACME HTTP01 solver ingress.
                                      type: object
                                    labels:
                                      additionalProperties:
                                        type: string
                                      description: Labels that should be added to
                                        the created ACME HTTP01 solver ingress.
                                      type: object
                                  type: object
                              type: object
                            name:
                              description: The name of the ingress resource that should
                                have ACME challenge solving routes inserted into it
                                in order to solve HTTP01 challenges. This is typically
                                used in conjunction with ingress controllers like
                                ingress-gce, which maintains a 1:1 mapping between
                                external IPs and ingress resources.
                              type: string
                            podTemplate:
                              description: Optional pod template used to configure
                                the ACME challenge solver pods used for HTTP01 challenges.
                              properties:
                                metadata:
                                  description: ObjectMeta overrides for the pod used
                                    to solve HTTP01 challenges. Only the 'labels'
                                    and 'annotations' fields may be set. If labels
                                    or annotations overlap with in-built values, the
                                    values here will override the in-built values.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations that should be added
                                        to the create ACME HTTP01 solver pods.
                                      type: object
                                    labels:
                                      additionalProperties:
                                        type: string
                                      description: Labels that should be added to
                                        the created ACME HTTP01 solver pods.
                                      type: object
                                  type: object
                                spec:
                                  description: PodSpec defines overrides for the HTTP01
                                    challenge solver pod. Only the 'priorityClassName',
                                    'nodeSelector', 'affinity', 'serviceAccountName'
                                    and 'tolerations' fields are supported currently.
                                    All other fields will be ignored.
                                  properties:
                                    affinity:
                                      description: If specified, the pod's scheduling
                                        constraints
                                      properties:
                                        nodeAffinity:
                                          description: Describes node affinity scheduling
                                            rules for the pod.
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                affinity expressions, etc.), compute
                                                a sum by iterating through the elements
                                                of this field and adding "weight"
                                                to the sum if the node matches the
                                                corresponding matchExpressions; the
                                                node(s) with the highest sum are the
                                                most preferred.
                                              items:
                                                description: An empty preferred scheduling
                                                  term matches all objects with implicit
                                                  weight 0 (i.e. it's a no-op). A
                                                  null preferred scheduling term matches
                                                  no objects (i.e. is also a no-op).
                                                properties:
                                                  preference:
                                                    description: A node selector term,
                                                      associated with the corresponding
                                                      weight.
                                                    properties:
                                                      matchExpressions:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's labels.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchFields:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's fields.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                    type: object
                                                  weight:
                                                    description: Weight associated
                                                      with matching the corresponding
                                                      nodeSelectorTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - preference
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                affinity requirements specified by
                                                this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to an update), the system may or may
                                                not try to eventually evict the pod
                                                from its node.
                                              properties:
                                                nodeSelectorTerms:
                                                  description: Required. A list of
                                                    node selector terms. The terms
                                                    are ORed.
                                                  items:
                                                    description: A null or empty node
                                                      selector term matches no objects.
                                                      The requirements of them are
                                                      ANDed. The TopologySelectorTerm
                                                      type implements a subset of
                                                      the NodeSelectorTerm.
                                                    properties:
                                                      matchExpressions:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's labels.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchFields:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's fields.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                    type: object
                                                  type: array
                                              required:
                                              - nodeSelectorTerms
                                              type: object
                                          type: object
                                        podAffinity:
                                          description: Describes pod affinity scheduling
                                            rules (e.g. co-locate this pod in the
                                            same node, zone, etc. as some other pod(s)).
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                affinity expressions, etc.), compute
                                                a sum by iterating through the elements
                                                of this field and adding "weight"
                                                to the sum if the node has pods which
                                                matches the corresponding podAffinityTerm;
                                                the node(s) with the highest sum are
                                                the most preferred.
                                              items:
                                                description: The weights of all of
                                                  the matched WeightedPodAffinityTerm
                                                  fields are added per-node to find
                                                  the most preferred node(s)
                                                properties:
                                                  podAffinityTerm:
                                                    description: Required. A pod affinity
                                                      term, associated with the corresponding
                                                      weight.
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces. This field
                                                          is beta-level and is only
                                                          honored when PodAffinityNamespaceSelector
                                                          feature is enabled.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace"
                                                        items:
                                                          type: string
                                                        type: array
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                                    required:
                                                    - topologyKey
                                                    type: object
                                                  weight:
                                                    description: weight associated
                                                      with matching the corresponding
                                                      podAffinityTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - podAffinityTerm
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                affinity requirements specified by
                                                this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to a pod label update), the system
                                                may or may not try to eventually evict
                                                the pod from its node. When there
                                                are multiple elements, the lists of
                                                nodes corresponding to each podAffinityTerm
                                                are intersected, i.e. all terms must
                                                be satisfied.
                                              items:
                                                description: Defines a set of pods
                                                  (namely those matching the labelSelector
                                                  relative to the given namespace(s))
                                                  that this pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with, where co-located is defined
                                                  as running on a node whose value
                                                  of the label with key <topologyKey>
                                                  matches that of any node on which
                                                  a pod of the set of pods is running
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this
                                                      case pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaceSelector:
                                                    description: A label query over
                                                      the set of namespaces that the
                                                      term applies to. The term is
                                                      applied to the union of the
                                                      namespaces selected by this
                                                      field and the ones listed in
                                                      the namespaces field. null selector
                                                      and null or empty namespaces
                                                      list means "this pod's namespace".
                                                      An empty selector ({}) matches
                                                      all namespaces. This field is
                                                      beta-level and is only honored
                                                      when PodAffinityNamespaceSelector
                                                      feature is enabled.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaces:
                                                    description: namespaces specifies
                                                      a static list of namespace names
                                                      that the term applies to. The
                                                      term is applied to the union
                                                      of the namespaces listed in
                                                      this field and the ones selected
                                                      by namespaceSelector. null or
                                                      empty namespaces list and null
                                                      namespaceSelector means "this
                                                      pod's namespace"
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not
                                                      co-located (anti-affinity) with
                                                      the pods matching the labelSelector
                                                      in the specified namespaces,
                                                      where co-located is defined
                                                      as running on a node whose value
                                                      of the label with key topologyKey
                                                      matches that of any node on
                                                      which any of the selected pods
                                                      is running. Empty topologyKey
                                                      is not allowed.
                                                    type: string
                                                required:
                                                - topologyKey
                                                type: object
                                              type: array
                                          type: object
                                        podAntiAffinity:
                                          description: Describes pod anti-affinity
                                            scheduling rules (e.g. avoid putting this
                                            pod in the same node, zone, etc. as some
                                            other pod(s)).
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the anti-affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                anti-affinity expressions, etc.),
                                                compute a sum by iterating through
                                                the elements of this field and adding
                                                "weight" to the sum if the node has
                                                pods which matches the corresponding
                                                podAffinityTerm; the node(s) with
                                                the highest sum are the most preferred.
                                              items:
                                                description: The weights of all of
                                                  the matched WeightedPodAffinityTerm
                                                  fields are added per-node to find
                                                  the most preferred node(s)
                                                properties:
                                                  podAffinityTerm:
                                                    description: Required. A pod affinity
                                                      term, associated with the corresponding
                                                      weight.
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces. This field
                                                          is beta-level and is only
                                                          honored when PodAffinityNamespaceSelector
                                                          feature is enabled.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace"
                                                        items:
                                                          type: string
                                                        type: array
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                                    required:
                                                    - topologyKey
                                                    type: object
                                                  weight:
                                                    description: weight associated
                                                      with matching the corresponding
                                                      podAffinityTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - podAffinityTerm
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the anti-affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                anti-affinity requirements specified
                                                by this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to a pod label update), the system
                                                may or may not try to eventually evict
                                                the pod from its node. When there
                                                are multiple elements, the lists of
                                                nodes corresponding to each podAffinityTerm
                                                are intersected, i.e. all terms must
                                                be satisfied.
                                              items:
                                                description: Defines a set of pods
                                                  (namely those matching the labelSelector
                                                  relative to the given namespace(s))
                                                  that this pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with, where co-located is defined
                                                  as running on a node whose value
                                                  of the label with key <topologyKey>
                                                  matches that of any node on which
                                                  a pod of the set of pods is running
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this
                                                      case pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaceSelector:
                                                    description: A label query over
                                                      the set of namespaces that the
                                                      term applies to. The term is
                                                      applied to the union of the
                                                      namespaces selected by this
                                                      field and the ones listed in
                                                      the namespaces field. null selector
                                                      and null or empty namespaces
                                                      list means "this pod's namespace".
                                                      An empty selector ({}) matches
                                                      all namespaces. This field is
                                                      beta-level and is only honored
                                                      when PodAffinityNamespaceSelector
                                                      feature is enabled.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaces:
                                                    description: namespaces specifies
                                                      a static list of namespace names
                                                      that the term applies to. The
                                                      term is applied to the union
                                                      of the namespaces listed in
                                                      this field and the ones selected
                                                      by namespaceSelector. null or
                                                      empty namespaces list and null
                                                      namespaceSelector means "this
                                                      pod's namespace"
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not
                                                      co-located (anti-affinity) with
                                                      the pods matching the labelSelector
                                                      in the specified namespaces,
                                                      where co-located is defined
                                                      as running on a node whose value
                                                      of the label with key topologyKey
                                                      matches that of any node on
                                                      which any of the selected pods
                                                      is running. Empty topologyKey
                                                      is not allowed.
                                                    type: string
                                                required:
                                                - topologyKey
                                                type: object
                                              type: array
                                          type: object
                                      type: object
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: 'NodeSelector is a selector which
                                        must be true for the pod to fit on a node.
                                        Selector which must match a node''s labels
                                        for the pod to be scheduled on that node.
                                        More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                      type: object
                                    priorityClassName:
                                      description: If specified, the pod's priorityClassName.
                                      type: string
                                    serviceAccountName:
                                      description: If specified, the pod's service
                                        account
                                      type: string
                                    tolerations:
                                      description: If specified, the pod's tolerations.
                                      items:
                                        description: The pod this Toleration is attached
                                          to tolerates any taint that matches the
                                          triple <key,value,effect> using the matching
                                          operator <operator>.
                                        properties:
                                          effect:
                                            description: Effect indicates the taint
                                              effect to match. Empty means match all
                                              taint effects. When specified, allowed
                                              values are NoSchedule, PreferNoSchedule
                                              and NoExecute.
                                            type: string
                                          key:
                                            description: Key is the taint key that
                                              the toleration applies to. Empty means
                                              match all taint keys. If the key is
                                              empty, operator must be Exists; this
                                              combination means to match all values
                                              and all keys.
                                            type: string
                                          operator:
                                            description: Operator represents a key's
                                              relationship to the value. Valid operators
                                              are Exists and Equal. Defaults to Equal.
                                              Exists is equivalent to wildcard for
                                              value, so that a pod can tolerate all
                                              taints of a particular category.
                                            type: string
                                          tolerationSeconds:
                                            description: TolerationSeconds represents
                                              the period of time the toleration (which
                                              must be of effect NoExecute, otherwise
                                              this field is ignored) tolerates the
                                              taint. By default, it is not set, which
                                              means tolerate the taint forever (do
                                              not evict). Zero and negative values
                                              will be treated as 0 (evict immediately)
                                              by the system.
                                            format: int64
                                            type: integer
                                          value:
                                            description: Value is the taint value
                                              the toleration matches to. If the operator
                                              is Exists, the value should be empty,
                                              otherwise just a regular string.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            serviceType:
                              description: Optional service type for Kubernetes solver
                                service. Supported values are NodePort or ClusterIP.
                                If unset, defaults to NodePort.
                              type: string
                          type: object
                      type: object
                    selector:
                      description: Selector selects a set of DNSNames on the Certificate
                        resource that should be solved using this challenge solver.
                        If not specified, the solver will be treated as the 'default'
                        solver with the lowest priority, i.e. if any other solver
                        has a more specific match, it will be used instead.
                      properties:
                        dnsNames:
                          description: List of DNSNames that this solver will be used
                            to solve. If specified and a match is found, a dnsNames
                            selector will take precedence over a dnsZones selector.
                            If multiple solvers match with the same dnsNames value,
                            the solver with the most matching labels in matchLabels
                            will be selected. If neither has more matches, the solver
                            defined earlier in the list will be selected.
                          items:
                            type: string
                          type: array
                        dnsZones:
                          description: List of DNSZones that this solver will be used
                            to solve. The most specific DNS zone match specified here
                            will take precedence over other DNS zone matches, so a
                            solver specifying sys.example.com will be selected over
                            one specifying example.com for the domain www.sys.example.com.
                            If multiple solvers match with the same dnsZones value,
                            the solver with the most matching labels in matchLabels
                            will be selected. If neither has more matches, the solver
                            defined earlier in the list will be selected.
                          items:
                            type: string
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: A label selector that is used to refine the
                            set of certificate's that this challenge solver will apply
                            to.
                          type: object
                      type: object
                  type: object
                token:
                  description: The ACME challenge token for this challenge. This is
                    the raw value returned from the ACME server.
                  type: string
                type:
                  description: The type of ACME challenge this resource represents.
                    One of "HTTP-01" or "DNS-01".
                  enum:
                  - HTTP-01
                  - DNS-01
                  type: string
                url:
                  description: The URL of the ACME Challenge resource for this challenge.
                    This can be used to lookup details about the status of this challenge.
                  type: string
                wildcard:
                  description: wildcard will be true if this challenge is for a wildcard
                    identifier, for example '*.example.com'.
                  type: boolean
              required:
              - authorizationURL
              - dnsName
              - issuerRef
              - key
              - solver
              - token
              - type
              - url
              type: object
            status:
              properties:
                presented:
                  description: presented will be set to true if the challenge values
                    for this challenge are currently 'presented'. This *does not*
                    imply the self check is passing. Only that the values have been
                    'submitted' for the appropriate challenge mechanism (i.e. the
                    DNS01 TXT record has been presented, or the HTTP01 configuration
                    has been configured).
                  type: boolean
                processing:
                  description: Used to denote whether this challenge should be processed
                    or not. This field will only be set to true by the 'scheduling'
                    component. It will only be set to false by the 'challenges' controller,
                    after the challenge has reached a final state or timed out. If
                    this field is set to false, the challenge controller will not
                    take any more action.
                  type: boolean
                reason:
                  description: Contains human readable information on why the Challenge
                    is in the current state.
                  type: string
                state:
                  description: Contains the current 'state' of the challenge. If not
                    set, the state of the challenge is unknown.
                  enum:
                  - valid
                  - ready
                  - pending
                  - processing
                  - invalid
                  - expired
                  - errored
                  type: string
              type: object
          required:
          - metadata
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - cert-manager
      - cert-manager-acme
      kind: Challenge
      listKind: ChallengeList
      plural: challenges
      singular: challenge
    conditions:
    - lastTransitionTime: "2021-12-04T17:04:21Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-04T17:04:22Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2021-12-04T16:58:57Z"
    generation: 1
    labels:
      io.cilium.k8s.crd.schema.version: 1.23.2
    name: ciliumclusterwidenetworkpolicies.cilium.io
    resourceVersion: "920"
    uid: 34300659-ef4d-44ee-a137-ade12b195928
  spec:
    conversion:
      strategy: None
    group: cilium.io
    names:
      kind: CiliumClusterwideNetworkPolicy
      listKind: CiliumClusterwideNetworkPolicyList
      plural: ciliumclusterwidenetworkpolicies
      shortNames:
      - ccnp
      singular: ciliumclusterwidenetworkpolicy
    scope: Cluster
    versions:
    - name: v2
      schema:
        openAPIV3Schema:
          description: CiliumClusterwideNetworkPolicy is a Kubernetes third-party
            resource with an modified version of CiliumNetworkPolicy which is cluster
            scoped rather than namespace scoped.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec is the desired Cilium specific rule specification.
              oneOf:
              - properties:
                  endpointSelector: {}
                required:
                - endpointSelector
              - properties:
                  nodeSelector: {}
                required:
                - nodeSelector
              properties:
                description:
                  description: Description is a free form string, it can be used by
                    the creator of the rule to store human readable explanation of
                    the purpose of this rule. Rules cannot be identified by comment.
                  type: string
                egress:
                  description: Egress is a list of EgressRule which are enforced at
                    egress. If omitted or empty, this rule does not apply at egress.
                  items:
                    description: "EgressRule contains all rule types which can be
                      applied at egress, i.e. network traffic that originates inside
                      the endpoint and exits the endpoint selected by the endpointSelector.
                      \n - All members of this structure are optional. If omitted
                      or empty, the   member will have no effect on the rule. \n -
                      If multiple members of the structure are specified, then all
                      members   must match in order for the rule to take effect. The
                      exception to this   rule is the ToRequires member; the effects
                      of any Requires field in any   rule will apply to all other
                      rules as well. \n - ToEndpoints, ToCIDR, ToCIDRSet, ToEntities,
                      ToServices and ToGroups are   mutually exclusive. Only one of
                      these members may be present within an   individual rule."
                    properties:
                      toCIDR:
                        description: "ToCIDR is a list of IP blocks which the endpoint
                          subject to the rule is allowed to initiate connections.
                          Only connections destined for outside of the cluster and
                          not targeting the host will be subject to CIDR rules.  This
                          will match on the destination IP address of outgoing connections.
                          Adding a prefix into ToCIDR or into ToCIDRSet with no ExcludeCIDRs
                          is equivalent. Overlaps are allowed between ToCIDR and ToCIDRSet.
                          \n Example: Any endpoint with the label \"app=database-proxy\"
                          is allowed to initiate connections to 10.2.3.0/24"
                        items:
                          description: 'CIDR specifies a block of IP addresses. Example:
                            192.0.2.1/32'
                          pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                          type: string
                        type: array
                      toCIDRSet:
                        description: "ToCIDRSet is a list of IP blocks which the endpoint
                          subject to the rule is allowed to initiate connections to
                          in addition to connections which are allowed via ToEndpoints,
                          along with a list of subnets contained within their corresponding
                          IP block to which traffic should not be allowed. This will
                          match on the destination IP address of outgoing connections.
                          Adding a prefix into ToCIDR or into ToCIDRSet with no ExcludeCIDRs
                          is equivalent. Overlaps are allowed between ToCIDR and ToCIDRSet.
                          \n Example: Any endpoint with the label \"app=database-proxy\"
                          is allowed to initiate connections to 10.2.3.0/24 except
                          from IPs in subnet 10.2.3.0/28."
                        items:
                          description: CIDRRule is a rule that specifies a CIDR prefix
                            to/from which outside communication  is allowed, along
                            with an optional list of subnets within that CIDR prefix
                            to/from which outside communication is not allowed.
                          properties:
                            cidr:
                              description: CIDR is a CIDR prefix / IP Block.
                              pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                              type: string
                            except:
                              description: ExceptCIDRs is a list of IP blocks which
                                the endpoint subject to the rule is not allowed to
                                initiate connections to. These CIDR prefixes should
                                be contained within Cidr. These exceptions are only
                                applied to the Cidr in this CIDRRule, and do not apply
                                to any other CIDR prefixes in any other CIDRRules.
                              items:
                                description: 'CIDR specifies a block of IP addresses.
                                  Example: 192.0.2.1/32'
                                pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                                type: string
                              type: array
                          required:
                          - cidr
                          type: object
                        type: array
                      toEndpoints:
                        description: "ToEndpoints is a list of endpoints identified
                          by an EndpointSelector to which the endpoints subject to
                          the rule are allowed to communicate. \n Example: Any endpoint
                          with the label \"role=frontend\" can communicate with any
                          endpoint carrying the label \"role=backend\"."
                        items:
                          description: EndpointSelector is a wrapper for k8s LabelSelector.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    enum:
                                    - In
                                    - NotIn
                                    - Exists
                                    - DoesNotExist
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                description: MatchLabelsValue represents the value
                                  from the MatchLabels {key,value} pair.
                                maxLength: 63
                                pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        type: array
                      toEntities:
                        description: ToEntities is a list of special entities to which
                          the endpoint subject to the rule is allowed to initiate
                          connections. Supported entities are `world`, `cluster` and
                          `host`
                        items:
                          description: Entity specifies the class of receiver/sender
                            endpoints that do not have individual identities.  Entities
                            are used to describe "outside of cluster", "host", etc.
                          enum:
                          - all
                          - world
                          - cluster
                          - host
                          - init
                          - unmanaged
                          - remote-node
                          - health
                          - none
                          type: string
                        type: array
                      toFQDNs:
                        description: "ToFQDN allows whitelisting DNS names in place
                          of IPs. The IPs that result from DNS resolution of `ToFQDN.MatchName`s
                          are added to the same EgressRule object as ToCIDRSet entries,
                          and behave accordingly. Any L4 and L7 rules within this
                          EgressRule will also apply to these IPs. The DNS -> IP mapping
                          is re-resolved periodically from within the cilium-agent,
                          and the IPs in the DNS response are effected in the policy
                          for selected pods as-is (i.e. the list of IPs is not modified
                          in any way). Note: An explicit rule to allow for DNS traffic
                          is needed for the pods, as ToFQDN counts as an egress rule
                          and will enforce egress policy when PolicyEnforcment=default.
                          Note: If the resolved IPs are IPs within the kubernetes
                          cluster, the ToFQDN rule will not apply to that IP. Note:
                          ToFQDN cannot occur in the same policy as other To* rules.
                          \n The current implementation has a number of limitations:
                          - The DNS resolution originates from cilium-agent, and not
                          from the pods. Differences between the responses seen by
                          cilium agent and a particular pod will whitelist the incorrect
                          IP. - DNS TTLs are ignored, and cilium-agent will repoll
                          on a short interval (5 seconds). Each change to the DNS
                          data will trigger a policy regeneration. This may result
                          in delayed updates to the policy for an endpoint when the
                          data changes often or the system is under load."
                        items:
                          properties:
                            matchName:
                              description: MatchName matches literal DNS names. A
                                trailing "." is automatically added when missing.
                              pattern: ^([-a-zA-Z0-9_]+[.]?)+$
                              type: string
                            matchPattern:
                              description: "MatchPattern allows using wildcards to
                                match DNS names. All wildcards are case insensitive.
                                The wildcards are: - \"*\" matches 0 or more DNS valid
                                characters, and may occur anywhere in the pattern.
                                As a special case a \"*\" as the leftmost character,
                                without a following \".\" matches all subdomains as
                                well as the name to the right. A trailing \".\" is
                                automatically added when missing. \n Examples: `*.cilium.io`
                                matches subomains of cilium at that level   www.cilium.io
                                and blog.cilium.io match, cilium.io and google.com
                                do not `*cilium.io` matches cilium.io and all subdomains
                                1 level below   www.cilium.io, blog.cilium.io and
                                cilium.io match, google.com does not sub*.cilium.io
                                matches subdomains of cilium where the subdomain component
                                begins with \"sub\"   sub.cilium.io and subdomain.cilium.io
                                match, www.cilium.io,   blog.cilium.io, cilium.io
                                and google.com do not"
                              pattern: ^([-a-zA-Z0-9_*]+[.]?)+$
                              type: string
                          type: object
                        type: array
                      toGroups:
                        description: "ToGroups is a directive that allows the integration
                          with multiple outside providers. Currently, only AWS is
                          supported, and the rule can select by multiple sub directives:
                          \n Example: toGroups: - aws:     securityGroupsIds:     -
                          'sg-XXXXXXXXXXXXX'"
                        items:
                          description: ToGroups structure to store all kinds of new
                            integrations that needs a new derivative policy.
                          properties:
                            aws:
                              description: AWSGroup is an structure that can be used
                                to whitelisting information from AWS integration
                              properties:
                                labels:
                                  additionalProperties:
                                    type: string
                                  type: object
                                region:
                                  type: string
                                securityGroupsIds:
                                  items:
                                    type: string
                                  type: array
                                securityGroupsNames:
                                  items:
                                    type: string
                                  type: array
                              type: object
                          type: object
                        type: array
                      toPorts:
                        description: "ToPorts is a list of destination ports identified
                          by port number and protocol which the endpoint subject to
                          the rule is allowed to connect to. \n Example: Any endpoint
                          with the label \"role=frontend\" is allowed to initiate
                          connections to destination port 8080/tcp"
                        items:
                          description: PortRule is a list of ports/protocol combinations
                            with optional Layer 7 rules which must be met.
                          properties:
                            originatingTLS:
                              description: OriginatingTLS is the TLS context for the
                                connections originated by the L7 proxy.  For egress
                                policy this specifies the client-side TLS parameters
                                for the upstream connection originating from the L7
                                proxy to the remote destination. For ingress policy
                                this specifies the client-side TLS parameters for
                                the connection from the L7 proxy to the local endpoint.
                              properties:
                                certificate:
                                  description: Certificate is the file name or k8s
                                    secret item name for the certificate chain. If
                                    omitted, 'tls.crt' is assumed, if it exists. If
                                    given, the item must exist.
                                  type: string
                                privateKey:
                                  description: PrivateKey is the file name or k8s
                                    secret item name for the private key matching
                                    the certificate chain. If omitted, 'tls.key' is
                                    assumed, if it exists. If given, the item must
                                    exist.
                                  type: string
                                secret:
                                  description: 'Secret is the secret that contains
                                    the certificates and private key for the TLS context.
                                    By default, Cilium will search in this secret
                                    for the following items:  - ''ca.crt''  - Which
                                    represents the trusted CA to verify remote source.  -
                                    ''tls.crt'' - Which represents the public key
                                    certificate.  - ''tls.key'' - Which represents
                                    the private key matching the public key                certificate.'
                                  properties:
                                    name:
                                      description: Name is the name of the secret.
                                      type: string
                                    namespace:
                                      description: Namespace is the namespace in which
                                        the secret exists. Context of use determines
                                        the default value if left out (e.g., "default").
                                      type: string
                                  required:
                                  - name
                                  type: object
                                trustedCA:
                                  description: TrustedCA is the file name or k8s secret
                                    item name for the trusted CA. If omitted, 'ca.crt'
                                    is assumed, if it exists. If given, the item must
                                    exist.
                                  type: string
                              required:
                              - secret
                              type: object
                            ports:
                              description: Ports is a list of L4 port/protocol
                              items:
                                description: PortProtocol specifies an L4 port with
                                  an optional transport protocol
                                properties:
                                  port:
                                    description: Port is an L4 port number. For now
                                      the string will be strictly parsed as a single
                                      uint16. In the future, this field may support
                                      ranges in the form "1024-2048 Port can also
                                      be a port name, which must contain at least
                                      one [a-z], and may also contain [0-9] and '-'
                                      anywhere except adjacent to another '-' or in
                                      the beginning or the end.
                                    pattern: ^(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[0-9]{1,4})|([a-zA-Z0-9]-?)*[a-zA-Z](-?[a-zA-Z0-9])*$
                                    type: string
                                  protocol:
                                    description: "Protocol is the L4 protocol. If
                                      omitted or empty, any protocol matches. Accepted
                                      values: \"TCP\", \"UDP\", \"\"/\"ANY\" \n Matching
                                      on ICMP is not supported. \n Named port specified
                                      for a container may narrow this down, but may
                                      not contradict this."
                                    enum:
                                    - TCP
                                    - UDP
                                    - ANY
                                    type: string
                                required:
                                - port
                                type: object
                              type: array
                            rules:
                              description: Rules is a list of additional port level
                                rules which must be met in order for the PortRule
                                to allow the traffic. If omitted or empty, no layer
                                7 rules are enforced.
                              properties:
                                dns:
                                  description: DNS-specific rules.
                                  items:
                                    description: PortRuleDNS is a list of allowed
                                      DNS lookups.
                                    properties:
                                      matchName:
                                        description: MatchName matches literal DNS
                                          names. A trailing "." is automatically added
                                          when missing.
                                        pattern: ^([-a-zA-Z0-9_]+[.]?)+$
                                        type: string
                                      matchPattern:
                                        description: "MatchPattern allows using wildcards
                                          to match DNS names. All wildcards are case
                                          insensitive. The wildcards are: - \"*\"
                                          matches 0 or more DNS valid characters,
                                          and may occur anywhere in the pattern. As
                                          a special case a \"*\" as the leftmost character,
                                          without a following \".\" matches all subdomains
                                          as well as the name to the right. A trailing
                                          \".\" is automatically added when missing.
                                          \n Examples: `*.cilium.io` matches subomains
                                          of cilium at that level   www.cilium.io
                                          and blog.cilium.io match, cilium.io and
                                          google.com do not `*cilium.io` matches cilium.io
                                          and all subdomains 1 level below   www.cilium.io,
                                          blog.cilium.io and cilium.io match, google.com
                                          does not sub*.cilium.io matches subdomains
                                          of cilium where the subdomain component
                                          begins with \"sub\"   sub.cilium.io and
                                          subdomain.cilium.io match, www.cilium.io,
                                          \  blog.cilium.io, cilium.io and google.com
                                          do not"
                                        pattern: ^([-a-zA-Z0-9_*]+[.]?)+$
                                        type: string
                                    type: object
                                  type: array
                                http:
                                  description: HTTP specific rules.
                                  items:
                                    description: "PortRuleHTTP is a list of HTTP protocol
                                      constraints. All fields are optional, if all
                                      fields are empty or missing, the rule does not
                                      have any effect. \n All fields of this type
                                      are extended POSIX regex as defined by IEEE
                                      Std 1003.1, (i.e this follows the egrep/unix
                                      syntax, not the perl syntax) matched against
                                      the path of an incoming request. Currently it
                                      can contain characters disallowed from the conventional
                                      \"path\" part of a URL as defined by RFC 3986."
                                    properties:
                                      headerMatches:
                                        description: HeaderMatches is a list of HTTP
                                          headers which must be present and match
                                          against the given values. Mismatch field
                                          can be used to specify what to do when there
                                          is no match.
                                        items:
                                          description: HeaderMatch extends the HeaderValue
                                            for matching requirement of a named header
                                            field against an immediate string, a secret
                                            value, or a regex.  If none of the optional
                                            fields is present, then the header value
                                            is not matched, only presence of the header
                                            is enough.
                                          properties:
                                            mismatch:
                                              description: Mismatch identifies what
                                                to do in case there is no match. The
                                                default is to drop the request. Otherwise
                                                the overall rule is still considered
                                                as matching, but the mismatches are
                                                logged in the access log.
                                              enum:
                                              - LOG
                                              - ADD
                                              - DELETE
                                              - REPLACE
                                              type: string
                                            name:
                                              description: Name identifies the header.
                                              type: string
                                            secret:
                                              description: Secret refers to a secret
                                                that contains the value to be matched
                                                against. The secret must only contain
                                                one entry. If the referred secret
                                                does not exist, and there is no "Value"
                                                specified, the match will fail.
                                              properties:
                                                name:
                                                  description: Name is the name of
                                                    the secret.
                                                  type: string
                                                namespace:
                                                  description: Namespace is the namespace
                                                    in which the secret exists. Context
                                                    of use determines the default
                                                    value if left out (e.g., "default").
                                                  type: string
                                              required:
                                              - name
                                              type: object
                                            value:
                                              description: Value matches the exact
                                                value of the header. Can be specified
                                                either alone or together with "Secret";
                                                will be used as the header value if
                                                the secret can not be found in the
                                                latter case.
                                              type: string
                                          required:
                                          - name
                                          type: object
                                        type: array
                                      headers:
                                        description: Headers is a list of HTTP headers
                                          which must be present in the request. If
                                          omitted or empty, requests are allowed regardless
                                          of headers present.
                                        items:
                                          type: string
                                        type: array
                                      host:
                                        description: "Host is an extended POSIX regex
                                          matched against the host header of a request,
                                          e.g. \"foo.com\" \n If omitted or empty,
                                          the value of the host header is ignored."
                                        format: idn-hostname
                                        type: string
                                      method:
                                        description: "Method is an extended POSIX
                                          regex matched against the method of a request,
                                          e.g. \"GET\", \"POST\", \"PUT\", \"PATCH\",
                                          \"DELETE\", ... \n If omitted or empty,
                                          all methods are allowed."
                                        type: string
                                      path:
                                        description: "Path is an extended POSIX regex
                                          matched against the path of a request. Currently
                                          it can contain characters disallowed from
                                          the conventional \"path\" part of a URL
                                          as defined by RFC 3986. \n If omitted or
                                          empty, all paths are all allowed."
                                        type: string
                                    type: object
                                  type: array
                                kafka:
                                  description: Kafka-specific rules.
                                  items:
                                    description: PortRule is a list of Kafka protocol
                                      constraints. All fields are optional, if all
                                      fields are empty or missing, the rule will match
                                      all Kafka messages.
                                    properties:
                                      apiKey:
                                        description: "APIKey is a case-insensitive
                                          string matched against the key of a request,
                                          e.g. \"produce\", \"fetch\", \"createtopic\",
                                          \"deletetopic\", et al Reference: https://kafka.apache.org/protocol#protocol_api_keys
                                          \n If omitted or empty, and if Role is not
                                          specified, then all keys are allowed."
                                        type: string
                                      apiVersion:
                                        description: "APIVersion is the version matched
                                          against the api version of the Kafka message.
                                          If set, it has to be a string representing
                                          a positive integer. \n If omitted or empty,
                                          all versions are allowed."
                                        type: string
                                      clientID:
                                        description: "ClientID is the client identifier
                                          as provided in the request. \n From Kafka
                                          protocol documentation: This is a user supplied
                                          identifier for the client application. The
                                          user can use any identifier they like and
                                          it will be used when logging errors, monitoring
                                          aggregates, etc. For example, one might
                                          want to monitor not just the requests per
                                          second overall, but the number coming from
                                          each client application (each of which could
                                          reside on multiple servers). This id acts
                                          as a logical grouping across all requests
                                          from a particular client. \n If omitted
                                          or empty, all client identifiers are allowed."
                                        type: string
                                      role:
                                        description: "Role is a case-insensitive string
                                          and describes a group of API keys necessary
                                          to perform certain higher-level Kafka operations
                                          such as \"produce\" or \"consume\". A Role
                                          automatically expands into all APIKeys required
                                          to perform the specified higher-level operation.
                                          \n The following values are supported:  -
                                          \"produce\": Allow producing to the topics
                                          specified in the rule  - \"consume\": Allow
                                          consuming from the topics specified in the
                                          rule \n This field is incompatible with
                                          the APIKey field, i.e APIKey and Role cannot
                                          both be specified in the same rule. \n If
                                          omitted or empty, and if APIKey is not specified,
                                          then all keys are allowed."
                                        enum:
                                        - produce
                                        - consume
                                        type: string
                                      topic:
                                        description: "Topic is the topic name contained
                                          in the message. If a Kafka request contains
                                          multiple topics, then all topics must be
                                          allowed or the message will be rejected.
                                          \n This constraint is ignored if the matched
                                          request message type doesn't contain any
                                          topic. Maximum size of Topic can be 249
                                          characters as per recent Kafka spec and
                                          allowed characters are a-z, A-Z, 0-9, -,
                                          . and _. \n Older Kafka versions had longer
                                          topic lengths of 255, but in Kafka 0.10
                                          version the length was changed from 255
                                          to 249. For compatibility reasons we are
                                          using 255. \n If omitted or empty, all topics
                                          are allowed."
                                        maxLength: 255
                                        type: string
                                    type: object
                                  type: array
                                l7:
                                  description: Key-value pair rules.
                                  items:
                                    additionalProperties:
                                      type: string
                                    description: PortRuleL7 is a list of key-value
                                      pairs interpreted by a L7 protocol as protocol
                                      constraints. All fields are optional, if all
                                      fields are empty or missing, the rule does not
                                      have any effect.
                                    type: object
                                  type: array
                                l7proto:
                                  description: Name of the L7 protocol for which the
                                    Key-value pair rules apply.
                                  type: string
                              type: object
                            terminatingTLS:
                              description: TerminatingTLS is the TLS context for the
                                connection terminated by the L7 proxy.  For egress
                                policy this specifies the server-side TLS parameters
                                to be applied on the connections originated from the
                                local endpoint and terminated by the L7 proxy. For
                                ingress policy this specifies the server-side TLS
                                parameters to be applied on the connections originated
                                from a remote source and terminated by the L7 proxy.
                              properties:
                                certificate:
                                  description: Certificate is the file name or k8s
                                    secret item name for the certificate chain. If
                                    omitted, 'tls.crt' is assumed, if it exists. If
                                    given, the item must exist.
                                  type: string
                                privateKey:
                                  description: PrivateKey is the file name or k8s
                                    secret item name for the private key matching
                                    the certificate chain. If omitted, 'tls.key' is
                                    assumed, if it exists. If given, the item must
                                    exist.
                                  type: string
                                secret:
                                  description: 'Secret is the secret that contains
                                    the certificates and private key for the TLS context.
                                    By default, Cilium will search in this secret
                                    for the following items:  - ''ca.crt''  - Which
                                    represents the trusted CA to verify remote source.  -
                                    ''tls.crt'' - Which represents the public key
                                    certificate.  - ''tls.key'' - Which represents
                                    the private key matching the public key                certificate.'
                                  properties:
                                    name:
                                      description: Name is the name of the secret.
                                      type: string
                                    namespace:
                                      description: Namespace is the namespace in which
                                        the secret exists. Context of use determines
                                        the default value if left out (e.g., "default").
                                      type: string
                                  required:
                                  - name
                                  type: object
                                trustedCA:
                                  description: TrustedCA is the file name or k8s secret
                                    item name for the trusted CA. If omitted, 'ca.crt'
                                    is assumed, if it exists. If given, the item must
                                    exist.
                                  type: string
                              required:
                              - secret
                              type: object
                          type: object
                        type: array
                      toRequires:
                        description: "ToRequires is a list of additional constraints
                          which must be met in order for the selected endpoints to
                          be able to connect to other endpoints. These additional
                          constraints do no by itself grant access privileges and
                          must always be accompanied with at least one matching ToEndpoints.
                          \n Example: Any Endpoint with the label \"team=A\" requires
                          any endpoint to which it communicates to also carry the
                          label \"team=A\"."
                        items:
                          description: EndpointSelector is a wrapper for k8s LabelSelector.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    enum:
                                    - In
                                    - NotIn
                                    - Exists
                                    - DoesNotExist
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                description: MatchLabelsValue represents the value
                                  from the MatchLabels {key,value} pair.
                                maxLength: 63
                                pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        type: array
                      toServices:
                        description: "ToServices is a list of services to which the
                          endpoint subject to the rule is allowed to initiate connections.
                          Currently Cilium only supports toServices for K8s services
                          without selectors. \n Example: Any endpoint with the label
                          \"app=backend-app\" is allowed to initiate connections to
                          all cidrs backing the \"external-service\" service"
                        items:
                          description: Service wraps around selectors for services
                          properties:
                            k8sService:
                              description: K8sService selects service by name and
                                namespace pair
                              properties:
                                namespace:
                                  type: string
                                serviceName:
                                  type: string
                              type: object
                            k8sServiceSelector:
                              description: K8sServiceSelector selects services by
                                k8s labels and namespace
                              properties:
                                namespace:
                                  type: string
                                selector:
                                  description: ServiceSelector is a label selector
                                    for k8s services
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            enum:
                                            - In
                                            - NotIn
                                            - Exists
                                            - DoesNotExist
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        description: MatchLabelsValue represents the
                                          value from the MatchLabels {key,value} pair.
                                        maxLength: 63
                                        pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                              required:
                              - selector
                              type: object
                          type: object
                        type: array
                    type: object
                  type: array
                egressDeny:
                  description: EgressDeny is a list of EgressDenyRule which are enforced
                    at egress. Any rule inserted here will by denied regardless of
                    the allowed egress rules in the 'egress' field. If omitted or
                    empty, this rule does not apply at egress.
                  items:
                    description: "EgressDenyRule contains all rule types which can
                      be applied at egress, i.e. network traffic that originates inside
                      the endpoint and exits the endpoint selected by the endpointSelector.
                      \n - All members of this structure are optional. If omitted
                      or empty, the   member will have no effect on the rule. \n -
                      If multiple members of the structure are specified, then all
                      members   must match in order for the rule to take effect. The
                      exception to this   rule is the ToRequires member; the effects
                      of any Requires field in any   rule will apply to all other
                      rules as well. \n - ToEndpoints, ToCIDR, ToCIDRSet, ToEntities,
                      ToServices and ToGroups are   mutually exclusive. Only one of
                      these members may be present within an   individual rule."
                    properties:
                      toCIDR:
                        description: "ToCIDR is a list of IP blocks which the endpoint
                          subject to the rule is allowed to initiate connections.
                          Only connections destined for outside of the cluster and
                          not targeting the host will be subject to CIDR rules.  This
                          will match on the destination IP address of outgoing connections.
                          Adding a prefix into ToCIDR or into ToCIDRSet with no ExcludeCIDRs
                          is equivalent. Overlaps are allowed between ToCIDR and ToCIDRSet.
                          \n Example: Any endpoint with the label \"app=database-proxy\"
                          is allowed to initiate connections to 10.2.3.0/24"
                        items:
                          description: 'CIDR specifies a block of IP addresses. Example:
                            192.0.2.1/32'
                          pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                          type: string
                        type: array
                      toCIDRSet:
                        description: "ToCIDRSet is a list of IP blocks which the endpoint
                          subject to the rule is allowed to initiate connections to
                          in addition to connections which are allowed via ToEndpoints,
                          along with a list of subnets contained within their corresponding
                          IP block to which traffic should not be allowed. This will
                          match on the destination IP address of outgoing connections.
                          Adding a prefix into ToCIDR or into ToCIDRSet with no ExcludeCIDRs
                          is equivalent. Overlaps are allowed between ToCIDR and ToCIDRSet.
                          \n Example: Any endpoint with the label \"app=database-proxy\"
                          is allowed to initiate connections to 10.2.3.0/24 except
                          from IPs in subnet 10.2.3.0/28."
                        items:
                          description: CIDRRule is a rule that specifies a CIDR prefix
                            to/from which outside communication  is allowed, along
                            with an optional list of subnets within that CIDR prefix
                            to/from which outside communication is not allowed.
                          properties:
                            cidr:
                              description: CIDR is a CIDR prefix / IP Block.
                              pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                              type: string
                            except:
                              description: ExceptCIDRs is a list of IP blocks which
                                the endpoint subject to the rule is not allowed to
                                initiate connections to. These CIDR prefixes should
                                be contained within Cidr. These exceptions are only
                                applied to the Cidr in this CIDRRule, and do not apply
                                to any other CIDR prefixes in any other CIDRRules.
                              items:
                                description: 'CIDR specifies a block of IP addresses.
                                  Example: 192.0.2.1/32'
                                pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                                type: string
                              type: array
                          required:
                          - cidr
                          type: object
                        type: array
                      toEndpoints:
                        description: "ToEndpoints is a list of endpoints identified
                          by an EndpointSelector to which the endpoints subject to
                          the rule are allowed to communicate. \n Example: Any endpoint
                          with the label \"role=frontend\" can communicate with any
                          endpoint carrying the label \"role=backend\"."
                        items:
                          description: EndpointSelector is a wrapper for k8s LabelSelector.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    enum:
                                    - In
                                    - NotIn
                                    - Exists
                                    - DoesNotExist
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                description: MatchLabelsValue represents the value
                                  from the MatchLabels {key,value} pair.
                                maxLength: 63
                                pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        type: array
                      toEntities:
                        description: ToEntities is a list of special entities to which
                          the endpoint subject to the rule is allowed to initiate
                          connections. Supported entities are `world`, `cluster` and
                          `host`
                        items:
                          description: Entity specifies the class of receiver/sender
                            endpoints that do not have individual identities.  Entities
                            are used to describe "outside of cluster", "host", etc.
                          enum:
                          - all
                          - world
                          - cluster
                          - host
                          - init
                          - unmanaged
                          - remote-node
                          - health
                          - none
                          type: string
                        type: array
                      toGroups:
                        description: "ToGroups is a directive that allows the integration
                          with multiple outside providers. Currently, only AWS is
                          supported, and the rule can select by multiple sub directives:
                          \n Example: toGroups: - aws:     securityGroupsIds:     -
                          'sg-XXXXXXXXXXXXX'"
                        items:
                          description: ToGroups structure to store all kinds of new
                            integrations that needs a new derivative policy.
                          properties:
                            aws:
                              description: AWSGroup is an structure that can be used
                                to whitelisting information from AWS integration
                              properties:
                                labels:
                                  additionalProperties:
                                    type: string
                                  type: object
                                region:
                                  type: string
                                securityGroupsIds:
                                  items:
                                    type: string
                                  type: array
                                securityGroupsNames:
                                  items:
                                    type: string
                                  type: array
                              type: object
                          type: object
                        type: array
                      toPorts:
                        description: "ToPorts is a list of destination ports identified
                          by port number and protocol which the endpoint subject to
                          the rule is not allowed to connect to. \n Example: Any endpoint
                          with the label \"role=frontend\" is not allowed to initiate
                          connections to destination port 8080/tcp"
                        items:
                          description: PortDenyRule is a list of ports/protocol that
                            should be used for deny policies. This structure lacks
                            the L7Rules since it's not supported in deny policies.
                          properties:
                            ports:
                              description: Ports is a list of L4 port/protocol
                              items:
                                description: PortProtocol specifies an L4 port with
                                  an optional transport protocol
                                properties:
                                  port:
                                    description: Port is an L4 port number. For now
                                      the string will be strictly parsed as a single
                                      uint16. In the future, this field may support
                                      ranges in the form "1024-2048 Port can also
                                      be a port name, which must contain at least
                                      one [a-z], and may also contain [0-9] and '-'
                                      anywhere except adjacent to another '-' or in
                                      the beginning or the end.
                                    pattern: ^(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[0-9]{1,4})|([a-zA-Z0-9]-?)*[a-zA-Z](-?[a-zA-Z0-9])*$
                                    type: string
                                  protocol:
                                    description: "Protocol is the L4 protocol. If
                                      omitted or empty, any protocol matches. Accepted
                                      values: \"TCP\", \"UDP\", \"\"/\"ANY\" \n Matching
                                      on ICMP is not supported. \n Named port specified
                                      for a container may narrow this down, but may
                                      not contradict this."
                                    enum:
                                    - TCP
                                    - UDP
                                    - ANY
                                    type: string
                                required:
                                - port
                                type: object
                              type: array
                          type: object
                        type: array
                      toRequires:
                        description: "ToRequires is a list of additional constraints
                          which must be met in order for the selected endpoints to
                          be able to connect to other endpoints. These additional
                          constraints do no by itself grant access privileges and
                          must always be accompanied with at least one matching ToEndpoints.
                          \n Example: Any Endpoint with the label \"team=A\" requires
                          any endpoint to which it communicates to also carry the
                          label \"team=A\"."
                        items:
                          description: EndpointSelector is a wrapper for k8s LabelSelector.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    enum:
                                    - In
                                    - NotIn
                                    - Exists
                                    - DoesNotExist
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                description: MatchLabelsValue represents the value
                                  from the MatchLabels {key,value} pair.
                                maxLength: 63
                                pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        type: array
                      toServices:
                        description: "ToServices is a list of services to which the
                          endpoint subject to the rule is allowed to initiate connections.
                          Currently Cilium only supports toServices for K8s services
                          without selectors. \n Example: Any endpoint with the label
                          \"app=backend-app\" is allowed to initiate connections to
                          all cidrs backing the \"external-service\" service"
                        items:
                          description: Service wraps around selectors for services
                          properties:
                            k8sService:
                              description: K8sService selects service by name and
                                namespace pair
                              properties:
                                namespace:
                                  type: string
                                serviceName:
                                  type: string
                              type: object
                            k8sServiceSelector:
                              description: K8sServiceSelector selects services by
                                k8s labels and namespace
                              properties:
                                namespace:
                                  type: string
                                selector:
                                  description: ServiceSelector is a label selector
                                    for k8s services
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            enum:
                                            - In
                                            - NotIn
                                            - Exists
                                            - DoesNotExist
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        description: MatchLabelsValue represents the
                                          value from the MatchLabels {key,value} pair.
                                        maxLength: 63
                                        pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                              required:
                              - selector
                              type: object
                          type: object
                        type: array
                    type: object
                  type: array
                endpointSelector:
                  description: EndpointSelector selects all endpoints which should
                    be subject to this rule. EndpointSelector and NodeSelector cannot
                    be both empty and are mutually exclusive.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            enum:
                            - In
                            - NotIn
                            - Exists
                            - DoesNotExist
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        description: MatchLabelsValue represents the value from the
                          MatchLabels {key,value} pair.
                        maxLength: 63
                        pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                ingress:
                  description: Ingress is a list of IngressRule which are enforced
                    at ingress. If omitted or empty, this rule does not apply at ingress.
                  items:
                    description: "IngressRule contains all rule types which can be
                      applied at ingress, i.e. network traffic that originates outside
                      of the endpoint and is entering the endpoint selected by the
                      endpointSelector. \n - All members of this structure are optional.
                      If omitted or empty, the   member will have no effect on the
                      rule. \n - If multiple members are set, all of them need to
                      match in order for   the rule to take effect. The exception
                      to this rule is FromRequires field;   the effects of any Requires
                      field in any rule will apply to all other   rules as well. \n
                      - FromEndpoints, FromCIDR, FromCIDRSet and FromEntities are
                      mutually   exclusive. Only one of these members may be present
                      within an individual   rule."
                    properties:
                      fromCIDR:
                        description: "FromCIDR is a list of IP blocks which the endpoint
                          subject to the rule is allowed to receive connections from.
                          Only connections which do *not* originate from the cluster
                          or from the local host are subject to CIDR rules. In order
                          to allow in-cluster connectivity, use the FromEndpoints
                          field.  This will match on the source IP address of incoming
                          connections. Adding  a prefix into FromCIDR or into FromCIDRSet
                          with no ExcludeCIDRs is  equivalent.  Overlaps are allowed
                          between FromCIDR and FromCIDRSet. \n Example: Any endpoint
                          with the label \"app=my-legacy-pet\" is allowed to receive
                          connections from 10.3.9.1"
                        items:
                          description: 'CIDR specifies a block of IP addresses. Example:
                            192.0.2.1/32'
                          pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                          type: string
                        type: array
                      fromCIDRSet:
                        description: "FromCIDRSet is a list of IP blocks which the
                          endpoint subject to the rule is allowed to receive connections
                          from in addition to FromEndpoints, along with a list of
                          subnets contained within their corresponding IP block from
                          which traffic should not be allowed. This will match on
                          the source IP address of incoming connections. Adding a
                          prefix into FromCIDR or into FromCIDRSet with no ExcludeCIDRs
                          is equivalent. Overlaps are allowed between FromCIDR and
                          FromCIDRSet. \n Example: Any endpoint with the label \"app=my-legacy-pet\"
                          is allowed to receive connections from 10.0.0.0/8 except
                          from IPs in subnet 10.96.0.0/12."
                        items:
                          description: CIDRRule is a rule that specifies a CIDR prefix
                            to/from which outside communication  is allowed, along
                            with an optional list of subnets within that CIDR prefix
                            to/from which outside communication is not allowed.
                          properties:
                            cidr:
                              description: CIDR is a CIDR prefix / IP Block.
                              pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                              type: string
                            except:
                              description: ExceptCIDRs is a list of IP blocks which
                                the endpoint subject to the rule is not allowed to
                                initiate connections to. These CIDR prefixes should
                                be contained within Cidr. These exceptions are only
                                applied to the Cidr in this CIDRRule, and do not apply
                                to any other CIDR prefixes in any other CIDRRules.
                              items:
                                description: 'CIDR specifies a block of IP addresses.
                                  Example: 192.0.2.1/32'
                                pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                                type: string
                              type: array
                          required:
                          - cidr
                          type: object
                        type: array
                      fromEndpoints:
                        description: "FromEndpoints is a list of endpoints identified
                          by an EndpointSelector which are allowed to communicate
                          with the endpoint subject to the rule. \n Example: Any endpoint
                          with the label \"role=backend\" can be consumed by any endpoint
                          carrying the label \"role=frontend\"."
                        items:
                          description: EndpointSelector is a wrapper for k8s LabelSelector.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    enum:
                                    - In
                                    - NotIn
                                    - Exists
                                    - DoesNotExist
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                description: MatchLabelsValue represents the value
                                  from the MatchLabels {key,value} pair.
                                maxLength: 63
                                pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        type: array
                      fromEntities:
                        description: FromEntities is a list of special entities which
                          the endpoint subject to the rule is allowed to receive connections
                          from. Supported entities are `world`, `cluster` and `host`
                        items:
                          description: Entity specifies the class of receiver/sender
                            endpoints that do not have individual identities.  Entities
                            are used to describe "outside of cluster", "host", etc.
                          enum:
                          - all
                          - world
                          - cluster
                          - host
                          - init
                          - unmanaged
                          - remote-node
                          - health
                          - none
                          type: string
                        type: array
                      fromRequires:
                        description: "FromRequires is a list of additional constraints
                          which must be met in order for the selected endpoints to
                          be reachable. These additional constraints do no by itself
                          grant access privileges and must always be accompanied with
                          at least one matching FromEndpoints. \n Example: Any Endpoint
                          with the label \"team=A\" requires consuming endpoint to
                          also carry the label \"team=A\"."
                        items:
                          description: EndpointSelector is a wrapper for k8s LabelSelector.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    enum:
                                    - In
                                    - NotIn
                                    - Exists
                                    - DoesNotExist
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                description: MatchLabelsValue represents the value
                                  from the MatchLabels {key,value} pair.
                                maxLength: 63
                                pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        type: array
                      toPorts:
                        description: "ToPorts is a list of destination ports identified
                          by port number and protocol which the endpoint subject to
                          the rule is allowed to receive connections on. \n Example:
                          Any endpoint with the label \"app=httpd\" can only accept
                          incoming connections on port 80/tcp."
                        items:
                          description: PortRule is a list of ports/protocol combinations
                            with optional Layer 7 rules which must be met.
                          properties:
                            originatingTLS:
                              description: OriginatingTLS is the TLS context for the
                                connections originated by the L7 proxy.  For egress
                                policy this specifies the client-side TLS parameters
                                for the upstream connection originating from the L7
                                proxy to the remote destination. For ingress policy
                                this specifies the client-side TLS parameters for
                                the connection from the L7 proxy to the local endpoint.
                              properties:
                                certificate:
                                  description: Certificate is the file name or k8s
                                    secret item name for the certificate chain. If
                                    omitted, 'tls.crt' is assumed, if it exists. If
                                    given, the item must exist.
                                  type: string
                                privateKey:
                                  description: PrivateKey is the file name or k8s
                                    secret item name for the private key matching
                                    the certificate chain. If omitted, 'tls.key' is
                                    assumed, if it exists. If given, the item must
                                    exist.
                                  type: string
                                secret:
                                  description: 'Secret is the secret that contains
                                    the certificates and private key for the TLS context.
                                    By default, Cilium will search in this secret
                                    for the following items:  - ''ca.crt''  - Which
                                    represents the trusted CA to verify remote source.  -
                                    ''tls.crt'' - Which represents the public key
                                    certificate.  - ''tls.key'' - Which represents
                                    the private key matching the public key                certificate.'
                                  properties:
                                    name:
                                      description: Name is the name of the secret.
                                      type: string
                                    namespace:
                                      description: Namespace is the namespace in which
                                        the secret exists. Context of use determines
                                        the default value if left out (e.g., "default").
                                      type: string
                                  required:
                                  - name
                                  type: object
                                trustedCA:
                                  description: TrustedCA is the file name or k8s secret
                                    item name for the trusted CA. If omitted, 'ca.crt'
                                    is assumed, if it exists. If given, the item must
                                    exist.
                                  type: string
                              required:
                              - secret
                              type: object
                            ports:
                              description: Ports is a list of L4 port/protocol
                              items:
                                description: PortProtocol specifies an L4 port with
                                  an optional transport protocol
                                properties:
                                  port:
                                    description: Port is an L4 port number. For now
                                      the string will be strictly parsed as a single
                                      uint16. In the future, this field may support
                                      ranges in the form "1024-2048 Port can also
                                      be a port name, which must contain at least
                                      one [a-z], and may also contain [0-9] and '-'
                                      anywhere except adjacent to another '-' or in
                                      the beginning or the end.
                                    pattern: ^(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[0-9]{1,4})|([a-zA-Z0-9]-?)*[a-zA-Z](-?[a-zA-Z0-9])*$
                                    type: string
                                  protocol:
                                    description: "Protocol is the L4 protocol. If
                                      omitted or empty, any protocol matches. Accepted
                                      values: \"TCP\", \"UDP\", \"\"/\"ANY\" \n Matching
                                      on ICMP is not supported. \n Named port specified
                                      for a container may narrow this down, but may
                                      not contradict this."
                                    enum:
                                    - TCP
                                    - UDP
                                    - ANY
                                    type: string
                                required:
                                - port
                                type: object
                              type: array
                            rules:
                              description: Rules is a list of additional port level
                                rules which must be met in order for the PortRule
                                to allow the traffic. If omitted or empty, no layer
                                7 rules are enforced.
                              properties:
                                dns:
                                  description: DNS-specific rules.
                                  items:
                                    description: PortRuleDNS is a list of allowed
                                      DNS lookups.
                                    properties:
                                      matchName:
                                        description: MatchName matches literal DNS
                                          names. A trailing "." is automatically added
                                          when missing.
                                        pattern: ^([-a-zA-Z0-9_]+[.]?)+$
                                        type: string
                                      matchPattern:
                                        description: "MatchPattern allows using wildcards
                                          to match DNS names. All wildcards are case
                                          insensitive. The wildcards are: - \"*\"
                                          matches 0 or more DNS valid characters,
                                          and may occur anywhere in the pattern. As
                                          a special case a \"*\" as the leftmost character,
                                          without a following \".\" matches all subdomains
                                          as well as the name to the right. A trailing
                                          \".\" is automatically added when missing.
                                          \n Examples: `*.cilium.io` matches subomains
                                          of cilium at that level   www.cilium.io
                                          and blog.cilium.io match, cilium.io and
                                          google.com do not `*cilium.io` matches cilium.io
                                          and all subdomains 1 level below   www.cilium.io,
                                          blog.cilium.io and cilium.io match, google.com
                                          does not sub*.cilium.io matches subdomains
                                          of cilium where the subdomain component
                                          begins with \"sub\"   sub.cilium.io and
                                          subdomain.cilium.io match, www.cilium.io,
                                          \  blog.cilium.io, cilium.io and google.com
                                          do not"
                                        pattern: ^([-a-zA-Z0-9_*]+[.]?)+$
                                        type: string
                                    type: object
                                  type: array
                                http:
                                  description: HTTP specific rules.
                                  items:
                                    description: "PortRuleHTTP is a list of HTTP protocol
                                      constraints. All fields are optional, if all
                                      fields are empty or missing, the rule does not
                                      have any effect. \n All fields of this type
                                      are extended POSIX regex as defined by IEEE
                                      Std 1003.1, (i.e this follows the egrep/unix
                                      syntax, not the perl syntax) matched against
                                      the path of an incoming request. Currently it
                                      can contain characters disallowed from the conventional
                                      \"path\" part of a URL as defined by RFC 3986."
                                    properties:
                                      headerMatches:
                                        description: HeaderMatches is a list of HTTP
                                          headers which must be present and match
                                          against the given values. Mismatch field
                                          can be used to specify what to do when there
                                          is no match.
                                        items:
                                          description: HeaderMatch extends the HeaderValue
                                            for matching requirement of a named header
                                            field against an immediate string, a secret
                                            value, or a regex.  If none of the optional
                                            fields is present, then the header value
                                            is not matched, only presence of the header
                                            is enough.
                                          properties:
                                            mismatch:
                                              description: Mismatch identifies what
                                                to do in case there is no match. The
                                                default is to drop the request. Otherwise
                                                the overall rule is still considered
                                                as matching, but the mismatches are
                                                logged in the access log.
                                              enum:
                                              - LOG
                                              - ADD
                                              - DELETE
                                              - REPLACE
                                              type: string
                                            name:
                                              description: Name identifies the header.
                                              type: string
                                            secret:
                                              description: Secret refers to a secret
                                                that contains the value to be matched
                                                against. The secret must only contain
                                                one entry. If the referred secret
                                                does not exist, and there is no "Value"
                                                specified, the match will fail.
                                              properties:
                                                name:
                                                  description: Name is the name of
                                                    the secret.
                                                  type: string
                                                namespace:
                                                  description: Namespace is the namespace
                                                    in which the secret exists. Context
                                                    of use determines the default
                                                    value if left out (e.g., "default").
                                                  type: string
                                              required:
                                              - name
                                              type: object
                                            value:
                                              description: Value matches the exact
                                                value of the header. Can be specified
                                                either alone or together with "Secret";
                                                will be used as the header value if
                                                the secret can not be found in the
                                                latter case.
                                              type: string
                                          required:
                                          - name
                                          type: object
                                        type: array
                                      headers:
                                        description: Headers is a list of HTTP headers
                                          which must be present in the request. If
                                          omitted or empty, requests are allowed regardless
                                          of headers present.
                                        items:
                                          type: string
                                        type: array
                                      host:
                                        description: "Host is an extended POSIX regex
                                          matched against the host header of a request,
                                          e.g. \"foo.com\" \n If omitted or empty,
                                          the value of the host header is ignored."
                                        format: idn-hostname
                                        type: string
                                      method:
                                        description: "Method is an extended POSIX
                                          regex matched against the method of a request,
                                          e.g. \"GET\", \"POST\", \"PUT\", \"PATCH\",
                                          \"DELETE\", ... \n If omitted or empty,
                                          all methods are allowed."
                                        type: string
                                      path:
                                        description: "Path is an extended POSIX regex
                                          matched against the path of a request. Currently
                                          it can contain characters disallowed from
                                          the conventional \"path\" part of a URL
                                          as defined by RFC 3986. \n If omitted or
                                          empty, all paths are all allowed."
                                        type: string
                                    type: object
                                  type: array
                                kafka:
                                  description: Kafka-specific rules.
                                  items:
                                    description: PortRule is a list of Kafka protocol
                                      constraints. All fields are optional, if all
                                      fields are empty or missing, the rule will match
                                      all Kafka messages.
                                    properties:
                                      apiKey:
                                        description: "APIKey is a case-insensitive
                                          string matched against the key of a request,
                                          e.g. \"produce\", \"fetch\", \"createtopic\",
                                          \"deletetopic\", et al Reference: https://kafka.apache.org/protocol#protocol_api_keys
                                          \n If omitted or empty, and if Role is not
                                          specified, then all keys are allowed."
                                        type: string
                                      apiVersion:
                                        description: "APIVersion is the version matched
                                          against the api version of the Kafka message.
                                          If set, it has to be a string representing
                                          a positive integer. \n If omitted or empty,
                                          all versions are allowed."
                                        type: string
                                      clientID:
                                        description: "ClientID is the client identifier
                                          as provided in the request. \n From Kafka
                                          protocol documentation: This is a user supplied
                                          identifier for the client application. The
                                          user can use any identifier they like and
                                          it will be used when logging errors, monitoring
                                          aggregates, etc. For example, one might
                                          want to monitor not just the requests per
                                          second overall, but the number coming from
                                          each client application (each of which could
                                          reside on multiple servers). This id acts
                                          as a logical grouping across all requests
                                          from a particular client. \n If omitted
                                          or empty, all client identifiers are allowed."
                                        type: string
                                      role:
                                        description: "Role is a case-insensitive string
                                          and describes a group of API keys necessary
                                          to perform certain higher-level Kafka operations
                                          such as \"produce\" or \"consume\". A Role
                                          automatically expands into all APIKeys required
                                          to perform the specified higher-level operation.
                                          \n The following values are supported:  -
                                          \"produce\": Allow producing to the topics
                                          specified in the rule  - \"consume\": Allow
                                          consuming from the topics specified in the
                                          rule \n This field is incompatible with
                                          the APIKey field, i.e APIKey and Role cannot
                                          both be specified in the same rule. \n If
                                          omitted or empty, and if APIKey is not specified,
                                          then all keys are allowed."
                                        enum:
                                        - produce
                                        - consume
                                        type: string
                                      topic:
                                        description: "Topic is the topic name contained
                                          in the message. If a Kafka request contains
                                          multiple topics, then all topics must be
                                          allowed or the message will be rejected.
                                          \n This constraint is ignored if the matched
                                          request message type doesn't contain any
                                          topic. Maximum size of Topic can be 249
                                          characters as per recent Kafka spec and
                                          allowed characters are a-z, A-Z, 0-9, -,
                                          . and _. \n Older Kafka versions had longer
                                          topic lengths of 255, but in Kafka 0.10
                                          version the length was changed from 255
                                          to 249. For compatibility reasons we are
                                          using 255. \n If omitted or empty, all topics
                                          are allowed."
                                        maxLength: 255
                                        type: string
                                    type: object
                                  type: array
                                l7:
                                  description: Key-value pair rules.
                                  items:
                                    additionalProperties:
                                      type: string
                                    description: PortRuleL7 is a list of key-value
                                      pairs interpreted by a L7 protocol as protocol
                                      constraints. All fields are optional, if all
                                      fields are empty or missing, the rule does not
                                      have any effect.
                                    type: object
                                  type: array
                                l7proto:
                                  description: Name of the L7 protocol for which the
                                    Key-value pair rules apply.
                                  type: string
                              type: object
                            terminatingTLS:
                              description: TerminatingTLS is the TLS context for the
                                connection terminated by the L7 proxy.  For egress
                                policy this specifies the server-side TLS parameters
                                to be applied on the connections originated from the
                                local endpoint and terminated by the L7 proxy. For
                                ingress policy this specifies the server-side TLS
                                parameters to be applied on the connections originated
                                from a remote source and terminated by the L7 proxy.
                              properties:
                                certificate:
                                  description: Certificate is the file name or k8s
                                    secret item name for the certificate chain. If
                                    omitted, 'tls.crt' is assumed, if it exists. If
                                    given, the item must exist.
                                  type: string
                                privateKey:
                                  description: PrivateKey is the file name or k8s
                                    secret item name for the private key matching
                                    the certificate chain. If omitted, 'tls.key' is
                                    assumed, if it exists. If given, the item must
                                    exist.
                                  type: string
                                secret:
                                  description: 'Secret is the secret that contains
                                    the certificates and private key for the TLS context.
                                    By default, Cilium will search in this secret
                                    for the following items:  - ''ca.crt''  - Which
                                    represents the trusted CA to verify remote source.  -
                                    ''tls.crt'' - Which represents the public key
                                    certificate.  - ''tls.key'' - Which represents
                                    the private key matching the public key                certificate.'
                                  properties:
                                    name:
                                      description: Name is the name of the secret.
                                      type: string
                                    namespace:
                                      description: Namespace is the namespace in which
                                        the secret exists. Context of use determines
                                        the default value if left out (e.g., "default").
                                      type: string
                                  required:
                                  - name
                                  type: object
                                trustedCA:
                                  description: TrustedCA is the file name or k8s secret
                                    item name for the trusted CA. If omitted, 'ca.crt'
                                    is assumed, if it exists. If given, the item must
                                    exist.
                                  type: string
                              required:
                              - secret
                              type: object
                          type: object
                        type: array
                    type: object
                  type: array
                ingressDeny:
                  description: IngressDeny is a list of IngressDenyRule which are
                    enforced at ingress. Any rule inserted here will by denied regardless
                    of the allowed ingress rules in the 'ingress' field. If omitted
                    or empty, this rule does not apply at ingress.
                  items:
                    description: "IngressDenyRule contains all rule types which can
                      be applied at ingress, i.e. network traffic that originates
                      outside of the endpoint and is entering the endpoint selected
                      by the endpointSelector. \n - All members of this structure
                      are optional. If omitted or empty, the   member will have no
                      effect on the rule. \n - If multiple members are set, all of
                      them need to match in order for   the rule to take effect. The
                      exception to this rule is FromRequires field;   the effects
                      of any Requires field in any rule will apply to all other   rules
                      as well. \n - FromEndpoints, FromCIDR, FromCIDRSet and FromEntities
                      are mutually   exclusive. Only one of these members may be present
                      within an individual   rule."
                    properties:
                      fromCIDR:
                        description: "FromCIDR is a list of IP blocks which the endpoint
                          subject to the rule is allowed to receive connections from.
                          Only connections which do *not* originate from the cluster
                          or from the local host are subject to CIDR rules. In order
                          to allow in-cluster connectivity, use the FromEndpoints
                          field.  This will match on the source IP address of incoming
                          connections. Adding  a prefix into FromCIDR or into FromCIDRSet
                          with no ExcludeCIDRs is  equivalent.  Overlaps are allowed
                          between FromCIDR and FromCIDRSet. \n Example: Any endpoint
                          with the label \"app=my-legacy-pet\" is allowed to receive
                          connections from 10.3.9.1"
                        items:
                          description: 'CIDR specifies a block of IP addresses. Example:
                            192.0.2.1/32'
                          pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                          type: string
                        type: array
                      fromCIDRSet:
                        description: "FromCIDRSet is a list of IP blocks which the
                          endpoint subject to the rule is allowed to receive connections
                          from in addition to FromEndpoints, along with a list of
                          subnets contained within their corresponding IP block from
                          which traffic should not be allowed. This will match on
                          the source IP address of incoming connections. Adding a
                          prefix into FromCIDR or into FromCIDRSet with no ExcludeCIDRs
                          is equivalent. Overlaps are allowed between FromCIDR and
                          FromCIDRSet. \n Example: Any endpoint with the label \"app=my-legacy-pet\"
                          is allowed to receive connections from 10.0.0.0/8 except
                          from IPs in subnet 10.96.0.0/12."
                        items:
                          description: CIDRRule is a rule that specifies a CIDR prefix
                            to/from which outside communication  is allowed, along
                            with an optional list of subnets within that CIDR prefix
                            to/from which outside communication is not allowed.
                          properties:
                            cidr:
                              description: CIDR is a CIDR prefix / IP Block.
                              pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                              type: string
                            except:
                              description: ExceptCIDRs is a list of IP blocks which
                                the endpoint subject to the rule is not allowed to
                                initiate connections to. These CIDR prefixes should
                                be contained within Cidr. These exceptions are only
                                applied to the Cidr in this CIDRRule, and do not apply
                                to any other CIDR prefixes in any other CIDRRules.
                              items:
                                description: 'CIDR specifies a block of IP addresses.
                                  Example: 192.0.2.1/32'
                                pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                                type: string
                              type: array
                          required:
                          - cidr
                          type: object
                        type: array
                      fromEndpoints:
                        description: "FromEndpoints is a list of endpoints identified
                          by an EndpointSelector which are allowed to communicate
                          with the endpoint subject to the rule. \n Example: Any endpoint
                          with the label \"role=backend\" can be consumed by any endpoint
                          carrying the label \"role=frontend\"."
                        items:
                          description: EndpointSelector is a wrapper for k8s LabelSelector.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    enum:
                                    - In
                                    - NotIn
                                    - Exists
                                    - DoesNotExist
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                description: MatchLabelsValue represents the value
                                  from the MatchLabels {key,value} pair.
                                maxLength: 63
                                pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        type: array
                      fromEntities:
                        description: FromEntities is a list of special entities which
                          the endpoint subject to the rule is allowed to receive connections
                          from. Supported entities are `world`, `cluster` and `host`
                        items:
                          description: Entity specifies the class of receiver/sender
                            endpoints that do not have individual identities.  Entities
                            are used to describe "outside of cluster", "host", etc.
                          enum:
                          - all
                          - world
                          - cluster
                          - host
                          - init
                          - unmanaged
                          - remote-node
                          - health
                          - none
                          type: string
                        type: array
                      fromRequires:
                        description: "FromRequires is a list of additional constraints
                          which must be met in order for the selected endpoints to
                          be reachable. These additional constraints do no by itself
                          grant access privileges and must always be accompanied with
                          at least one matching FromEndpoints. \n Example: Any Endpoint
                          with the label \"team=A\" requires consuming endpoint to
                          also carry the label \"team=A\"."
                        items:
                          description: EndpointSelector is a wrapper for k8s LabelSelector.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    enum:
                                    - In
                                    - NotIn
                                    - Exists
                                    - DoesNotExist
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                description: MatchLabelsValue represents the value
                                  from the MatchLabels {key,value} pair.
                                maxLength: 63
                                pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        type: array
                      toPorts:
                        description: "ToPorts is a list of destination ports identified
                          by port number and protocol which the endpoint subject to
                          the rule is not allowed to receive connections on. \n Example:
                          Any endpoint with the label \"app=httpd\" can not accept
                          incoming connections on port 80/tcp."
                        items:
                          description: PortDenyRule is a list of ports/protocol that
                            should be used for deny policies. This structure lacks
                            the L7Rules since it's not supported in deny policies.
                          properties:
                            ports:
                              description: Ports is a list of L4 port/protocol
                              items:
                                description: PortProtocol specifies an L4 port with
                                  an optional transport protocol
                                properties:
                                  port:
                                    description: Port is an L4 port number. For now
                                      the string will be strictly parsed as a single
                                      uint16. In the future, this field may support
                                      ranges in the form "1024-2048 Port can also
                                      be a port name, which must contain at least
                                      one [a-z], and may also contain [0-9] and '-'
                                      anywhere except adjacent to another '-' or in
                                      the beginning or the end.
                                    pattern: ^(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[0-9]{1,4})|([a-zA-Z0-9]-?)*[a-zA-Z](-?[a-zA-Z0-9])*$
                                    type: string
                                  protocol:
                                    description: "Protocol is the L4 protocol. If
                                      omitted or empty, any protocol matches. Accepted
                                      values: \"TCP\", \"UDP\", \"\"/\"ANY\" \n Matching
                                      on ICMP is not supported. \n Named port specified
                                      for a container may narrow this down, but may
                                      not contradict this."
                                    enum:
                                    - TCP
                                    - UDP
                                    - ANY
                                    type: string
                                required:
                                - port
                                type: object
                              type: array
                          type: object
                        type: array
                    type: object
                  type: array
                labels:
                  description: Labels is a list of optional strings which can be used
                    to re-identify the rule or to store metadata. It is possible to
                    lookup or delete strings based on labels. Labels are not required
                    to be unique, multiple rules can have overlapping or identical
                    labels.
                  items:
                    description: Label is the Cilium's representation of a container
                      label.
                    properties:
                      key:
                        type: string
                      source:
                        description: 'Source can be one of the above values (e.g.:
                          LabelSourceContainer).'
                        type: string
                      value:
                        type: string
                    required:
                    - key
                    type: object
                  type: array
                nodeSelector:
                  description: NodeSelector selects all nodes which should be subject
                    to this rule. EndpointSelector and NodeSelector cannot be both
                    empty and are mutually exclusive. Can only be used in CiliumClusterwideNetworkPolicies.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            enum:
                            - In
                            - NotIn
                            - Exists
                            - DoesNotExist
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        description: MatchLabelsValue represents the value from the
                          MatchLabels {key,value} pair.
                        maxLength: 63
                        pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
              type: object
            specs:
              description: Specs is a list of desired Cilium specific rule specification.
              items:
                description: "Rule is a policy rule which must be applied to all endpoints
                  which match the labels contained in the endpointSelector \n Each
                  rule is split into an ingress section which contains all rules applicable
                  at ingress, and an egress section applicable at egress. For rule
                  types such as `L4Rule` and `CIDR` which can be applied at both ingress
                  and egress, both ingress and egress side have to either specifically
                  allow the connection or one side has to be omitted. \n Either ingress,
                  egress, or both can be provided. If both ingress and egress are
                  omitted, the rule has no effect."
                oneOf:
                - properties:
                    endpointSelector: {}
                  required:
                  - endpointSelector
                - properties:
                    nodeSelector: {}
                  required:
                  - nodeSelector
                properties:
                  description:
                    description: Description is a free form string, it can be used
                      by the creator of the rule to store human readable explanation
                      of the purpose of this rule. Rules cannot be identified by comment.
                    type: string
                  egress:
                    description: Egress is a list of EgressRule which are enforced
                      at egress. If omitted or empty, this rule does not apply at
                      egress.
                    items:
                      description: "EgressRule contains all rule types which can be
                        applied at egress, i.e. network traffic that originates inside
                        the endpoint and exits the endpoint selected by the endpointSelector.
                        \n - All members of this structure are optional. If omitted
                        or empty, the   member will have no effect on the rule. \n
                        - If multiple members of the structure are specified, then
                        all members   must match in order for the rule to take effect.
                        The exception to this   rule is the ToRequires member; the
                        effects of any Requires field in any   rule will apply to
                        all other rules as well. \n - ToEndpoints, ToCIDR, ToCIDRSet,
                        ToEntities, ToServices and ToGroups are   mutually exclusive.
                        Only one of these members may be present within an   individual
                        rule."
                      properties:
                        toCIDR:
                          description: "ToCIDR is a list of IP blocks which the endpoint
                            subject to the rule is allowed to initiate connections.
                            Only connections destined for outside of the cluster and
                            not targeting the host will be subject to CIDR rules.
                            \ This will match on the destination IP address of outgoing
                            connections. Adding a prefix into ToCIDR or into ToCIDRSet
                            with no ExcludeCIDRs is equivalent. Overlaps are allowed
                            between ToCIDR and ToCIDRSet. \n Example: Any endpoint
                            with the label \"app=database-proxy\" is allowed to initiate
                            connections to 10.2.3.0/24"
                          items:
                            description: 'CIDR specifies a block of IP addresses.
                              Example: 192.0.2.1/32'
                            pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                            type: string
                          type: array
                        toCIDRSet:
                          description: "ToCIDRSet is a list of IP blocks which the
                            endpoint subject to the rule is allowed to initiate connections
                            to in addition to connections which are allowed via ToEndpoints,
                            along with a list of subnets contained within their corresponding
                            IP block to which traffic should not be allowed. This
                            will match on the destination IP address of outgoing connections.
                            Adding a prefix into ToCIDR or into ToCIDRSet with no
                            ExcludeCIDRs is equivalent. Overlaps are allowed between
                            ToCIDR and ToCIDRSet. \n Example: Any endpoint with the
                            label \"app=database-proxy\" is allowed to initiate connections
                            to 10.2.3.0/24 except from IPs in subnet 10.2.3.0/28."
                          items:
                            description: CIDRRule is a rule that specifies a CIDR
                              prefix to/from which outside communication  is allowed,
                              along with an optional list of subnets within that CIDR
                              prefix to/from which outside communication is not allowed.
                            properties:
                              cidr:
                                description: CIDR is a CIDR prefix / IP Block.
                                pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                                type: string
                              except:
                                description: ExceptCIDRs is a list of IP blocks which
                                  the endpoint subject to the rule is not allowed
                                  to initiate connections to. These CIDR prefixes
                                  should be contained within Cidr. These exceptions
                                  are only applied to the Cidr in this CIDRRule, and
                                  do not apply to any other CIDR prefixes in any other
                                  CIDRRules.
                                items:
                                  description: 'CIDR specifies a block of IP addresses.
                                    Example: 192.0.2.1/32'
                                  pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                                  type: string
                                type: array
                            required:
                            - cidr
                            type: object
                          type: array
                        toEndpoints:
                          description: "ToEndpoints is a list of endpoints identified
                            by an EndpointSelector to which the endpoints subject
                            to the rule are allowed to communicate. \n Example: Any
                            endpoint with the label \"role=frontend\" can communicate
                            with any endpoint carrying the label \"role=backend\"."
                          items:
                            description: EndpointSelector is a wrapper for k8s LabelSelector.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      enum:
                                      - In
                                      - NotIn
                                      - Exists
                                      - DoesNotExist
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  description: MatchLabelsValue represents the value
                                    from the MatchLabels {key,value} pair.
                                  maxLength: 63
                                  pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          type: array
                        toEntities:
                          description: ToEntities is a list of special entities to
                            which the endpoint subject to the rule is allowed to initiate
                            connections. Supported entities are `world`, `cluster`
                            and `host`
                          items:
                            description: Entity specifies the class of receiver/sender
                              endpoints that do not have individual identities.  Entities
                              are used to describe "outside of cluster", "host", etc.
                            enum:
                            - all
                            - world
                            - cluster
                            - host
                            - init
                            - unmanaged
                            - remote-node
                            - health
                            - none
                            type: string
                          type: array
                        toFQDNs:
                          description: "ToFQDN allows whitelisting DNS names in place
                            of IPs. The IPs that result from DNS resolution of `ToFQDN.MatchName`s
                            are added to the same EgressRule object as ToCIDRSet entries,
                            and behave accordingly. Any L4 and L7 rules within this
                            EgressRule will also apply to these IPs. The DNS -> IP
                            mapping is re-resolved periodically from within the cilium-agent,
                            and the IPs in the DNS response are effected in the policy
                            for selected pods as-is (i.e. the list of IPs is not modified
                            in any way). Note: An explicit rule to allow for DNS traffic
                            is needed for the pods, as ToFQDN counts as an egress
                            rule and will enforce egress policy when PolicyEnforcment=default.
                            Note: If the resolved IPs are IPs within the kubernetes
                            cluster, the ToFQDN rule will not apply to that IP. Note:
                            ToFQDN cannot occur in the same policy as other To* rules.
                            \n The current implementation has a number of limitations:
                            - The DNS resolution originates from cilium-agent, and
                            not from the pods. Differences between the responses seen
                            by cilium agent and a particular pod will whitelist the
                            incorrect IP. - DNS TTLs are ignored, and cilium-agent
                            will repoll on a short interval (5 seconds). Each change
                            to the DNS data will trigger a policy regeneration. This
                            may result in delayed updates to the policy for an endpoint
                            when the data changes often or the system is under load."
                          items:
                            properties:
                              matchName:
                                description: MatchName matches literal DNS names.
                                  A trailing "." is automatically added when missing.
                                pattern: ^([-a-zA-Z0-9_]+[.]?)+$
                                type: string
                              matchPattern:
                                description: "MatchPattern allows using wildcards
                                  to match DNS names. All wildcards are case insensitive.
                                  The wildcards are: - \"*\" matches 0 or more DNS
                                  valid characters, and may occur anywhere in the
                                  pattern. As a special case a \"*\" as the leftmost
                                  character, without a following \".\" matches all
                                  subdomains as well as the name to the right. A trailing
                                  \".\" is automatically added when missing. \n Examples:
                                  `*.cilium.io` matches subomains of cilium at that
                                  level   www.cilium.io and blog.cilium.io match,
                                  cilium.io and google.com do not `*cilium.io` matches
                                  cilium.io and all subdomains 1 level below   www.cilium.io,
                                  blog.cilium.io and cilium.io match, google.com does
                                  not sub*.cilium.io matches subdomains of cilium
                                  where the subdomain component begins with \"sub\"
                                  \  sub.cilium.io and subdomain.cilium.io match,
                                  www.cilium.io,   blog.cilium.io, cilium.io and google.com
                                  do not"
                                pattern: ^([-a-zA-Z0-9_*]+[.]?)+$
                                type: string
                            type: object
                          type: array
                        toGroups:
                          description: "ToGroups is a directive that allows the integration
                            with multiple outside providers. Currently, only AWS is
                            supported, and the rule can select by multiple sub directives:
                            \n Example: toGroups: - aws:     securityGroupsIds:     -
                            'sg-XXXXXXXXXXXXX'"
                          items:
                            description: ToGroups structure to store all kinds of
                              new integrations that needs a new derivative policy.
                            properties:
                              aws:
                                description: AWSGroup is an structure that can be
                                  used to whitelisting information from AWS integration
                                properties:
                                  labels:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  region:
                                    type: string
                                  securityGroupsIds:
                                    items:
                                      type: string
                                    type: array
                                  securityGroupsNames:
                                    items:
                                      type: string
                                    type: array
                                type: object
                            type: object
                          type: array
                        toPorts:
                          description: "ToPorts is a list of destination ports identified
                            by port number and protocol which the endpoint subject
                            to the rule is allowed to connect to. \n Example: Any
                            endpoint with the label \"role=frontend\" is allowed to
                            initiate connections to destination port 8080/tcp"
                          items:
                            description: PortRule is a list of ports/protocol combinations
                              with optional Layer 7 rules which must be met.
                            properties:
                              originatingTLS:
                                description: OriginatingTLS is the TLS context for
                                  the connections originated by the L7 proxy.  For
                                  egress policy this specifies the client-side TLS
                                  parameters for the upstream connection originating
                                  from the L7 proxy to the remote destination. For
                                  ingress policy this specifies the client-side TLS
                                  parameters for the connection from the L7 proxy
                                  to the local endpoint.
                                properties:
                                  certificate:
                                    description: Certificate is the file name or k8s
                                      secret item name for the certificate chain.
                                      If omitted, 'tls.crt' is assumed, if it exists.
                                      If given, the item must exist.
                                    type: string
                                  privateKey:
                                    description: PrivateKey is the file name or k8s
                                      secret item name for the private key matching
                                      the certificate chain. If omitted, 'tls.key'
                                      is assumed, if it exists. If given, the item
                                      must exist.
                                    type: string
                                  secret:
                                    description: 'Secret is the secret that contains
                                      the certificates and private key for the TLS
                                      context. By default, Cilium will search in this
                                      secret for the following items:  - ''ca.crt''  -
                                      Which represents the trusted CA to verify remote
                                      source.  - ''tls.crt'' - Which represents the
                                      public key certificate.  - ''tls.key'' - Which
                                      represents the private key matching the public
                                      key                certificate.'
                                    properties:
                                      name:
                                        description: Name is the name of the secret.
                                        type: string
                                      namespace:
                                        description: Namespace is the namespace in
                                          which the secret exists. Context of use
                                          determines the default value if left out
                                          (e.g., "default").
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  trustedCA:
                                    description: TrustedCA is the file name or k8s
                                      secret item name for the trusted CA. If omitted,
                                      'ca.crt' is assumed, if it exists. If given,
                                      the item must exist.
                                    type: string
                                required:
                                - secret
                                type: object
                              ports:
                                description: Ports is a list of L4 port/protocol
                                items:
                                  description: PortProtocol specifies an L4 port with
                                    an optional transport protocol
                                  properties:
                                    port:
                                      description: Port is an L4 port number. For
                                        now the string will be strictly parsed as
                                        a single uint16. In the future, this field
                                        may support ranges in the form "1024-2048
                                        Port can also be a port name, which must contain
                                        at least one [a-z], and may also contain [0-9]
                                        and '-' anywhere except adjacent to another
                                        '-' or in the beginning or the end.
                                      pattern: ^(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[0-9]{1,4})|([a-zA-Z0-9]-?)*[a-zA-Z](-?[a-zA-Z0-9])*$
                                      type: string
                                    protocol:
                                      description: "Protocol is the L4 protocol. If
                                        omitted or empty, any protocol matches. Accepted
                                        values: \"TCP\", \"UDP\", \"\"/\"ANY\" \n
                                        Matching on ICMP is not supported. \n Named
                                        port specified for a container may narrow
                                        this down, but may not contradict this."
                                      enum:
                                      - TCP
                                      - UDP
                                      - ANY
                                      type: string
                                  required:
                                  - port
                                  type: object
                                type: array
                              rules:
                                description: Rules is a list of additional port level
                                  rules which must be met in order for the PortRule
                                  to allow the traffic. If omitted or empty, no layer
                                  7 rules are enforced.
                                properties:
                                  dns:
                                    description: DNS-specific rules.
                                    items:
                                      description: PortRuleDNS is a list of allowed
                                        DNS lookups.
                                      properties:
                                        matchName:
                                          description: MatchName matches literal DNS
                                            names. A trailing "." is automatically
                                            added when missing.
                                          pattern: ^([-a-zA-Z0-9_]+[.]?)+$
                                          type: string
                                        matchPattern:
                                          description: "MatchPattern allows using
                                            wildcards to match DNS names. All wildcards
                                            are case insensitive. The wildcards are:
                                            - \"*\" matches 0 or more DNS valid characters,
                                            and may occur anywhere in the pattern.
                                            As a special case a \"*\" as the leftmost
                                            character, without a following \".\" matches
                                            all subdomains as well as the name to
                                            the right. A trailing \".\" is automatically
                                            added when missing. \n Examples: `*.cilium.io`
                                            matches subomains of cilium at that level
                                            \  www.cilium.io and blog.cilium.io match,
                                            cilium.io and google.com do not `*cilium.io`
                                            matches cilium.io and all subdomains 1
                                            level below   www.cilium.io, blog.cilium.io
                                            and cilium.io match, google.com does not
                                            sub*.cilium.io matches subdomains of cilium
                                            where the subdomain component begins with
                                            \"sub\"   sub.cilium.io and subdomain.cilium.io
                                            match, www.cilium.io,   blog.cilium.io,
                                            cilium.io and google.com do not"
                                          pattern: ^([-a-zA-Z0-9_*]+[.]?)+$
                                          type: string
                                      type: object
                                    type: array
                                  http:
                                    description: HTTP specific rules.
                                    items:
                                      description: "PortRuleHTTP is a list of HTTP
                                        protocol constraints. All fields are optional,
                                        if all fields are empty or missing, the rule
                                        does not have any effect. \n All fields of
                                        this type are extended POSIX regex as defined
                                        by IEEE Std 1003.1, (i.e this follows the
                                        egrep/unix syntax, not the perl syntax) matched
                                        against the path of an incoming request. Currently
                                        it can contain characters disallowed from
                                        the conventional \"path\" part of a URL as
                                        defined by RFC 3986."
                                      properties:
                                        headerMatches:
                                          description: HeaderMatches is a list of
                                            HTTP headers which must be present and
                                            match against the given values. Mismatch
                                            field can be used to specify what to do
                                            when there is no match.
                                          items:
                                            description: HeaderMatch extends the HeaderValue
                                              for matching requirement of a named
                                              header field against an immediate string,
                                              a secret value, or a regex.  If none
                                              of the optional fields is present, then
                                              the header value is not matched, only
                                              presence of the header is enough.
                                            properties:
                                              mismatch:
                                                description: Mismatch identifies what
                                                  to do in case there is no match.
                                                  The default is to drop the request.
                                                  Otherwise the overall rule is still
                                                  considered as matching, but the
                                                  mismatches are logged in the access
                                                  log.
                                                enum:
                                                - LOG
                                                - ADD
                                                - DELETE
                                                - REPLACE
                                                type: string
                                              name:
                                                description: Name identifies the header.
                                                type: string
                                              secret:
                                                description: Secret refers to a secret
                                                  that contains the value to be matched
                                                  against. The secret must only contain
                                                  one entry. If the referred secret
                                                  does not exist, and there is no
                                                  "Value" specified, the match will
                                                  fail.
                                                properties:
                                                  name:
                                                    description: Name is the name
                                                      of the secret.
                                                    type: string
                                                  namespace:
                                                    description: Namespace is the
                                                      namespace in which the secret
                                                      exists. Context of use determines
                                                      the default value if left out
                                                      (e.g., "default").
                                                    type: string
                                                required:
                                                - name
                                                type: object
                                              value:
                                                description: Value matches the exact
                                                  value of the header. Can be specified
                                                  either alone or together with "Secret";
                                                  will be used as the header value
                                                  if the secret can not be found in
                                                  the latter case.
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                        headers:
                                          description: Headers is a list of HTTP headers
                                            which must be present in the request.
                                            If omitted or empty, requests are allowed
                                            regardless of headers present.
                                          items:
                                            type: string
                                          type: array
                                        host:
                                          description: "Host is an extended POSIX
                                            regex matched against the host header
                                            of a request, e.g. \"foo.com\" \n If omitted
                                            or empty, the value of the host header
                                            is ignored."
                                          format: idn-hostname
                                          type: string
                                        method:
                                          description: "Method is an extended POSIX
                                            regex matched against the method of a
                                            request, e.g. \"GET\", \"POST\", \"PUT\",
                                            \"PATCH\", \"DELETE\", ... \n If omitted
                                            or empty, all methods are allowed."
                                          type: string
                                        path:
                                          description: "Path is an extended POSIX
                                            regex matched against the path of a request.
                                            Currently it can contain characters disallowed
                                            from the conventional \"path\" part of
                                            a URL as defined by RFC 3986. \n If omitted
                                            or empty, all paths are all allowed."
                                          type: string
                                      type: object
                                    type: array
                                  kafka:
                                    description: Kafka-specific rules.
                                    items:
                                      description: PortRule is a list of Kafka protocol
                                        constraints. All fields are optional, if all
                                        fields are empty or missing, the rule will
                                        match all Kafka messages.
                                      properties:
                                        apiKey:
                                          description: "APIKey is a case-insensitive
                                            string matched against the key of a request,
                                            e.g. \"produce\", \"fetch\", \"createtopic\",
                                            \"deletetopic\", et al Reference: https://kafka.apache.org/protocol#protocol_api_keys
                                            \n If omitted or empty, and if Role is
                                            not specified, then all keys are allowed."
                                          type: string
                                        apiVersion:
                                          description: "APIVersion is the version
                                            matched against the api version of the
                                            Kafka message. If set, it has to be a
                                            string representing a positive integer.
                                            \n If omitted or empty, all versions are
                                            allowed."
                                          type: string
                                        clientID:
                                          description: "ClientID is the client identifier
                                            as provided in the request. \n From Kafka
                                            protocol documentation: This is a user
                                            supplied identifier for the client application.
                                            The user can use any identifier they like
                                            and it will be used when logging errors,
                                            monitoring aggregates, etc. For example,
                                            one might want to monitor not just the
                                            requests per second overall, but the number
                                            coming from each client application (each
                                            of which could reside on multiple servers).
                                            This id acts as a logical grouping across
                                            all requests from a particular client.
                                            \n If omitted or empty, all client identifiers
                                            are allowed."
                                          type: string
                                        role:
                                          description: "Role is a case-insensitive
                                            string and describes a group of API keys
                                            necessary to perform certain higher-level
                                            Kafka operations such as \"produce\" or
                                            \"consume\". A Role automatically expands
                                            into all APIKeys required to perform the
                                            specified higher-level operation. \n The
                                            following values are supported:  - \"produce\":
                                            Allow producing to the topics specified
                                            in the rule  - \"consume\": Allow consuming
                                            from the topics specified in the rule
                                            \n This field is incompatible with the
                                            APIKey field, i.e APIKey and Role cannot
                                            both be specified in the same rule. \n
                                            If omitted or empty, and if APIKey is
                                            not specified, then all keys are allowed."
                                          enum:
                                          - produce
                                          - consume
                                          type: string
                                        topic:
                                          description: "Topic is the topic name contained
                                            in the message. If a Kafka request contains
                                            multiple topics, then all topics must
                                            be allowed or the message will be rejected.
                                            \n This constraint is ignored if the matched
                                            request message type doesn't contain any
                                            topic. Maximum size of Topic can be 249
                                            characters as per recent Kafka spec and
                                            allowed characters are a-z, A-Z, 0-9,
                                            -, . and _. \n Older Kafka versions had
                                            longer topic lengths of 255, but in Kafka
                                            0.10 version the length was changed from
                                            255 to 249. For compatibility reasons
                                            we are using 255. \n If omitted or empty,
                                            all topics are allowed."
                                          maxLength: 255
                                          type: string
                                      type: object
                                    type: array
                                  l7:
                                    description: Key-value pair rules.
                                    items:
                                      additionalProperties:
                                        type: string
                                      description: PortRuleL7 is a list of key-value
                                        pairs interpreted by a L7 protocol as protocol
                                        constraints. All fields are optional, if all
                                        fields are empty or missing, the rule does
                                        not have any effect.
                                      type: object
                                    type: array
                                  l7proto:
                                    description: Name of the L7 protocol for which
                                      the Key-value pair rules apply.
                                    type: string
                                type: object
                              terminatingTLS:
                                description: TerminatingTLS is the TLS context for
                                  the connection terminated by the L7 proxy.  For
                                  egress policy this specifies the server-side TLS
                                  parameters to be applied on the connections originated
                                  from the local endpoint and terminated by the L7
                                  proxy. For ingress policy this specifies the server-side
                                  TLS parameters to be applied on the connections
                                  originated from a remote source and terminated by
                                  the L7 proxy.
                                properties:
                                  certificate:
                                    description: Certificate is the file name or k8s
                                      secret item name for the certificate chain.
                                      If omitted, 'tls.crt' is assumed, if it exists.
                                      If given, the item must exist.
                                    type: string
                                  privateKey:
                                    description: PrivateKey is the file name or k8s
                                      secret item name for the private key matching
                                      the certificate chain. If omitted, 'tls.key'
                                      is assumed, if it exists. If given, the item
                                      must exist.
                                    type: string
                                  secret:
                                    description: 'Secret is the secret that contains
                                      the certificates and private key for the TLS
                                      context. By default, Cilium will search in this
                                      secret for the following items:  - ''ca.crt''  -
                                      Which represents the trusted CA to verify remote
                                      source.  - ''tls.crt'' - Which represents the
                                      public key certificate.  - ''tls.key'' - Which
                                      represents the private key matching the public
                                      key                certificate.'
                                    properties:
                                      name:
                                        description: Name is the name of the secret.
                                        type: string
                                      namespace:
                                        description: Namespace is the namespace in
                                          which the secret exists. Context of use
                                          determines the default value if left out
                                          (e.g., "default").
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  trustedCA:
                                    description: TrustedCA is the file name or k8s
                                      secret item name for the trusted CA. If omitted,
                                      'ca.crt' is assumed, if it exists. If given,
                                      the item must exist.
                                    type: string
                                required:
                                - secret
                                type: object
                            type: object
                          type: array
                        toRequires:
                          description: "ToRequires is a list of additional constraints
                            which must be met in order for the selected endpoints
                            to be able to connect to other endpoints. These additional
                            constraints do no by itself grant access privileges and
                            must always be accompanied with at least one matching
                            ToEndpoints. \n Example: Any Endpoint with the label \"team=A\"
                            requires any endpoint to which it communicates to also
                            carry the label \"team=A\"."
                          items:
                            description: EndpointSelector is a wrapper for k8s LabelSelector.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      enum:
                                      - In
                                      - NotIn
                                      - Exists
                                      - DoesNotExist
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  description: MatchLabelsValue represents the value
                                    from the MatchLabels {key,value} pair.
                                  maxLength: 63
                                  pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          type: array
                        toServices:
                          description: "ToServices is a list of services to which
                            the endpoint subject to the rule is allowed to initiate
                            connections. Currently Cilium only supports toServices
                            for K8s services without selectors. \n Example: Any endpoint
                            with the label \"app=backend-app\" is allowed to initiate
                            connections to all cidrs backing the \"external-service\"
                            service"
                          items:
                            description: Service wraps around selectors for services
                            properties:
                              k8sService:
                                description: K8sService selects service by name and
                                  namespace pair
                                properties:
                                  namespace:
                                    type: string
                                  serviceName:
                                    type: string
                                type: object
                              k8sServiceSelector:
                                description: K8sServiceSelector selects services by
                                  k8s labels and namespace
                                properties:
                                  namespace:
                                    type: string
                                  selector:
                                    description: ServiceSelector is a label selector
                                      for k8s services
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              enum:
                                              - In
                                              - NotIn
                                              - Exists
                                              - DoesNotExist
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          description: MatchLabelsValue represents
                                            the value from the MatchLabels {key,value}
                                            pair.
                                          maxLength: 63
                                          pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                required:
                                - selector
                                type: object
                            type: object
                          type: array
                      type: object
                    type: array
                  egressDeny:
                    description: EgressDeny is a list of EgressDenyRule which are
                      enforced at egress. Any rule inserted here will by denied regardless
                      of the allowed egress rules in the 'egress' field. If omitted
                      or empty, this rule does not apply at egress.
                    items:
                      description: "EgressDenyRule contains all rule types which can
                        be applied at egress, i.e. network traffic that originates
                        inside the endpoint and exits the endpoint selected by the
                        endpointSelector. \n - All members of this structure are optional.
                        If omitted or empty, the   member will have no effect on the
                        rule. \n - If multiple members of the structure are specified,
                        then all members   must match in order for the rule to take
                        effect. The exception to this   rule is the ToRequires member;
                        the effects of any Requires field in any   rule will apply
                        to all other rules as well. \n - ToEndpoints, ToCIDR, ToCIDRSet,
                        ToEntities, ToServices and ToGroups are   mutually exclusive.
                        Only one of these members may be present within an   individual
                        rule."
                      properties:
                        toCIDR:
                          description: "ToCIDR is a list of IP blocks which the endpoint
                            subject to the rule is allowed to initiate connections.
                            Only connections destined for outside of the cluster and
                            not targeting the host will be subject to CIDR rules.
                            \ This will match on the destination IP address of outgoing
                            connections. Adding a prefix into ToCIDR or into ToCIDRSet
                            with no ExcludeCIDRs is equivalent. Overlaps are allowed
                            between ToCIDR and ToCIDRSet. \n Example: Any endpoint
                            with the label \"app=database-proxy\" is allowed to initiate
                            connections to 10.2.3.0/24"
                          items:
                            description: 'CIDR specifies a block of IP addresses.
                              Example: 192.0.2.1/32'
                            pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                            type: string
                          type: array
                        toCIDRSet:
                          description: "ToCIDRSet is a list of IP blocks which the
                            endpoint subject to the rule is allowed to initiate connections
                            to in addition to connections which are allowed via ToEndpoints,
                            along with a list of subnets contained within their corresponding
                            IP block to which traffic should not be allowed. This
                            will match on the destination IP address of outgoing connections.
                            Adding a prefix into ToCIDR or into ToCIDRSet with no
                            ExcludeCIDRs is equivalent. Overlaps are allowed between
                            ToCIDR and ToCIDRSet. \n Example: Any endpoint with the
                            label \"app=database-proxy\" is allowed to initiate connections
                            to 10.2.3.0/24 except from IPs in subnet 10.2.3.0/28."
                          items:
                            description: CIDRRule is a rule that specifies a CIDR
                              prefix to/from which outside communication  is allowed,
                              along with an optional list of subnets within that CIDR
                              prefix to/from which outside communication is not allowed.
                            properties:
                              cidr:
                                description: CIDR is a CIDR prefix / IP Block.
                                pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                                type: string
                              except:
                                description: ExceptCIDRs is a list of IP blocks which
                                  the endpoint subject to the rule is not allowed
                                  to initiate connections to. These CIDR prefixes
                                  should be contained within Cidr. These exceptions
                                  are only applied to the Cidr in this CIDRRule, and
                                  do not apply to any other CIDR prefixes in any other
                                  CIDRRules.
                                items:
                                  description: 'CIDR specifies a block of IP addresses.
                                    Example: 192.0.2.1/32'
                                  pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                                  type: string
                                type: array
                            required:
                            - cidr
                            type: object
                          type: array
                        toEndpoints:
                          description: "ToEndpoints is a list of endpoints identified
                            by an EndpointSelector to which the endpoints subject
                            to the rule are allowed to communicate. \n Example: Any
                            endpoint with the label \"role=frontend\" can communicate
                            with any endpoint carrying the label \"role=backend\"."
                          items:
                            description: EndpointSelector is a wrapper for k8s LabelSelector.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      enum:
                                      - In
                                      - NotIn
                                      - Exists
                                      - DoesNotExist
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  description: MatchLabelsValue represents the value
                                    from the MatchLabels {key,value} pair.
                                  maxLength: 63
                                  pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          type: array
                        toEntities:
                          description: ToEntities is a list of special entities to
                            which the endpoint subject to the rule is allowed to initiate
                            connections. Supported entities are `world`, `cluster`
                            and `host`
                          items:
                            description: Entity specifies the class of receiver/sender
                              endpoints that do not have individual identities.  Entities
                              are used to describe "outside of cluster", "host", etc.
                            enum:
                            - all
                            - world
                            - cluster
                            - host
                            - init
                            - unmanaged
                            - remote-node
                            - health
                            - none
                            type: string
                          type: array
                        toGroups:
                          description: "ToGroups is a directive that allows the integration
                            with multiple outside providers. Currently, only AWS is
                            supported, and the rule can select by multiple sub directives:
                            \n Example: toGroups: - aws:     securityGroupsIds:     -
                            'sg-XXXXXXXXXXXXX'"
                          items:
                            description: ToGroups structure to store all kinds of
                              new integrations that needs a new derivative policy.
                            properties:
                              aws:
                                description: AWSGroup is an structure that can be
                                  used to whitelisting information from AWS integration
                                properties:
                                  labels:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  region:
                                    type: string
                                  securityGroupsIds:
                                    items:
                                      type: string
                                    type: array
                                  securityGroupsNames:
                                    items:
                                      type: string
                                    type: array
                                type: object
                            type: object
                          type: array
                        toPorts:
                          description: "ToPorts is a list of destination ports identified
                            by port number and protocol which the endpoint subject
                            to the rule is not allowed to connect to. \n Example:
                            Any endpoint with the label \"role=frontend\" is not allowed
                            to initiate connections to destination port 8080/tcp"
                          items:
                            description: PortDenyRule is a list of ports/protocol
                              that should be used for deny policies. This structure
                              lacks the L7Rules since it's not supported in deny policies.
                            properties:
                              ports:
                                description: Ports is a list of L4 port/protocol
                                items:
                                  description: PortProtocol specifies an L4 port with
                                    an optional transport protocol
                                  properties:
                                    port:
                                      description: Port is an L4 port number. For
                                        now the string will be strictly parsed as
                                        a single uint16. In the future, this field
                                        may support ranges in the form "1024-2048
                                        Port can also be a port name, which must contain
                                        at least one [a-z], and may also contain [0-9]
                                        and '-' anywhere except adjacent to another
                                        '-' or in the beginning or the end.
                                      pattern: ^(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[0-9]{1,4})|([a-zA-Z0-9]-?)*[a-zA-Z](-?[a-zA-Z0-9])*$
                                      type: string
                                    protocol:
                                      description: "Protocol is the L4 protocol. If
                                        omitted or empty, any protocol matches. Accepted
                                        values: \"TCP\", \"UDP\", \"\"/\"ANY\" \n
                                        Matching on ICMP is not supported. \n Named
                                        port specified for a container may narrow
                                        this down, but may not contradict this."
                                      enum:
                                      - TCP
                                      - UDP
                                      - ANY
                                      type: string
                                  required:
                                  - port
                                  type: object
                                type: array
                            type: object
                          type: array
                        toRequires:
                          description: "ToRequires is a list of additional constraints
                            which must be met in order for the selected endpoints
                            to be able to connect to other endpoints. These additional
                            constraints do no by itself grant access privileges and
                            must always be accompanied with at least one matching
                            ToEndpoints. \n Example: Any Endpoint with the label \"team=A\"
                            requires any endpoint to which it communicates to also
                            carry the label \"team=A\"."
                          items:
                            description: EndpointSelector is a wrapper for k8s LabelSelector.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      enum:
                                      - In
                                      - NotIn
                                      - Exists
                                      - DoesNotExist
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  description: MatchLabelsValue represents the value
                                    from the MatchLabels {key,value} pair.
                                  maxLength: 63
                                  pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          type: array
                        toServices:
                          description: "ToServices is a list of services to which
                            the endpoint subject to the rule is allowed to initiate
                            connections. Currently Cilium only supports toServices
                            for K8s services without selectors. \n Example: Any endpoint
                            with the label \"app=backend-app\" is allowed to initiate
                            connections to all cidrs backing the \"external-service\"
                            service"
                          items:
                            description: Service wraps around selectors for services
                            properties:
                              k8sService:
                                description: K8sService selects service by name and
                                  namespace pair
                                properties:
                                  namespace:
                                    type: string
                                  serviceName:
                                    type: string
                                type: object
                              k8sServiceSelector:
                                description: K8sServiceSelector selects services by
                                  k8s labels and namespace
                                properties:
                                  namespace:
                                    type: string
                                  selector:
                                    description: ServiceSelector is a label selector
                                      for k8s services
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              enum:
                                              - In
                                              - NotIn
                                              - Exists
                                              - DoesNotExist
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          description: MatchLabelsValue represents
                                            the value from the MatchLabels {key,value}
                                            pair.
                                          maxLength: 63
                                          pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                required:
                                - selector
                                type: object
                            type: object
                          type: array
                      type: object
                    type: array
                  endpointSelector:
                    description: EndpointSelector selects all endpoints which should
                      be subject to this rule. EndpointSelector and NodeSelector cannot
                      be both empty and are mutually exclusive.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              enum:
                              - In
                              - NotIn
                              - Exists
                              - DoesNotExist
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          description: MatchLabelsValue represents the value from
                            the MatchLabels {key,value} pair.
                          maxLength: 63
                          pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                  ingress:
                    description: Ingress is a list of IngressRule which are enforced
                      at ingress. If omitted or empty, this rule does not apply at
                      ingress.
                    items:
                      description: "IngressRule contains all rule types which can
                        be applied at ingress, i.e. network traffic that originates
                        outside of the endpoint and is entering the endpoint selected
                        by the endpointSelector. \n - All members of this structure
                        are optional. If omitted or empty, the   member will have
                        no effect on the rule. \n - If multiple members are set, all
                        of them need to match in order for   the rule to take effect.
                        The exception to this rule is FromRequires field;   the effects
                        of any Requires field in any rule will apply to all other
                        \  rules as well. \n - FromEndpoints, FromCIDR, FromCIDRSet
                        and FromEntities are mutually   exclusive. Only one of these
                        members may be present within an individual   rule."
                      properties:
                        fromCIDR:
                          description: "FromCIDR is a list of IP blocks which the
                            endpoint subject to the rule is allowed to receive connections
                            from. Only connections which do *not* originate from the
                            cluster or from the local host are subject to CIDR rules.
                            In order to allow in-cluster connectivity, use the FromEndpoints
                            field.  This will match on the source IP address of incoming
                            connections. Adding  a prefix into FromCIDR or into FromCIDRSet
                            with no ExcludeCIDRs is  equivalent.  Overlaps are allowed
                            between FromCIDR and FromCIDRSet. \n Example: Any endpoint
                            with the label \"app=my-legacy-pet\" is allowed to receive
                            connections from 10.3.9.1"
                          items:
                            description: 'CIDR specifies a block of IP addresses.
                              Example: 192.0.2.1/32'
                            pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                            type: string
                          type: array
                        fromCIDRSet:
                          description: "FromCIDRSet is a list of IP blocks which the
                            endpoint subject to the rule is allowed to receive connections
                            from in addition to FromEndpoints, along with a list of
                            subnets contained within their corresponding IP block
                            from which traffic should not be allowed. This will match
                            on the source IP address of incoming connections. Adding
                            a prefix into FromCIDR or into FromCIDRSet with no ExcludeCIDRs
                            is equivalent. Overlaps are allowed between FromCIDR and
                            FromCIDRSet. \n Example: Any endpoint with the label \"app=my-legacy-pet\"
                            is allowed to receive connections from 10.0.0.0/8 except
                            from IPs in subnet 10.96.0.0/12."
                          items:
                            description: CIDRRule is a rule that specifies a CIDR
                              prefix to/from which outside communication  is allowed,
                              along with an optional list of subnets within that CIDR
                              prefix to/from which outside communication is not allowed.
                            properties:
                              cidr:
                                description: CIDR is a CIDR prefix / IP Block.
                                pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                                type: string
                              except:
                                description: ExceptCIDRs is a list of IP blocks which
                                  the endpoint subject to the rule is not allowed
                                  to initiate connections to. These CIDR prefixes
                                  should be contained within Cidr. These exceptions
                                  are only applied to the Cidr in this CIDRRule, and
                                  do not apply to any other CIDR prefixes in any other
                                  CIDRRules.
                                items:
                                  description: 'CIDR specifies a block of IP addresses.
                                    Example: 192.0.2.1/32'
                                  pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                                  type: string
                                type: array
                            required:
                            - cidr
                            type: object
                          type: array
                        fromEndpoints:
                          description: "FromEndpoints is a list of endpoints identified
                            by an EndpointSelector which are allowed to communicate
                            with the endpoint subject to the rule. \n Example: Any
                            endpoint with the label \"role=backend\" can be consumed
                            by any endpoint carrying the label \"role=frontend\"."
                          items:
                            description: EndpointSelector is a wrapper for k8s LabelSelector.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      enum:
                                      - In
                                      - NotIn
                                      - Exists
                                      - DoesNotExist
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  description: MatchLabelsValue represents the value
                                    from the MatchLabels {key,value} pair.
                                  maxLength: 63
                                  pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          type: array
                        fromEntities:
                          description: FromEntities is a list of special entities
                            which the endpoint subject to the rule is allowed to receive
                            connections from. Supported entities are `world`, `cluster`
                            and `host`
                          items:
                            description: Entity specifies the class of receiver/sender
                              endpoints that do not have individual identities.  Entities
                              are used to describe "outside of cluster", "host", etc.
                            enum:
                            - all
                            - world
                            - cluster
                            - host
                            - init
                            - unmanaged
                            - remote-node
                            - health
                            - none
                            type: string
                          type: array
                        fromRequires:
                          description: "FromRequires is a list of additional constraints
                            which must be met in order for the selected endpoints
                            to be reachable. These additional constraints do no by
                            itself grant access privileges and must always be accompanied
                            with at least one matching FromEndpoints. \n Example:
                            Any Endpoint with the label \"team=A\" requires consuming
                            endpoint to also carry the label \"team=A\"."
                          items:
                            description: EndpointSelector is a wrapper for k8s LabelSelector.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      enum:
                                      - In
                                      - NotIn
                                      - Exists
                                      - DoesNotExist
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  description: MatchLabelsValue represents the value
                                    from the MatchLabels {key,value} pair.
                                  maxLength: 63
                                  pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          type: array
                        toPorts:
                          description: "ToPorts is a list of destination ports identified
                            by port number and protocol which the endpoint subject
                            to the rule is allowed to receive connections on. \n Example:
                            Any endpoint with the label \"app=httpd\" can only accept
                            incoming connections on port 80/tcp."
                          items:
                            description: PortRule is a list of ports/protocol combinations
                              with optional Layer 7 rules which must be met.
                            properties:
                              originatingTLS:
                                description: OriginatingTLS is the TLS context for
                                  the connections originated by the L7 proxy.  For
                                  egress policy this specifies the client-side TLS
                                  parameters for the upstream connection originating
                                  from the L7 proxy to the remote destination. For
                                  ingress policy this specifies the client-side TLS
                                  parameters for the connection from the L7 proxy
                                  to the local endpoint.
                                properties:
                                  certificate:
                                    description: Certificate is the file name or k8s
                                      secret item name for the certificate chain.
                                      If omitted, 'tls.crt' is assumed, if it exists.
                                      If given, the item must exist.
                                    type: string
                                  privateKey:
                                    description: PrivateKey is the file name or k8s
                                      secret item name for the private key matching
                                      the certificate chain. If omitted, 'tls.key'
                                      is assumed, if it exists. If given, the item
                                      must exist.
                                    type: string
                                  secret:
                                    description: 'Secret is the secret that contains
                                      the certificates and private key for the TLS
                                      context. By default, Cilium will search in this
                                      secret for the following items:  - ''ca.crt''  -
                                      Which represents the trusted CA to verify remote
                                      source.  - ''tls.crt'' - Which represents the
                                      public key certificate.  - ''tls.key'' - Which
                                      represents the private key matching the public
                                      key                certificate.'
                                    properties:
                                      name:
                                        description: Name is the name of the secret.
                                        type: string
                                      namespace:
                                        description: Namespace is the namespace in
                                          which the secret exists. Context of use
                                          determines the default value if left out
                                          (e.g., "default").
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  trustedCA:
                                    description: TrustedCA is the file name or k8s
                                      secret item name for the trusted CA. If omitted,
                                      'ca.crt' is assumed, if it exists. If given,
                                      the item must exist.
                                    type: string
                                required:
                                - secret
                                type: object
                              ports:
                                description: Ports is a list of L4 port/protocol
                                items:
                                  description: PortProtocol specifies an L4 port with
                                    an optional transport protocol
                                  properties:
                                    port:
                                      description: Port is an L4 port number. For
                                        now the string will be strictly parsed as
                                        a single uint16. In the future, this field
                                        may support ranges in the form "1024-2048
                                        Port can also be a port name, which must contain
                                        at least one [a-z], and may also contain [0-9]
                                        and '-' anywhere except adjacent to another
                                        '-' or in the beginning or the end.
                                      pattern: ^(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[0-9]{1,4})|([a-zA-Z0-9]-?)*[a-zA-Z](-?[a-zA-Z0-9])*$
                                      type: string
                                    protocol:
                                      description: "Protocol is the L4 protocol. If
                                        omitted or empty, any protocol matches. Accepted
                                        values: \"TCP\", \"UDP\", \"\"/\"ANY\" \n
                                        Matching on ICMP is not supported. \n Named
                                        port specified for a container may narrow
                                        this down, but may not contradict this."
                                      enum:
                                      - TCP
                                      - UDP
                                      - ANY
                                      type: string
                                  required:
                                  - port
                                  type: object
                                type: array
                              rules:
                                description: Rules is a list of additional port level
                                  rules which must be met in order for the PortRule
                                  to allow the traffic. If omitted or empty, no layer
                                  7 rules are enforced.
                                properties:
                                  dns:
                                    description: DNS-specific rules.
                                    items:
                                      description: PortRuleDNS is a list of allowed
                                        DNS lookups.
                                      properties:
                                        matchName:
                                          description: MatchName matches literal DNS
                                            names. A trailing "." is automatically
                                            added when missing.
                                          pattern: ^([-a-zA-Z0-9_]+[.]?)+$
                                          type: string
                                        matchPattern:
                                          description: "MatchPattern allows using
                                            wildcards to match DNS names. All wildcards
                                            are case insensitive. The wildcards are:
                                            - \"*\" matches 0 or more DNS valid characters,
                                            and may occur anywhere in the pattern.
                                            As a special case a \"*\" as the leftmost
                                            character, without a following \".\" matches
                                            all subdomains as well as the name to
                                            the right. A trailing \".\" is automatically
                                            added when missing. \n Examples: `*.cilium.io`
                                            matches subomains of cilium at that level
                                            \  www.cilium.io and blog.cilium.io match,
                                            cilium.io and google.com do not `*cilium.io`
                                            matches cilium.io and all subdomains 1
                                            level below   www.cilium.io, blog.cilium.io
                                            and cilium.io match, google.com does not
                                            sub*.cilium.io matches subdomains of cilium
                                            where the subdomain component begins with
                                            \"sub\"   sub.cilium.io and subdomain.cilium.io
                                            match, www.cilium.io,   blog.cilium.io,
                                            cilium.io and google.com do not"
                                          pattern: ^([-a-zA-Z0-9_*]+[.]?)+$
                                          type: string
                                      type: object
                                    type: array
                                  http:
                                    description: HTTP specific rules.
                                    items:
                                      description: "PortRuleHTTP is a list of HTTP
                                        protocol constraints. All fields are optional,
                                        if all fields are empty or missing, the rule
                                        does not have any effect. \n All fields of
                                        this type are extended POSIX regex as defined
                                        by IEEE Std 1003.1, (i.e this follows the
                                        egrep/unix syntax, not the perl syntax) matched
                                        against the path of an incoming request. Currently
                                        it can contain characters disallowed from
                                        the conventional \"path\" part of a URL as
                                        defined by RFC 3986."
                                      properties:
                                        headerMatches:
                                          description: HeaderMatches is a list of
                                            HTTP headers which must be present and
                                            match against the given values. Mismatch
                                            field can be used to specify what to do
                                            when there is no match.
                                          items:
                                            description: HeaderMatch extends the HeaderValue
                                              for matching requirement of a named
                                              header field against an immediate string,
                                              a secret value, or a regex.  If none
                                              of the optional fields is present, then
                                              the header value is not matched, only
                                              presence of the header is enough.
                                            properties:
                                              mismatch:
                                                description: Mismatch identifies what
                                                  to do in case there is no match.
                                                  The default is to drop the request.
                                                  Otherwise the overall rule is still
                                                  considered as matching, but the
                                                  mismatches are logged in the access
                                                  log.
                                                enum:
                                                - LOG
                                                - ADD
                                                - DELETE
                                                - REPLACE
                                                type: string
                                              name:
                                                description: Name identifies the header.
                                                type: string
                                              secret:
                                                description: Secret refers to a secret
                                                  that contains the value to be matched
                                                  against. The secret must only contain
                                                  one entry. If the referred secret
                                                  does not exist, and there is no
                                                  "Value" specified, the match will
                                                  fail.
                                                properties:
                                                  name:
                                                    description: Name is the name
                                                      of the secret.
                                                    type: string
                                                  namespace:
                                                    description: Namespace is the
                                                      namespace in which the secret
                                                      exists. Context of use determines
                                                      the default value if left out
                                                      (e.g., "default").
                                                    type: string
                                                required:
                                                - name
                                                type: object
                                              value:
                                                description: Value matches the exact
                                                  value of the header. Can be specified
                                                  either alone or together with "Secret";
                                                  will be used as the header value
                                                  if the secret can not be found in
                                                  the latter case.
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                        headers:
                                          description: Headers is a list of HTTP headers
                                            which must be present in the request.
                                            If omitted or empty, requests are allowed
                                            regardless of headers present.
                                          items:
                                            type: string
                                          type: array
                                        host:
                                          description: "Host is an extended POSIX
                                            regex matched against the host header
                                            of a request, e.g. \"foo.com\" \n If omitted
                                            or empty, the value of the host header
                                            is ignored."
                                          format: idn-hostname
                                          type: string
                                        method:
                                          description: "Method is an extended POSIX
                                            regex matched against the method of a
                                            request, e.g. \"GET\", \"POST\", \"PUT\",
                                            \"PATCH\", \"DELETE\", ... \n If omitted
                                            or empty, all methods are allowed."
                                          type: string
                                        path:
                                          description: "Path is an extended POSIX
                                            regex matched against the path of a request.
                                            Currently it can contain characters disallowed
                                            from the conventional \"path\" part of
                                            a URL as defined by RFC 3986. \n If omitted
                                            or empty, all paths are all allowed."
                                          type: string
                                      type: object
                                    type: array
                                  kafka:
                                    description: Kafka-specific rules.
                                    items:
                                      description: PortRule is a list of Kafka protocol
                                        constraints. All fields are optional, if all
                                        fields are empty or missing, the rule will
                                        match all Kafka messages.
                                      properties:
                                        apiKey:
                                          description: "APIKey is a case-insensitive
                                            string matched against the key of a request,
                                            e.g. \"produce\", \"fetch\", \"createtopic\",
                                            \"deletetopic\", et al Reference: https://kafka.apache.org/protocol#protocol_api_keys
                                            \n If omitted or empty, and if Role is
                                            not specified, then all keys are allowed."
                                          type: string
                                        apiVersion:
                                          description: "APIVersion is the version
                                            matched against the api version of the
                                            Kafka message. If set, it has to be a
                                            string representing a positive integer.
                                            \n If omitted or empty, all versions are
                                            allowed."
                                          type: string
                                        clientID:
                                          description: "ClientID is the client identifier
                                            as provided in the request. \n From Kafka
                                            protocol documentation: This is a user
                                            supplied identifier for the client application.
                                            The user can use any identifier they like
                                            and it will be used when logging errors,
                                            monitoring aggregates, etc. For example,
                                            one might want to monitor not just the
                                            requests per second overall, but the number
                                            coming from each client application (each
                                            of which could reside on multiple servers).
                                            This id acts as a logical grouping across
                                            all requests from a particular client.
                                            \n If omitted or empty, all client identifiers
                                            are allowed."
                                          type: string
                                        role:
                                          description: "Role is a case-insensitive
                                            string and describes a group of API keys
                                            necessary to perform certain higher-level
                                            Kafka operations such as \"produce\" or
                                            \"consume\". A Role automatically expands
                                            into all APIKeys required to perform the
                                            specified higher-level operation. \n The
                                            following values are supported:  - \"produce\":
                                            Allow producing to the topics specified
                                            in the rule  - \"consume\": Allow consuming
                                            from the topics specified in the rule
                                            \n This field is incompatible with the
                                            APIKey field, i.e APIKey and Role cannot
                                            both be specified in the same rule. \n
                                            If omitted or empty, and if APIKey is
                                            not specified, then all keys are allowed."
                                          enum:
                                          - produce
                                          - consume
                                          type: string
                                        topic:
                                          description: "Topic is the topic name contained
                                            in the message. If a Kafka request contains
                                            multiple topics, then all topics must
                                            be allowed or the message will be rejected.
                                            \n This constraint is ignored if the matched
                                            request message type doesn't contain any
                                            topic. Maximum size of Topic can be 249
                                            characters as per recent Kafka spec and
                                            allowed characters are a-z, A-Z, 0-9,
                                            -, . and _. \n Older Kafka versions had
                                            longer topic lengths of 255, but in Kafka
                                            0.10 version the length was changed from
                                            255 to 249. For compatibility reasons
                                            we are using 255. \n If omitted or empty,
                                            all topics are allowed."
                                          maxLength: 255
                                          type: string
                                      type: object
                                    type: array
                                  l7:
                                    description: Key-value pair rules.
                                    items:
                                      additionalProperties:
                                        type: string
                                      description: PortRuleL7 is a list of key-value
                                        pairs interpreted by a L7 protocol as protocol
                                        constraints. All fields are optional, if all
                                        fields are empty or missing, the rule does
                                        not have any effect.
                                      type: object
                                    type: array
                                  l7proto:
                                    description: Name of the L7 protocol for which
                                      the Key-value pair rules apply.
                                    type: string
                                type: object
                              terminatingTLS:
                                description: TerminatingTLS is the TLS context for
                                  the connection terminated by the L7 proxy.  For
                                  egress policy this specifies the server-side TLS
                                  parameters to be applied on the connections originated
                                  from the local endpoint and terminated by the L7
                                  proxy. For ingress policy this specifies the server-side
                                  TLS parameters to be applied on the connections
                                  originated from a remote source and terminated by
                                  the L7 proxy.
                                properties:
                                  certificate:
                                    description: Certificate is the file name or k8s
                                      secret item name for the certificate chain.
                                      If omitted, 'tls.crt' is assumed, if it exists.
                                      If given, the item must exist.
                                    type: string
                                  privateKey:
                                    description: PrivateKey is the file name or k8s
                                      secret item name for the private key matching
                                      the certificate chain. If omitted, 'tls.key'
                                      is assumed, if it exists. If given, the item
                                      must exist.
                                    type: string
                                  secret:
                                    description: 'Secret is the secret that contains
                                      the certificates and private key for the TLS
                                      context. By default, Cilium will search in this
                                      secret for the following items:  - ''ca.crt''  -
                                      Which represents the trusted CA to verify remote
                                      source.  - ''tls.crt'' - Which represents the
                                      public key certificate.  - ''tls.key'' - Which
                                      represents the private key matching the public
                                      key                certificate.'
                                    properties:
                                      name:
                                        description: Name is the name of the secret.
                                        type: string
                                      namespace:
                                        description: Namespace is the namespace in
                                          which the secret exists. Context of use
                                          determines the default value if left out
                                          (e.g., "default").
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  trustedCA:
                                    description: TrustedCA is the file name or k8s
                                      secret item name for the trusted CA. If omitted,
                                      'ca.crt' is assumed, if it exists. If given,
                                      the item must exist.
                                    type: string
                                required:
                                - secret
                                type: object
                            type: object
                          type: array
                      type: object
                    type: array
                  ingressDeny:
                    description: IngressDeny is a list of IngressDenyRule which are
                      enforced at ingress. Any rule inserted here will by denied regardless
                      of the allowed ingress rules in the 'ingress' field. If omitted
                      or empty, this rule does not apply at ingress.
                    items:
                      description: "IngressDenyRule contains all rule types which
                        can be applied at ingress, i.e. network traffic that originates
                        outside of the endpoint and is entering the endpoint selected
                        by the endpointSelector. \n - All members of this structure
                        are optional. If omitted or empty, the   member will have
                        no effect on the rule. \n - If multiple members are set, all
                        of them need to match in order for   the rule to take effect.
                        The exception to this rule is FromRequires field;   the effects
                        of any Requires field in any rule will apply to all other
                        \  rules as well. \n - FromEndpoints, FromCIDR, FromCIDRSet
                        and FromEntities are mutually   exclusive. Only one of these
                        members may be present within an individual   rule."
                      properties:
                        fromCIDR:
                          description: "FromCIDR is a list of IP blocks which the
                            endpoint subject to the rule is allowed to receive connections
                            from. Only connections which do *not* originate from the
                            cluster or from the local host are subject to CIDR rules.
                            In order to allow in-cluster connectivity, use the FromEndpoints
                            field.  This will match on the source IP address of incoming
                            connections. Adding  a prefix into FromCIDR or into FromCIDRSet
                            with no ExcludeCIDRs is  equivalent.  Overlaps are allowed
                            between FromCIDR and FromCIDRSet. \n Example: Any endpoint
                            with the label \"app=my-legacy-pet\" is allowed to receive
                            connections from 10.3.9.1"
                          items:
                            description: 'CIDR specifies a block of IP addresses.
                              Example: 192.0.2.1/32'
                            pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                            type: string
                          type: array
                        fromCIDRSet:
                          description: "FromCIDRSet is a list of IP blocks which the
                            endpoint subject to the rule is allowed to receive connections
                            from in addition to FromEndpoints, along with a list of
                            subnets contained within their corresponding IP block
                            from which traffic should not be allowed. This will match
                            on the source IP address of incoming connections. Adding
                            a prefix into FromCIDR or into FromCIDRSet with no ExcludeCIDRs
                            is equivalent. Overlaps are allowed between FromCIDR and
                            FromCIDRSet. \n Example: Any endpoint with the label \"app=my-legacy-pet\"
                            is allowed to receive connections from 10.0.0.0/8 except
                            from IPs in subnet 10.96.0.0/12."
                          items:
                            description: CIDRRule is a rule that specifies a CIDR
                              prefix to/from which outside communication  is allowed,
                              along with an optional list of subnets within that CIDR
                              prefix to/from which outside communication is not allowed.
                            properties:
                              cidr:
                                description: CIDR is a CIDR prefix / IP Block.
                                pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                                type: string
                              except:
                                description: ExceptCIDRs is a list of IP blocks which
                                  the endpoint subject to the rule is not allowed
                                  to initiate connections to. These CIDR prefixes
                                  should be contained within Cidr. These exceptions
                                  are only applied to the Cidr in this CIDRRule, and
                                  do not apply to any other CIDR prefixes in any other
                                  CIDRRules.
                                items:
                                  description: 'CIDR specifies a block of IP addresses.
                                    Example: 192.0.2.1/32'
                                  pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                                  type: string
                                type: array
                            required:
                            - cidr
                            type: object
                          type: array
                        fromEndpoints:
                          description: "FromEndpoints is a list of endpoints identified
                            by an EndpointSelector which are allowed to communicate
                            with the endpoint subject to the rule. \n Example: Any
                            endpoint with the label \"role=backend\" can be consumed
                            by any endpoint carrying the label \"role=frontend\"."
                          items:
                            description: EndpointSelector is a wrapper for k8s LabelSelector.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      enum:
                                      - In
                                      - NotIn
                                      - Exists
                                      - DoesNotExist
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  description: MatchLabelsValue represents the value
                                    from the MatchLabels {key,value} pair.
                                  maxLength: 63
                                  pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          type: array
                        fromEntities:
                          description: FromEntities is a list of special entities
                            which the endpoint subject to the rule is allowed to receive
                            connections from. Supported entities are `world`, `cluster`
                            and `host`
                          items:
                            description: Entity specifies the class of receiver/sender
                              endpoints that do not have individual identities.  Entities
                              are used to describe "outside of cluster", "host", etc.
                            enum:
                            - all
                            - world
                            - cluster
                            - host
                            - init
                            - unmanaged
                            - remote-node
                            - health
                            - none
                            type: string
                          type: array
                        fromRequires:
                          description: "FromRequires is a list of additional constraints
                            which must be met in order for the selected endpoints
                            to be reachable. These additional constraints do no by
                            itself grant access privileges and must always be accompanied
                            with at least one matching FromEndpoints. \n Example:
                            Any Endpoint with the label \"team=A\" requires consuming
                            endpoint to also carry the label \"team=A\"."
                          items:
                            description: EndpointSelector is a wrapper for k8s LabelSelector.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      enum:
                                      - In
                                      - NotIn
                                      - Exists
                                      - DoesNotExist
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  description: MatchLabelsValue represents the value
                                    from the MatchLabels {key,value} pair.
                                  maxLength: 63
                                  pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          type: array
                        toPorts:
                          description: "ToPorts is a list of destination ports identified
                            by port number and protocol which the endpoint subject
                            to the rule is not allowed to receive connections on.
                            \n Example: Any endpoint with the label \"app=httpd\"
                            can not accept incoming connections on port 80/tcp."
                          items:
                            description: PortDenyRule is a list of ports/protocol
                              that should be used for deny policies. This structure
                              lacks the L7Rules since it's not supported in deny policies.
                            properties:
                              ports:
                                description: Ports is a list of L4 port/protocol
                                items:
                                  description: PortProtocol specifies an L4 port with
                                    an optional transport protocol
                                  properties:
                                    port:
                                      description: Port is an L4 port number. For
                                        now the string will be strictly parsed as
                                        a single uint16. In the future, this field
                                        may support ranges in the form "1024-2048
                                        Port can also be a port name, which must contain
                                        at least one [a-z], and may also contain [0-9]
                                        and '-' anywhere except adjacent to another
                                        '-' or in the beginning or the end.
                                      pattern: ^(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[0-9]{1,4})|([a-zA-Z0-9]-?)*[a-zA-Z](-?[a-zA-Z0-9])*$
                                      type: string
                                    protocol:
                                      description: "Protocol is the L4 protocol. If
                                        omitted or empty, any protocol matches. Accepted
                                        values: \"TCP\", \"UDP\", \"\"/\"ANY\" \n
                                        Matching on ICMP is not supported. \n Named
                                        port specified for a container may narrow
                                        this down, but may not contradict this."
                                      enum:
                                      - TCP
                                      - UDP
                                      - ANY
                                      type: string
                                  required:
                                  - port
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  labels:
                    description: Labels is a list of optional strings which can be
                      used to re-identify the rule or to store metadata. It is possible
                      to lookup or delete strings based on labels. Labels are not
                      required to be unique, multiple rules can have overlapping or
                      identical labels.
                    items:
                      description: Label is the Cilium's representation of a container
                        label.
                      properties:
                        key:
                          type: string
                        source:
                          description: 'Source can be one of the above values (e.g.:
                            LabelSourceContainer).'
                          type: string
                        value:
                          type: string
                      required:
                      - key
                      type: object
                    type: array
                  nodeSelector:
                    description: NodeSelector selects all nodes which should be subject
                      to this rule. EndpointSelector and NodeSelector cannot be both
                      empty and are mutually exclusive. Can only be used in CiliumClusterwideNetworkPolicies.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              enum:
                              - In
                              - NotIn
                              - Exists
                              - DoesNotExist
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          description: MatchLabelsValue represents the value from
                            the MatchLabels {key,value} pair.
                          maxLength: 63
                          pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                type: object
              type: array
            status:
              description: "Status is the status of the Cilium policy rule. \n The
                reason this field exists in this structure is due a bug in the k8s
                code-generator that doesn't create a `UpdateStatus` method because
                the field does not exist in the structure."
              properties:
                derivativePolicies:
                  additionalProperties:
                    description: CiliumNetworkPolicyNodeStatus is the status of a
                      Cilium policy rule for a specific node.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations corresponds to the Annotations in
                          the ObjectMeta of the CNP that have been realized on the
                          node for CNP. That is, if a CNP has been imported and has
                          been assigned annotation X=Y by the user, Annotations in
                          CiliumNetworkPolicyNodeStatus will be X=Y once the CNP that
                          was imported corresponding to Annotation X=Y has been realized
                          on the node.
                        type: object
                      enforcing:
                        description: Enforcing is set to true once all endpoints present
                          at the time the policy has been imported are enforcing this
                          policy.
                        type: boolean
                      error:
                        description: Error describes any error that occurred when
                          parsing or importing the policy, or realizing the policy
                          for the endpoints to which it applies on the node.
                        type: string
                      lastUpdated:
                        description: LastUpdated contains the last time this status
                          was updated
                        format: date-time
                        type: string
                      localPolicyRevision:
                        description: Revision is the policy revision of the repository
                          which first implemented this policy.
                        format: int64
                        type: integer
                      ok:
                        description: OK is true when the policy has been parsed and
                          imported successfully into the in-memory policy repository
                          on the node.
                        type: boolean
                    type: object
                  description: DerivativePolicies is the status of all policies derived
                    from the Cilium policy
                  type: object
                nodes:
                  additionalProperties:
                    description: CiliumNetworkPolicyNodeStatus is the status of a
                      Cilium policy rule for a specific node.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations corresponds to the Annotations in
                          the ObjectMeta of the CNP that have been realized on the
                          node for CNP. That is, if a CNP has been imported and has
                          been assigned annotation X=Y by the user, Annotations in
                          CiliumNetworkPolicyNodeStatus will be X=Y once the CNP that
                          was imported corresponding to Annotation X=Y has been realized
                          on the node.
                        type: object
                      enforcing:
                        description: Enforcing is set to true once all endpoints present
                          at the time the policy has been imported are enforcing this
                          policy.
                        type: boolean
                      error:
                        description: Error describes any error that occurred when
                          parsing or importing the policy, or realizing the policy
                          for the endpoints to which it applies on the node.
                        type: string
                      lastUpdated:
                        description: LastUpdated contains the last time this status
                          was updated
                        format: date-time
                        type: string
                      localPolicyRevision:
                        description: Revision is the policy revision of the repository
                          which first implemented this policy.
                        format: int64
                        type: integer
                      ok:
                        description: OK is true when the policy has been parsed and
                          imported successfully into the in-memory policy repository
                          on the node.
                        type: boolean
                    type: object
                  description: Nodes is the Cilium policy status for each node
                  type: object
              type: object
          required:
          - metadata
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: CiliumClusterwideNetworkPolicy
      listKind: CiliumClusterwideNetworkPolicyList
      plural: ciliumclusterwidenetworkpolicies
      shortNames:
      - ccnp
      singular: ciliumclusterwidenetworkpolicy
    conditions:
    - lastTransitionTime: "2021-12-04T16:58:57Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-04T16:58:57Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v2
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2021-12-04T16:58:54Z"
    generation: 1
    labels:
      io.cilium.k8s.crd.schema.version: 1.23.2
    name: ciliumegressnatpolicies.cilium.io
    resourceVersion: "895"
    uid: ccf69e3e-3627-46ff-8646-14745c41753e
  spec:
    conversion:
      strategy: None
    group: cilium.io
    names:
      kind: CiliumEgressNATPolicy
      listKind: CiliumEgressNATPolicyList
      plural: ciliumegressnatpolicies
      singular: ciliumegressnatpolicy
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - description: The age of the identity
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v2alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                destinationCIDRs:
                  description: DestinationCIDRs is a list of destination CIDRs for
                    destination IP addresses. If a destination IP matches any one
                    CIDR, it will be selected.
                  items:
                    pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$
                    type: string
                  type: array
                egress:
                  description: Egress represents a list of rules by which egress traffic
                    is filtered from the source pods.
                  items:
                    properties:
                      namespaceSelector:
                        description: Selects Namespaces using cluster-scoped labels.
                          This field follows standard label selector semantics; if
                          present but empty, it selects all namespaces.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  enum:
                                  - In
                                  - NotIn
                                  - Exists
                                  - DoesNotExist
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              description: MatchLabelsValue represents the value from
                                the MatchLabels {key,value} pair.
                              maxLength: 63
                              pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      podSelector:
                        description: This is a label selector which selects Pods.
                          This field follows standard label selector semantics; if
                          present but empty, it selects all pods.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  enum:
                                  - In
                                  - NotIn
                                  - Exists
                                  - DoesNotExist
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              description: MatchLabelsValue represents the value from
                                the MatchLabels {key,value} pair.
                              maxLength: 63
                              pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                    type: object
                  type: array
                egressSourceIP:
                  description: "EgressSourceIP is a source ip address that the egress
                    traffic is redirected to and SNATed with. \n Example: When it
                    is set to \"192.168.1.100\", matched egress packets will be redirected
                    to node with ip 192.168.1.100 and SNAT’ed with IP address 192.168.1.100."
                  pattern: ((^\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\s*$)|(^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$))
                  type: string
              required:
              - destinationCIDRs
              - egress
              - egressSourceIP
              type: object
          required:
          - metadata
          type: object
      served: true
      storage: true
      subresources: {}
  status:
    acceptedNames:
      kind: CiliumEgressNATPolicy
      listKind: CiliumEgressNATPolicyList
      plural: ciliumegressnatpolicies
      singular: ciliumegressnatpolicy
    conditions:
    - lastTransitionTime: "2021-12-04T16:58:54Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-04T16:58:54Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v2alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2021-12-04T16:58:55Z"
    generation: 1
    labels:
      io.cilium.k8s.crd.schema.version: 1.23.2
    name: ciliumendpoints.cilium.io
    resourceVersion: "906"
    uid: 45989ef1-f0c9-4587-9213-e1507642d736
  spec:
    conversion:
      strategy: None
    group: cilium.io
    names:
      kind: CiliumEndpoint
      listKind: CiliumEndpointList
      plural: ciliumendpoints
      shortNames:
      - cep
      - ciliumep
      singular: ciliumendpoint
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Cilium endpoint id
        jsonPath: .status.id
        name: Endpoint ID
        type: integer
      - description: Cilium identity id
        jsonPath: .status.identity.id
        name: Identity ID
        type: integer
      - description: Ingress enforcement in the endpoint
        jsonPath: .status.policy.ingress.enforcing
        name: Ingress Enforcement
        type: boolean
      - description: Egress enforcement in the endpoint
        jsonPath: .status.policy.egress.enforcing
        name: Egress Enforcement
        type: boolean
      - description: Status of visibility policy in the endpoint
        jsonPath: .status.visibility-policy-status
        name: Visibility Policy
        type: string
      - description: Endpoint current state
        jsonPath: .status.state
        name: Endpoint State
        type: string
      - description: Endpoint IPv4 address
        jsonPath: .status.networking.addressing[0].ipv4
        name: IPv4
        type: string
      - description: Endpoint IPv6 address
        jsonPath: .status.networking.addressing[0].ipv6
        name: IPv6
        type: string
      name: v2
      schema:
        openAPIV3Schema:
          description: CiliumEndpoint is the status of a Cilium policy rule.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            status:
              description: EndpointStatus is the status of a Cilium endpoint.
              properties:
                controllers:
                  description: Controllers is the list of failing controllers for
                    this endpoint.
                  items:
                    description: ControllerStatus is the status of a failing controller.
                    properties:
                      configuration:
                        description: Configuration is the controller configuration
                        properties:
                          error-retry:
                            description: Retry on error
                            type: boolean
                          error-retry-base:
                            description: 'Base error retry back-off time Format: duration'
                            format: int64
                            type: integer
                          interval:
                            description: 'Regular synchronization interval Format:
                              duration'
                            format: int64
                            type: integer
                        type: object
                      name:
                        description: Name is the name of the controller
                        type: string
                      status:
                        description: Status is the status of the controller
                        properties:
                          consecutive-failure-count:
                            format: int64
                            type: integer
                          failure-count:
                            format: int64
                            type: integer
                          last-failure-msg:
                            type: string
                          last-failure-timestamp:
                            type: string
                          last-success-timestamp:
                            type: string
                          success-count:
                            format: int64
                            type: integer
                        type: object
                      uuid:
                        description: UUID is the UUID of the controller
                        type: string
                    type: object
                  type: array
                encryption:
                  description: Encryption is the encryption configuration of the node
                  properties:
                    key:
                      description: Key is the index to the key to use for encryption
                        or 0 if encryption is disabled.
                      type: integer
                  type: object
                external-identifiers:
                  description: ExternalIdentifiers is a set of identifiers to identify
                    the endpoint apart from the pod name. This includes container
                    runtime IDs.
                  properties:
                    container-id:
                      description: ID assigned by container runtime
                      type: string
                    container-name:
                      description: Name assigned to container
                      type: string
                    docker-endpoint-id:
                      description: Docker endpoint ID
                      type: string
                    docker-network-id:
                      description: Docker network ID
                      type: string
                    k8s-namespace:
                      description: K8s namespace for this endpoint
                      type: string
                    k8s-pod-name:
                      description: K8s pod name for this endpoint
                      type: string
                    pod-name:
                      description: K8s pod for this endpoint(Deprecated, use K8sPodName
                        and K8sNamespace instead)
                      type: string
                  type: object
                health:
                  description: Health is the overall endpoint & subcomponent health.
                  properties:
                    bpf:
                      description: bpf
                      type: string
                    connected:
                      description: Is this endpoint reachable
                      type: boolean
                    overallHealth:
                      description: overall health
                      type: string
                    policy:
                      description: policy
                      type: string
                  type: object
                id:
                  description: ID is the cilium-agent-local ID of the endpoint.
                  format: int64
                  type: integer
                identity:
                  description: Identity is the security identity associated with the
                    endpoint
                  properties:
                    id:
                      description: ID is the numeric identity of the endpoint
                      format: int64
                      type: integer
                    labels:
                      description: Labels is the list of labels associated with the
                        identity
                      items:
                        type: string
                      type: array
                  type: object
                log:
                  description: Log is the list of the last few warning and error log
                    entries
                  items:
                    description: "EndpointStatusChange Indication of a change of status
                      \n swagger:model EndpointStatusChange"
                    properties:
                      code:
                        description: 'Code indicate type of status change Enum: [ok
                          failed]'
                        type: string
                      message:
                        description: Status message
                        type: string
                      state:
                        description: state
                        type: string
                      timestamp:
                        description: Timestamp when status change occurred
                        type: string
                    type: object
                  type: array
                named-ports:
                  description: "NamedPorts List of named Layer 4 port and protocol
                    pairs which will be used in Network Policy specs. \n swagger:model
                    NamedPorts"
                  items:
                    description: "Port Layer 4 port / protocol pair \n swagger:model
                      Port"
                    properties:
                      name:
                        description: Optional layer 4 port name
                        type: string
                      port:
                        description: Layer 4 port number
                        type: integer
                      protocol:
                        description: 'Layer 4 protocol Enum: [TCP UDP ANY]'
                        type: string
                    type: object
                  type: array
                networking:
                  description: Networking is the networking properties of the endpoint.
                  properties:
                    addressing:
                      description: IP4/6 addresses assigned to this Endpoint
                      items:
                        description: AddressPair is is a par of IPv4 and/or IPv6 address.
                        properties:
                          ipv4:
                            type: string
                          ipv6:
                            type: string
                        type: object
                      type: array
                    node:
                      description: NodeIP is the IP of the node the endpoint is running
                        on. The IP must be reachable between nodes.
                      type: string
                  required:
                  - addressing
                  type: object
                policy:
                  description: EndpointPolicy represents the endpoint's policy by
                    listing all allowed ingress and egress identities in combination
                    with L4 port and protocol.
                  properties:
                    egress:
                      description: EndpointPolicyDirection is the list of allowed
                        identities per direction.
                      properties:
                        adding:
                          description: Deprecated
                          items:
                            description: IdentityTuple specifies a peer by identity,
                              destination port and protocol.
                            properties:
                              dest-port:
                                type: integer
                              identity:
                                format: int64
                                type: integer
                              identity-labels:
                                additionalProperties:
                                  type: string
                                type: object
                              protocol:
                                type: integer
                            type: object
                          type: array
                        allowed:
                          description: AllowedIdentityList is a list of IdentityTuples
                            that species peers that are allowed.
                          items:
                            description: IdentityTuple specifies a peer by identity,
                              destination port and protocol.
                            properties:
                              dest-port:
                                type: integer
                              identity:
                                format: int64
                                type: integer
                              identity-labels:
                                additionalProperties:
                                  type: string
                                type: object
                              protocol:
                                type: integer
                            type: object
                          type: array
                        denied:
                          description: DenyIdentityList is a list of IdentityTuples
                            that species peers that are denied.
                          items:
                            description: IdentityTuple specifies a peer by identity,
                              destination port and protocol.
                            properties:
                              dest-port:
                                type: integer
                              identity:
                                format: int64
                                type: integer
                              identity-labels:
                                additionalProperties:
                                  type: string
                                type: object
                              protocol:
                                type: integer
                            type: object
                          type: array
                        enforcing:
                          type: boolean
                        removing:
                          description: Deprecated
                          items:
                            description: IdentityTuple specifies a peer by identity,
                              destination port and protocol.
                            properties:
                              dest-port:
                                type: integer
                              identity:
                                format: int64
                                type: integer
                              identity-labels:
                                additionalProperties:
                                  type: string
                                type: object
                              protocol:
                                type: integer
                            type: object
                          type: array
                      required:
                      - enforcing
                      type: object
                    ingress:
                      description: EndpointPolicyDirection is the list of allowed
                        identities per direction.
                      properties:
                        adding:
                          description: Deprecated
                          items:
                            description: IdentityTuple specifies a peer by identity,
                              destination port and protocol.
                            properties:
                              dest-port:
                                type: integer
                              identity:
                                format: int64
                                type: integer
                              identity-labels:
                                additionalProperties:
                                  type: string
                                type: object
                              protocol:
                                type: integer
                            type: object
                          type: array
                        allowed:
                          description: AllowedIdentityList is a list of IdentityTuples
                            that species peers that are allowed.
                          items:
                            description: IdentityTuple specifies a peer by identity,
                              destination port and protocol.
                            properties:
                              dest-port:
                                type: integer
                              identity:
                                format: int64
                                type: integer
                              identity-labels:
                                additionalProperties:
                                  type: string
                                type: object
                              protocol:
                                type: integer
                            type: object
                          type: array
                        denied:
                          description: DenyIdentityList is a list of IdentityTuples
                            that species peers that are denied.
                          items:
                            description: IdentityTuple specifies a peer by identity,
                              destination port and protocol.
                            properties:
                              dest-port:
                                type: integer
                              identity:
                                format: int64
                                type: integer
                              identity-labels:
                                additionalProperties:
                                  type: string
                                type: object
                              protocol:
                                type: integer
                            type: object
                          type: array
                        enforcing:
                          type: boolean
                        removing:
                          description: Deprecated
                          items:
                            description: IdentityTuple specifies a peer by identity,
                              destination port and protocol.
                            properties:
                              dest-port:
                                type: integer
                              identity:
                                format: int64
                                type: integer
                              identity-labels:
                                additionalProperties:
                                  type: string
                                type: object
                              protocol:
                                type: integer
                            type: object
                          type: array
                      required:
                      - enforcing
                      type: object
                  type: object
                state:
                  description: State is the state of the endpoint.
                  enum:
                  - creating
                  - waiting-for-identity
                  - not-ready
                  - waiting-to-regenerate
                  - regenerating
                  - restoring
                  - ready
                  - disconnecting
                  - disconnected
                  - invalid
                  type: string
                visibility-policy-status:
                  type: string
              type: object
          required:
          - metadata
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: CiliumEndpoint
      listKind: CiliumEndpointList
      plural: ciliumendpoints
      shortNames:
      - cep
      - ciliumep
      singular: ciliumendpoint
    conditions:
    - lastTransitionTime: "2021-12-04T16:58:55Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-04T16:58:55Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v2
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2021-12-04T16:58:54Z"
    generation: 1
    labels:
      io.cilium.k8s.crd.schema.version: 1.23.2
    name: ciliumexternalworkloads.cilium.io
    resourceVersion: "893"
    uid: 2758f331-46f9-46bf-8e05-e10cf46e93b8
  spec:
    conversion:
      strategy: None
    group: cilium.io
    names:
      kind: CiliumExternalWorkload
      listKind: CiliumExternalWorkloadList
      plural: ciliumexternalworkloads
      shortNames:
      - cew
      singular: ciliumexternalworkload
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.id
        name: Cilium ID
        type: integer
      - jsonPath: .status.ip
        name: IP
        type: string
      name: v2
      schema:
        openAPIV3Schema:
          description: CiliumExternalWorkload is a Kubernetes Custom Resource that
            contains a specification for an external workload that can join the cluster.  The
            name of the CRD is the FQDN of the external workload, and it needs to
            match the name in the workload registration. The labels on the CRD object
            are the labels that will be used to allocate a Cilium Identity for the
            external workload. If 'io.kubernetes.pod.namespace' or 'io.kubernetes.pod.name'
            labels are not explicitly specified, they will be defaulted to 'default'
            and <workload name>, respectively. 'io.cilium.k8s.policy.cluster' will
            always be defined as the name of the current cluster, which defaults to
            "default".
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec is the desired configuration of the external Cilium
                workload.
              properties:
                ipv4-alloc-cidr:
                  description: IPv4AllocCIDR is the range of IPv4 addresses in the
                    CIDR format that the external workload can use to allocate IP
                    addresses for the tunnel device and the health endpoint.
                  pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$
                  type: string
                ipv6-alloc-cidr:
                  description: IPv6AllocCIDR is the range of IPv6 addresses in the
                    CIDR format that the external workload can use to allocate IP
                    addresses for the tunnel device and the health endpoint.
                  pattern: ^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                  type: string
              type: object
            status:
              description: Status is the most recent status of the external Cilium
                workload. It is a read-only field.
              properties:
                id:
                  description: ID is the numeric identity allocated for the external
                    workload.
                  format: int64
                  type: integer
                ip:
                  description: IP is the IP address of the workload. Empty if the
                    workload has not registered.
                  type: string
              type: object
          required:
          - metadata
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: CiliumExternalWorkload
      listKind: CiliumExternalWorkloadList
      plural: ciliumexternalworkloads
      shortNames:
      - cew
      singular: ciliumexternalworkload
    conditions:
    - lastTransitionTime: "2021-12-04T16:58:54Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-04T16:58:54Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v2
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2021-12-04T16:58:54Z"
    generation: 1
    labels:
      io.cilium.k8s.crd.schema.version: 1.23.2
    name: ciliumidentities.cilium.io
    resourceVersion: "896"
    uid: 095c96a8-c721-4d3e-829b-0096763282a6
  spec:
    conversion:
      strategy: None
    group: cilium.io
    names:
      kind: CiliumIdentity
      listKind: CiliumIdentityList
      plural: ciliumidentities
      shortNames:
      - ciliumid
      singular: ciliumidentity
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - description: The namespace of the entity
        jsonPath: .metadata.labels.io\.kubernetes\.pod\.namespace
        name: Namespace
        type: string
      - description: The age of the identity
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v2
      schema:
        openAPIV3Schema:
          description: 'CiliumIdentity is a CRD that represents an identity managed
            by Cilium. It is intended as a backing store for identity allocation,
            acting as the global coordination backend, and can be used in place of
            a KVStore (such as etcd). The name of the CRD is the numeric identity
            and the labels on the CRD object are the the kubernetes sourced labels
            seen by cilium. This is currently the only label source possible when
            running under kubernetes. Non-kubernetes labels are filtered but all labels,
            from all sources, are places in the SecurityLabels field. These also include
            the source and are used to define the identity. The labels under metav1.ObjectMeta
            can be used when searching for CiliumIdentity instances that include particular
            labels. This can be done with invocations such as:   kubectl get ciliumid
            -l ''foo=bar'' Each node using a ciliumidentity updates the status field
            with it''s name and a timestamp when it first allocates or uses an identity,
            and periodically after that. It deletes its entry when no longer using
            this identity. cilium-operator uses the list of nodes in status to reference
            count users of this identity, and to expire stale usage.'
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            security-labels:
              additionalProperties:
                type: string
              description: SecurityLabels is the source-of-truth set of labels for
                this identity.
              type: object
          required:
          - metadata
          - security-labels
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: CiliumIdentity
      listKind: CiliumIdentityList
      plural: ciliumidentities
      shortNames:
      - ciliumid
      singular: ciliumidentity
    conditions:
    - lastTransitionTime: "2021-12-04T16:58:54Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-04T16:58:54Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v2
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2021-12-04T16:58:54Z"
    generation: 1
    labels:
      io.cilium.k8s.crd.schema.version: 1.23.2
    name: ciliumlocalredirectpolicies.cilium.io
    resourceVersion: "891"
    uid: d1e7f776-9cc9-4f25-ad68-6ea5ca0c5807
  spec:
    conversion:
      strategy: None
    group: cilium.io
    names:
      kind: CiliumLocalRedirectPolicy
      listKind: CiliumLocalRedirectPolicyList
      plural: ciliumlocalredirectpolicies
      shortNames:
      - clrp
      singular: ciliumlocalredirectpolicy
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v2
      schema:
        openAPIV3Schema:
          description: CiliumLocalRedirectPolicy is a Kubernetes Custom Resource that
            contains a specification to redirect traffic locally within a node.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec is the desired behavior of the local redirect policy.
              properties:
                description:
                  description: Description can be used by the creator of the policy
                    to describe the purpose of this policy.
                  type: string
                redirectBackend:
                  description: RedirectBackend specifies backend configuration to
                    redirect traffic to. It can not be empty.
                  properties:
                    localEndpointSelector:
                      description: LocalEndpointSelector selects node local pod(s)
                        where traffic is redirected to.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                enum:
                                - In
                                - NotIn
                                - Exists
                                - DoesNotExist
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            description: MatchLabelsValue represents the value from
                              the MatchLabels {key,value} pair.
                            maxLength: 63
                            pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                    toPorts:
                      description: ToPorts is a list of L4 ports with protocol of
                        node local pod(s) where traffic is redirected to. When multiple
                        ports are specified, the ports must be named.
                      items:
                        description: PortInfo specifies L4 port number and name along
                          with the transport protocol
                        properties:
                          name:
                            description: Name is a port name, which must contain at
                              least one [a-z], and may also contain [0-9] and '-'
                              anywhere except adjacent to another '-' or in the beginning
                              or the end.
                            pattern: ^([0-9]{1,4})|([a-zA-Z0-9]-?)*[a-zA-Z](-?[a-zA-Z0-9])*$
                            type: string
                          port:
                            description: Port is an L4 port number. The string will
                              be strictly parsed as a single uint16.
                            pattern: ^()([1-9]|[1-5]?[0-9]{2,4}|6[1-4][0-9]{3}|65[1-4][0-9]{2}|655[1-2][0-9]|6553[1-5])$
                            type: string
                          protocol:
                            description: 'Protocol is the L4 protocol. Accepted values:
                              "TCP", "UDP"'
                            enum:
                            - TCP
                            - UDP
                            type: string
                        required:
                        - port
                        - protocol
                        type: object
                      type: array
                  required:
                  - localEndpointSelector
                  - toPorts
                  type: object
                redirectFrontend:
                  description: RedirectFrontend specifies frontend configuration to
                    redirect traffic from. It can not be empty.
                  oneOf:
                  - properties:
                      addressMatcher: {}
                    required:
                    - addressMatcher
                  - properties:
                      serviceMatcher: {}
                    required:
                    - serviceMatcher
                  properties:
                    addressMatcher:
                      description: AddressMatcher is a tuple {IP, port, protocol}
                        that matches traffic to be redirected.
                      properties:
                        ip:
                          description: "IP is a destination ip address for traffic
                            to be redirected. \n Example: When it is set to \"169.254.169.254\",
                            traffic destined to \"169.254.169.254\" is redirected."
                          pattern: ((^\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\s*$)|(^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$))
                          type: string
                        toPorts:
                          description: "ToPorts is a list of destination L4 ports
                            with protocol for traffic to be redirected. When multiple
                            ports are specified, the ports must be named. \n Example:
                            When set to Port: \"53\" and Protocol: UDP, traffic destined
                            to port '53' with UDP protocol is redirected."
                          items:
                            description: PortInfo specifies L4 port number and name
                              along with the transport protocol
                            properties:
                              name:
                                description: Name is a port name, which must contain
                                  at least one [a-z], and may also contain [0-9] and
                                  '-' anywhere except adjacent to another '-' or in
                                  the beginning or the end.
                                pattern: ^([0-9]{1,4})|([a-zA-Z0-9]-?)*[a-zA-Z](-?[a-zA-Z0-9])*$
                                type: string
                              port:
                                description: Port is an L4 port number. The string
                                  will be strictly parsed as a single uint16.
                                pattern: ^()([1-9]|[1-5]?[0-9]{2,4}|6[1-4][0-9]{3}|65[1-4][0-9]{2}|655[1-2][0-9]|6553[1-5])$
                                type: string
                              protocol:
                                description: 'Protocol is the L4 protocol. Accepted
                                  values: "TCP", "UDP"'
                                enum:
                                - TCP
                                - UDP
                                type: string
                            required:
                            - port
                            - protocol
                            type: object
                          type: array
                      required:
                      - ip
                      - toPorts
                      type: object
                    serviceMatcher:
                      description: ServiceMatcher specifies Kubernetes service and
                        port that matches traffic to be redirected.
                      properties:
                        namespace:
                          description: Namespace is the Kubernetes service namespace.
                            The service namespace must match the namespace of the
                            parent Local Redirect Policy.  For Cluster-wide Local
                            Redirect Policy, this can be any namespace.
                          type: string
                        serviceName:
                          description: "Name is the name of a destination Kubernetes
                            service that identifies traffic to be redirected. The
                            service type needs to be ClusterIP. \n Example: When this
                            field is populated with 'serviceName:myService', all the
                            traffic destined to the cluster IP of this service at
                            the (specified) service port(s) will be redirected."
                          type: string
                        toPorts:
                          description: ToPorts is a list of destination service L4
                            ports with protocol for traffic to be redirected. If not
                            specified, traffic for all the service ports will be redirected.
                            When multiple ports are specified, the ports must be named.
                          items:
                            description: PortInfo specifies L4 port number and name
                              along with the transport protocol
                            properties:
                              name:
                                description: Name is a port name, which must contain
                                  at least one [a-z], and may also contain [0-9] and
                                  '-' anywhere except adjacent to another '-' or in
                                  the beginning or the end.
                                pattern: ^([0-9]{1,4})|([a-zA-Z0-9]-?)*[a-zA-Z](-?[a-zA-Z0-9])*$
                                type: string
                              port:
                                description: Port is an L4 port number. The string
                                  will be strictly parsed as a single uint16.
                                pattern: ^()([1-9]|[1-5]?[0-9]{2,4}|6[1-4][0-9]{3}|65[1-4][0-9]{2}|655[1-2][0-9]|6553[1-5])$
                                type: string
                              protocol:
                                description: 'Protocol is the L4 protocol. Accepted
                                  values: "TCP", "UDP"'
                                enum:
                                - TCP
                                - UDP
                                type: string
                            required:
                            - port
                            - protocol
                            type: object
                          type: array
                      required:
                      - namespace
                      - serviceName
                      type: object
                  type: object
              required:
              - redirectBackend
              - redirectFrontend
              type: object
            status:
              description: Status is the most recent status of the local redirect
                policy. It is a read-only field.
              properties:
                ok:
                  description: TODO Define status(aditi)
                  type: object
              type: object
          required:
          - metadata
          type: object
      served: true
      storage: true
      subresources: {}
  status:
    acceptedNames:
      kind: CiliumLocalRedirectPolicy
      listKind: CiliumLocalRedirectPolicyList
      plural: ciliumlocalredirectpolicies
      shortNames:
      - clrp
      singular: ciliumlocalredirectpolicy
    conditions:
    - lastTransitionTime: "2021-12-04T16:58:54Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-04T16:58:54Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v2
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2021-12-04T16:58:56Z"
    generation: 1
    labels:
      io.cilium.k8s.crd.schema.version: 1.23.2
    name: ciliumnetworkpolicies.cilium.io
    resourceVersion: "917"
    uid: a8dfd23e-45f5-4aa6-9cb3-8d31fcd6243f
  spec:
    conversion:
      strategy: None
    group: cilium.io
    names:
      kind: CiliumNetworkPolicy
      listKind: CiliumNetworkPolicyList
      plural: ciliumnetworkpolicies
      shortNames:
      - cnp
      - ciliumnp
      singular: ciliumnetworkpolicy
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v2
      schema:
        openAPIV3Schema:
          description: CiliumNetworkPolicy is a Kubernetes third-party resource with
            an extended version of NetworkPolicy.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec is the desired Cilium specific rule specification.
              oneOf:
              - properties:
                  endpointSelector: {}
                required:
                - endpointSelector
              - properties:
                  nodeSelector: {}
                required:
                - nodeSelector
              properties:
                description:
                  description: Description is a free form string, it can be used by
                    the creator of the rule to store human readable explanation of
                    the purpose of this rule. Rules cannot be identified by comment.
                  type: string
                egress:
                  description: Egress is a list of EgressRule which are enforced at
                    egress. If omitted or empty, this rule does not apply at egress.
                  items:
                    description: "EgressRule contains all rule types which can be
                      applied at egress, i.e. network traffic that originates inside
                      the endpoint and exits the endpoint selected by the endpointSelector.
                      \n - All members of this structure are optional. If omitted
                      or empty, the   member will have no effect on the rule. \n -
                      If multiple members of the structure are specified, then all
                      members   must match in order for the rule to take effect. The
                      exception to this   rule is the ToRequires member; the effects
                      of any Requires field in any   rule will apply to all other
                      rules as well. \n - ToEndpoints, ToCIDR, ToCIDRSet, ToEntities,
                      ToServices and ToGroups are   mutually exclusive. Only one of
                      these members may be present within an   individual rule."
                    properties:
                      toCIDR:
                        description: "ToCIDR is a list of IP blocks which the endpoint
                          subject to the rule is allowed to initiate connections.
                          Only connections destined for outside of the cluster and
                          not targeting the host will be subject to CIDR rules.  This
                          will match on the destination IP address of outgoing connections.
                          Adding a prefix into ToCIDR or into ToCIDRSet with no ExcludeCIDRs
                          is equivalent. Overlaps are allowed between ToCIDR and ToCIDRSet.
                          \n Example: Any endpoint with the label \"app=database-proxy\"
                          is allowed to initiate connections to 10.2.3.0/24"
                        items:
                          description: 'CIDR specifies a block of IP addresses. Example:
                            192.0.2.1/32'
                          pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                          type: string
                        type: array
                      toCIDRSet:
                        description: "ToCIDRSet is a list of IP blocks which the endpoint
                          subject to the rule is allowed to initiate connections to
                          in addition to connections which are allowed via ToEndpoints,
                          along with a list of subnets contained within their corresponding
                          IP block to which traffic should not be allowed. This will
                          match on the destination IP address of outgoing connections.
                          Adding a prefix into ToCIDR or into ToCIDRSet with no ExcludeCIDRs
                          is equivalent. Overlaps are allowed between ToCIDR and ToCIDRSet.
                          \n Example: Any endpoint with the label \"app=database-proxy\"
                          is allowed to initiate connections to 10.2.3.0/24 except
                          from IPs in subnet 10.2.3.0/28."
                        items:
                          description: CIDRRule is a rule that specifies a CIDR prefix
                            to/from which outside communication  is allowed, along
                            with an optional list of subnets within that CIDR prefix
                            to/from which outside communication is not allowed.
                          properties:
                            cidr:
                              description: CIDR is a CIDR prefix / IP Block.
                              pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                              type: string
                            except:
                              description: ExceptCIDRs is a list of IP blocks which
                                the endpoint subject to the rule is not allowed to
                                initiate connections to. These CIDR prefixes should
                                be contained within Cidr. These exceptions are only
                                applied to the Cidr in this CIDRRule, and do not apply
                                to any other CIDR prefixes in any other CIDRRules.
                              items:
                                description: 'CIDR specifies a block of IP addresses.
                                  Example: 192.0.2.1/32'
                                pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                                type: string
                              type: array
                          required:
                          - cidr
                          type: object
                        type: array
                      toEndpoints:
                        description: "ToEndpoints is a list of endpoints identified
                          by an EndpointSelector to which the endpoints subject to
                          the rule are allowed to communicate. \n Example: Any endpoint
                          with the label \"role=frontend\" can communicate with any
                          endpoint carrying the label \"role=backend\"."
                        items:
                          description: EndpointSelector is a wrapper for k8s LabelSelector.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    enum:
                                    - In
                                    - NotIn
                                    - Exists
                                    - DoesNotExist
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                description: MatchLabelsValue represents the value
                                  from the MatchLabels {key,value} pair.
                                maxLength: 63
                                pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        type: array
                      toEntities:
                        description: ToEntities is a list of special entities to which
                          the endpoint subject to the rule is allowed to initiate
                          connections. Supported entities are `world`, `cluster` and
                          `host`
                        items:
                          description: Entity specifies the class of receiver/sender
                            endpoints that do not have individual identities.  Entities
                            are used to describe "outside of cluster", "host", etc.
                          enum:
                          - all
                          - world
                          - cluster
                          - host
                          - init
                          - unmanaged
                          - remote-node
                          - health
                          - none
                          type: string
                        type: array
                      toFQDNs:
                        description: "ToFQDN allows whitelisting DNS names in place
                          of IPs. The IPs that result from DNS resolution of `ToFQDN.MatchName`s
                          are added to the same EgressRule object as ToCIDRSet entries,
                          and behave accordingly. Any L4 and L7 rules within this
                          EgressRule will also apply to these IPs. The DNS -> IP mapping
                          is re-resolved periodically from within the cilium-agent,
                          and the IPs in the DNS response are effected in the policy
                          for selected pods as-is (i.e. the list of IPs is not modified
                          in any way). Note: An explicit rule to allow for DNS traffic
                          is needed for the pods, as ToFQDN counts as an egress rule
                          and will enforce egress policy when PolicyEnforcment=default.
                          Note: If the resolved IPs are IPs within the kubernetes
                          cluster, the ToFQDN rule will not apply to that IP. Note:
                          ToFQDN cannot occur in the same policy as other To* rules.
                          \n The current implementation has a number of limitations:
                          - The DNS resolution originates from cilium-agent, and not
                          from the pods. Differences between the responses seen by
                          cilium agent and a particular pod will whitelist the incorrect
                          IP. - DNS TTLs are ignored, and cilium-agent will repoll
                          on a short interval (5 seconds). Each change to the DNS
                          data will trigger a policy regeneration. This may result
                          in delayed updates to the policy for an endpoint when the
                          data changes often or the system is under load."
                        items:
                          properties:
                            matchName:
                              description: MatchName matches literal DNS names. A
                                trailing "." is automatically added when missing.
                              pattern: ^([-a-zA-Z0-9_]+[.]?)+$
                              type: string
                            matchPattern:
                              description: "MatchPattern allows using wildcards to
                                match DNS names. All wildcards are case insensitive.
                                The wildcards are: - \"*\" matches 0 or more DNS valid
                                characters, and may occur anywhere in the pattern.
                                As a special case a \"*\" as the leftmost character,
                                without a following \".\" matches all subdomains as
                                well as the name to the right. A trailing \".\" is
                                automatically added when missing. \n Examples: `*.cilium.io`
                                matches subomains of cilium at that level   www.cilium.io
                                and blog.cilium.io match, cilium.io and google.com
                                do not `*cilium.io` matches cilium.io and all subdomains
                                1 level below   www.cilium.io, blog.cilium.io and
                                cilium.io match, google.com does not sub*.cilium.io
                                matches subdomains of cilium where the subdomain component
                                begins with \"sub\"   sub.cilium.io and subdomain.cilium.io
                                match, www.cilium.io,   blog.cilium.io, cilium.io
                                and google.com do not"
                              pattern: ^([-a-zA-Z0-9_*]+[.]?)+$
                              type: string
                          type: object
                        type: array
                      toGroups:
                        description: "ToGroups is a directive that allows the integration
                          with multiple outside providers. Currently, only AWS is
                          supported, and the rule can select by multiple sub directives:
                          \n Example: toGroups: - aws:     securityGroupsIds:     -
                          'sg-XXXXXXXXXXXXX'"
                        items:
                          description: ToGroups structure to store all kinds of new
                            integrations that needs a new derivative policy.
                          properties:
                            aws:
                              description: AWSGroup is an structure that can be used
                                to whitelisting information from AWS integration
                              properties:
                                labels:
                                  additionalProperties:
                                    type: string
                                  type: object
                                region:
                                  type: string
                                securityGroupsIds:
                                  items:
                                    type: string
                                  type: array
                                securityGroupsNames:
                                  items:
                                    type: string
                                  type: array
                              type: object
                          type: object
                        type: array
                      toPorts:
                        description: "ToPorts is a list of destination ports identified
                          by port number and protocol which the endpoint subject to
                          the rule is allowed to connect to. \n Example: Any endpoint
                          with the label \"role=frontend\" is allowed to initiate
                          connections to destination port 8080/tcp"
                        items:
                          description: PortRule is a list of ports/protocol combinations
                            with optional Layer 7 rules which must be met.
                          properties:
                            originatingTLS:
                              description: OriginatingTLS is the TLS context for the
                                connections originated by the L7 proxy.  For egress
                                policy this specifies the client-side TLS parameters
                                for the upstream connection originating from the L7
                                proxy to the remote destination. For ingress policy
                                this specifies the client-side TLS parameters for
                                the connection from the L7 proxy to the local endpoint.
                              properties:
                                certificate:
                                  description: Certificate is the file name or k8s
                                    secret item name for the certificate chain. If
                                    omitted, 'tls.crt' is assumed, if it exists. If
                                    given, the item must exist.
                                  type: string
                                privateKey:
                                  description: PrivateKey is the file name or k8s
                                    secret item name for the private key matching
                                    the certificate chain. If omitted, 'tls.key' is
                                    assumed, if it exists. If given, the item must
                                    exist.
                                  type: string
                                secret:
                                  description: 'Secret is the secret that contains
                                    the certificates and private key for the TLS context.
                                    By default, Cilium will search in this secret
                                    for the following items:  - ''ca.crt''  - Which
                                    represents the trusted CA to verify remote source.  -
                                    ''tls.crt'' - Which represents the public key
                                    certificate.  - ''tls.key'' - Which represents
                                    the private key matching the public key                certificate.'
                                  properties:
                                    name:
                                      description: Name is the name of the secret.
                                      type: string
                                    namespace:
                                      description: Namespace is the namespace in which
                                        the secret exists. Context of use determines
                                        the default value if left out (e.g., "default").
                                      type: string
                                  required:
                                  - name
                                  type: object
                                trustedCA:
                                  description: TrustedCA is the file name or k8s secret
                                    item name for the trusted CA. If omitted, 'ca.crt'
                                    is assumed, if it exists. If given, the item must
                                    exist.
                                  type: string
                              required:
                              - secret
                              type: object
                            ports:
                              description: Ports is a list of L4 port/protocol
                              items:
                                description: PortProtocol specifies an L4 port with
                                  an optional transport protocol
                                properties:
                                  port:
                                    description: Port is an L4 port number. For now
                                      the string will be strictly parsed as a single
                                      uint16. In the future, this field may support
                                      ranges in the form "1024-2048 Port can also
                                      be a port name, which must contain at least
                                      one [a-z], and may also contain [0-9] and '-'
                                      anywhere except adjacent to another '-' or in
                                      the beginning or the end.
                                    pattern: ^(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[0-9]{1,4})|([a-zA-Z0-9]-?)*[a-zA-Z](-?[a-zA-Z0-9])*$
                                    type: string
                                  protocol:
                                    description: "Protocol is the L4 protocol. If
                                      omitted or empty, any protocol matches. Accepted
                                      values: \"TCP\", \"UDP\", \"\"/\"ANY\" \n Matching
                                      on ICMP is not supported. \n Named port specified
                                      for a container may narrow this down, but may
                                      not contradict this."
                                    enum:
                                    - TCP
                                    - UDP
                                    - ANY
                                    type: string
                                required:
                                - port
                                type: object
                              type: array
                            rules:
                              description: Rules is a list of additional port level
                                rules which must be met in order for the PortRule
                                to allow the traffic. If omitted or empty, no layer
                                7 rules are enforced.
                              properties:
                                dns:
                                  description: DNS-specific rules.
                                  items:
                                    description: PortRuleDNS is a list of allowed
                                      DNS lookups.
                                    properties:
                                      matchName:
                                        description: MatchName matches literal DNS
                                          names. A trailing "." is automatically added
                                          when missing.
                                        pattern: ^([-a-zA-Z0-9_]+[.]?)+$
                                        type: string
                                      matchPattern:
                                        description: "MatchPattern allows using wildcards
                                          to match DNS names. All wildcards are case
                                          insensitive. The wildcards are: - \"*\"
                                          matches 0 or more DNS valid characters,
                                          and may occur anywhere in the pattern. As
                                          a special case a \"*\" as the leftmost character,
                                          without a following \".\" matches all subdomains
                                          as well as the name to the right. A trailing
                                          \".\" is automatically added when missing.
                                          \n Examples: `*.cilium.io` matches subomains
                                          of cilium at that level   www.cilium.io
                                          and blog.cilium.io match, cilium.io and
                                          google.com do not `*cilium.io` matches cilium.io
                                          and all subdomains 1 level below   www.cilium.io,
                                          blog.cilium.io and cilium.io match, google.com
                                          does not sub*.cilium.io matches subdomains
                                          of cilium where the subdomain component
                                          begins with \"sub\"   sub.cilium.io and
                                          subdomain.cilium.io match, www.cilium.io,
                                          \  blog.cilium.io, cilium.io and google.com
                                          do not"
                                        pattern: ^([-a-zA-Z0-9_*]+[.]?)+$
                                        type: string
                                    type: object
                                  type: array
                                http:
                                  description: HTTP specific rules.
                                  items:
                                    description: "PortRuleHTTP is a list of HTTP protocol
                                      constraints. All fields are optional, if all
                                      fields are empty or missing, the rule does not
                                      have any effect. \n All fields of this type
                                      are extended POSIX regex as defined by IEEE
                                      Std 1003.1, (i.e this follows the egrep/unix
                                      syntax, not the perl syntax) matched against
                                      the path of an incoming request. Currently it
                                      can contain characters disallowed from the conventional
                                      \"path\" part of a URL as defined by RFC 3986."
                                    properties:
                                      headerMatches:
                                        description: HeaderMatches is a list of HTTP
                                          headers which must be present and match
                                          against the given values. Mismatch field
                                          can be used to specify what to do when there
                                          is no match.
                                        items:
                                          description: HeaderMatch extends the HeaderValue
                                            for matching requirement of a named header
                                            field against an immediate string, a secret
                                            value, or a regex.  If none of the optional
                                            fields is present, then the header value
                                            is not matched, only presence of the header
                                            is enough.
                                          properties:
                                            mismatch:
                                              description: Mismatch identifies what
                                                to do in case there is no match. The
                                                default is to drop the request. Otherwise
                                                the overall rule is still considered
                                                as matching, but the mismatches are
                                                logged in the access log.
                                              enum:
                                              - LOG
                                              - ADD
                                              - DELETE
                                              - REPLACE
                                              type: string
                                            name:
                                              description: Name identifies the header.
                                              type: string
                                            secret:
                                              description: Secret refers to a secret
                                                that contains the value to be matched
                                                against. The secret must only contain
                                                one entry. If the referred secret
                                                does not exist, and there is no "Value"
                                                specified, the match will fail.
                                              properties:
                                                name:
                                                  description: Name is the name of
                                                    the secret.
                                                  type: string
                                                namespace:
                                                  description: Namespace is the namespace
                                                    in which the secret exists. Context
                                                    of use determines the default
                                                    value if left out (e.g., "default").
                                                  type: string
                                              required:
                                              - name
                                              type: object
                                            value:
                                              description: Value matches the exact
                                                value of the header. Can be specified
                                                either alone or together with "Secret";
                                                will be used as the header value if
                                                the secret can not be found in the
                                                latter case.
                                              type: string
                                          required:
                                          - name
                                          type: object
                                        type: array
                                      headers:
                                        description: Headers is a list of HTTP headers
                                          which must be present in the request. If
                                          omitted or empty, requests are allowed regardless
                                          of headers present.
                                        items:
                                          type: string
                                        type: array
                                      host:
                                        description: "Host is an extended POSIX regex
                                          matched against the host header of a request,
                                          e.g. \"foo.com\" \n If omitted or empty,
                                          the value of the host header is ignored."
                                        format: idn-hostname
                                        type: string
                                      method:
                                        description: "Method is an extended POSIX
                                          regex matched against the method of a request,
                                          e.g. \"GET\", \"POST\", \"PUT\", \"PATCH\",
                                          \"DELETE\", ... \n If omitted or empty,
                                          all methods are allowed."
                                        type: string
                                      path:
                                        description: "Path is an extended POSIX regex
                                          matched against the path of a request. Currently
                                          it can contain characters disallowed from
                                          the conventional \"path\" part of a URL
                                          as defined by RFC 3986. \n If omitted or
                                          empty, all paths are all allowed."
                                        type: string
                                    type: object
                                  type: array
                                kafka:
                                  description: Kafka-specific rules.
                                  items:
                                    description: PortRule is a list of Kafka protocol
                                      constraints. All fields are optional, if all
                                      fields are empty or missing, the rule will match
                                      all Kafka messages.
                                    properties:
                                      apiKey:
                                        description: "APIKey is a case-insensitive
                                          string matched against the key of a request,
                                          e.g. \"produce\", \"fetch\", \"createtopic\",
                                          \"deletetopic\", et al Reference: https://kafka.apache.org/protocol#protocol_api_keys
                                          \n If omitted or empty, and if Role is not
                                          specified, then all keys are allowed."
                                        type: string
                                      apiVersion:
                                        description: "APIVersion is the version matched
                                          against the api version of the Kafka message.
                                          If set, it has to be a string representing
                                          a positive integer. \n If omitted or empty,
                                          all versions are allowed."
                                        type: string
                                      clientID:
                                        description: "ClientID is the client identifier
                                          as provided in the request. \n From Kafka
                                          protocol documentation: This is a user supplied
                                          identifier for the client application. The
                                          user can use any identifier they like and
                                          it will be used when logging errors, monitoring
                                          aggregates, etc. For example, one might
                                          want to monitor not just the requests per
                                          second overall, but the number coming from
                                          each client application (each of which could
                                          reside on multiple servers). This id acts
                                          as a logical grouping across all requests
                                          from a particular client. \n If omitted
                                          or empty, all client identifiers are allowed."
                                        type: string
                                      role:
                                        description: "Role is a case-insensitive string
                                          and describes a group of API keys necessary
                                          to perform certain higher-level Kafka operations
                                          such as \"produce\" or \"consume\". A Role
                                          automatically expands into all APIKeys required
                                          to perform the specified higher-level operation.
                                          \n The following values are supported:  -
                                          \"produce\": Allow producing to the topics
                                          specified in the rule  - \"consume\": Allow
                                          consuming from the topics specified in the
                                          rule \n This field is incompatible with
                                          the APIKey field, i.e APIKey and Role cannot
                                          both be specified in the same rule. \n If
                                          omitted or empty, and if APIKey is not specified,
                                          then all keys are allowed."
                                        enum:
                                        - produce
                                        - consume
                                        type: string
                                      topic:
                                        description: "Topic is the topic name contained
                                          in the message. If a Kafka request contains
                                          multiple topics, then all topics must be
                                          allowed or the message will be rejected.
                                          \n This constraint is ignored if the matched
                                          request message type doesn't contain any
                                          topic. Maximum size of Topic can be 249
                                          characters as per recent Kafka spec and
                                          allowed characters are a-z, A-Z, 0-9, -,
                                          . and _. \n Older Kafka versions had longer
                                          topic lengths of 255, but in Kafka 0.10
                                          version the length was changed from 255
                                          to 249. For compatibility reasons we are
                                          using 255. \n If omitted or empty, all topics
                                          are allowed."
                                        maxLength: 255
                                        type: string
                                    type: object
                                  type: array
                                l7:
                                  description: Key-value pair rules.
                                  items:
                                    additionalProperties:
                                      type: string
                                    description: PortRuleL7 is a list of key-value
                                      pairs interpreted by a L7 protocol as protocol
                                      constraints. All fields are optional, if all
                                      fields are empty or missing, the rule does not
                                      have any effect.
                                    type: object
                                  type: array
                                l7proto:
                                  description: Name of the L7 protocol for which the
                                    Key-value pair rules apply.
                                  type: string
                              type: object
                            terminatingTLS:
                              description: TerminatingTLS is the TLS context for the
                                connection terminated by the L7 proxy.  For egress
                                policy this specifies the server-side TLS parameters
                                to be applied on the connections originated from the
                                local endpoint and terminated by the L7 proxy. For
                                ingress policy this specifies the server-side TLS
                                parameters to be applied on the connections originated
                                from a remote source and terminated by the L7 proxy.
                              properties:
                                certificate:
                                  description: Certificate is the file name or k8s
                                    secret item name for the certificate chain. If
                                    omitted, 'tls.crt' is assumed, if it exists. If
                                    given, the item must exist.
                                  type: string
                                privateKey:
                                  description: PrivateKey is the file name or k8s
                                    secret item name for the private key matching
                                    the certificate chain. If omitted, 'tls.key' is
                                    assumed, if it exists. If given, the item must
                                    exist.
                                  type: string
                                secret:
                                  description: 'Secret is the secret that contains
                                    the certificates and private key for the TLS context.
                                    By default, Cilium will search in this secret
                                    for the following items:  - ''ca.crt''  - Which
                                    represents the trusted CA to verify remote source.  -
                                    ''tls.crt'' - Which represents the public key
                                    certificate.  - ''tls.key'' - Which represents
                                    the private key matching the public key                certificate.'
                                  properties:
                                    name:
                                      description: Name is the name of the secret.
                                      type: string
                                    namespace:
                                      description: Namespace is the namespace in which
                                        the secret exists. Context of use determines
                                        the default value if left out (e.g., "default").
                                      type: string
                                  required:
                                  - name
                                  type: object
                                trustedCA:
                                  description: TrustedCA is the file name or k8s secret
                                    item name for the trusted CA. If omitted, 'ca.crt'
                                    is assumed, if it exists. If given, the item must
                                    exist.
                                  type: string
                              required:
                              - secret
                              type: object
                          type: object
                        type: array
                      toRequires:
                        description: "ToRequires is a list of additional constraints
                          which must be met in order for the selected endpoints to
                          be able to connect to other endpoints. These additional
                          constraints do no by itself grant access privileges and
                          must always be accompanied with at least one matching ToEndpoints.
                          \n Example: Any Endpoint with the label \"team=A\" requires
                          any endpoint to which it communicates to also carry the
                          label \"team=A\"."
                        items:
                          description: EndpointSelector is a wrapper for k8s LabelSelector.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    enum:
                                    - In
                                    - NotIn
                                    - Exists
                                    - DoesNotExist
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                description: MatchLabelsValue represents the value
                                  from the MatchLabels {key,value} pair.
                                maxLength: 63
                                pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        type: array
                      toServices:
                        description: "ToServices is a list of services to which the
                          endpoint subject to the rule is allowed to initiate connections.
                          Currently Cilium only supports toServices for K8s services
                          without selectors. \n Example: Any endpoint with the label
                          \"app=backend-app\" is allowed to initiate connections to
                          all cidrs backing the \"external-service\" service"
                        items:
                          description: Service wraps around selectors for services
                          properties:
                            k8sService:
                              description: K8sService selects service by name and
                                namespace pair
                              properties:
                                namespace:
                                  type: string
                                serviceName:
                                  type: string
                              type: object
                            k8sServiceSelector:
                              description: K8sServiceSelector selects services by
                                k8s labels and namespace
                              properties:
                                namespace:
                                  type: string
                                selector:
                                  description: ServiceSelector is a label selector
                                    for k8s services
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            enum:
                                            - In
                                            - NotIn
                                            - Exists
                                            - DoesNotExist
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        description: MatchLabelsValue represents the
                                          value from the MatchLabels {key,value} pair.
                                        maxLength: 63
                                        pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                              required:
                              - selector
                              type: object
                          type: object
                        type: array
                    type: object
                  type: array
                egressDeny:
                  description: EgressDeny is a list of EgressDenyRule which are enforced
                    at egress. Any rule inserted here will by denied regardless of
                    the allowed egress rules in the 'egress' field. If omitted or
                    empty, this rule does not apply at egress.
                  items:
                    description: "EgressDenyRule contains all rule types which can
                      be applied at egress, i.e. network traffic that originates inside
                      the endpoint and exits the endpoint selected by the endpointSelector.
                      \n - All members of this structure are optional. If omitted
                      or empty, the   member will have no effect on the rule. \n -
                      If multiple members of the structure are specified, then all
                      members   must match in order for the rule to take effect. The
                      exception to this   rule is the ToRequires member; the effects
                      of any Requires field in any   rule will apply to all other
                      rules as well. \n - ToEndpoints, ToCIDR, ToCIDRSet, ToEntities,
                      ToServices and ToGroups are   mutually exclusive. Only one of
                      these members may be present within an   individual rule."
                    properties:
                      toCIDR:
                        description: "ToCIDR is a list of IP blocks which the endpoint
                          subject to the rule is allowed to initiate connections.
                          Only connections destined for outside of the cluster and
                          not targeting the host will be subject to CIDR rules.  This
                          will match on the destination IP address of outgoing connections.
                          Adding a prefix into ToCIDR or into ToCIDRSet with no ExcludeCIDRs
                          is equivalent. Overlaps are allowed between ToCIDR and ToCIDRSet.
                          \n Example: Any endpoint with the label \"app=database-proxy\"
                          is allowed to initiate connections to 10.2.3.0/24"
                        items:
                          description: 'CIDR specifies a block of IP addresses. Example:
                            192.0.2.1/32'
                          pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                          type: string
                        type: array
                      toCIDRSet:
                        description: "ToCIDRSet is a list of IP blocks which the endpoint
                          subject to the rule is allowed to initiate connections to
                          in addition to connections which are allowed via ToEndpoints,
                          along with a list of subnets contained within their corresponding
                          IP block to which traffic should not be allowed. This will
                          match on the destination IP address of outgoing connections.
                          Adding a prefix into ToCIDR or into ToCIDRSet with no ExcludeCIDRs
                          is equivalent. Overlaps are allowed between ToCIDR and ToCIDRSet.
                          \n Example: Any endpoint with the label \"app=database-proxy\"
                          is allowed to initiate connections to 10.2.3.0/24 except
                          from IPs in subnet 10.2.3.0/28."
                        items:
                          description: CIDRRule is a rule that specifies a CIDR prefix
                            to/from which outside communication  is allowed, along
                            with an optional list of subnets within that CIDR prefix
                            to/from which outside communication is not allowed.
                          properties:
                            cidr:
                              description: CIDR is a CIDR prefix / IP Block.
                              pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                              type: string
                            except:
                              description: ExceptCIDRs is a list of IP blocks which
                                the endpoint subject to the rule is not allowed to
                                initiate connections to. These CIDR prefixes should
                                be contained within Cidr. These exceptions are only
                                applied to the Cidr in this CIDRRule, and do not apply
                                to any other CIDR prefixes in any other CIDRRules.
                              items:
                                description: 'CIDR specifies a block of IP addresses.
                                  Example: 192.0.2.1/32'
                                pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                                type: string
                              type: array
                          required:
                          - cidr
                          type: object
                        type: array
                      toEndpoints:
                        description: "ToEndpoints is a list of endpoints identified
                          by an EndpointSelector to which the endpoints subject to
                          the rule are allowed to communicate. \n Example: Any endpoint
                          with the label \"role=frontend\" can communicate with any
                          endpoint carrying the label \"role=backend\"."
                        items:
                          description: EndpointSelector is a wrapper for k8s LabelSelector.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    enum:
                                    - In
                                    - NotIn
                                    - Exists
                                    - DoesNotExist
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                description: MatchLabelsValue represents the value
                                  from the MatchLabels {key,value} pair.
                                maxLength: 63
                                pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        type: array
                      toEntities:
                        description: ToEntities is a list of special entities to which
                          the endpoint subject to the rule is allowed to initiate
                          connections. Supported entities are `world`, `cluster` and
                          `host`
                        items:
                          description: Entity specifies the class of receiver/sender
                            endpoints that do not have individual identities.  Entities
                            are used to describe "outside of cluster", "host", etc.
                          enum:
                          - all
                          - world
                          - cluster
                          - host
                          - init
                          - unmanaged
                          - remote-node
                          - health
                          - none
                          type: string
                        type: array
                      toGroups:
                        description: "ToGroups is a directive that allows the integration
                          with multiple outside providers. Currently, only AWS is
                          supported, and the rule can select by multiple sub directives:
                          \n Example: toGroups: - aws:     securityGroupsIds:     -
                          'sg-XXXXXXXXXXXXX'"
                        items:
                          description: ToGroups structure to store all kinds of new
                            integrations that needs a new derivative policy.
                          properties:
                            aws:
                              description: AWSGroup is an structure that can be used
                                to whitelisting information from AWS integration
                              properties:
                                labels:
                                  additionalProperties:
                                    type: string
                                  type: object
                                region:
                                  type: string
                                securityGroupsIds:
                                  items:
                                    type: string
                                  type: array
                                securityGroupsNames:
                                  items:
                                    type: string
                                  type: array
                              type: object
                          type: object
                        type: array
                      toPorts:
                        description: "ToPorts is a list of destination ports identified
                          by port number and protocol which the endpoint subject to
                          the rule is not allowed to connect to. \n Example: Any endpoint
                          with the label \"role=frontend\" is not allowed to initiate
                          connections to destination port 8080/tcp"
                        items:
                          description: PortDenyRule is a list of ports/protocol that
                            should be used for deny policies. This structure lacks
                            the L7Rules since it's not supported in deny policies.
                          properties:
                            ports:
                              description: Ports is a list of L4 port/protocol
                              items:
                                description: PortProtocol specifies an L4 port with
                                  an optional transport protocol
                                properties:
                                  port:
                                    description: Port is an L4 port number. For now
                                      the string will be strictly parsed as a single
                                      uint16. In the future, this field may support
                                      ranges in the form "1024-2048 Port can also
                                      be a port name, which must contain at least
                                      one [a-z], and may also contain [0-9] and '-'
                                      anywhere except adjacent to another '-' or in
                                      the beginning or the end.
                                    pattern: ^(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[0-9]{1,4})|([a-zA-Z0-9]-?)*[a-zA-Z](-?[a-zA-Z0-9])*$
                                    type: string
                                  protocol:
                                    description: "Protocol is the L4 protocol. If
                                      omitted or empty, any protocol matches. Accepted
                                      values: \"TCP\", \"UDP\", \"\"/\"ANY\" \n Matching
                                      on ICMP is not supported. \n Named port specified
                                      for a container may narrow this down, but may
                                      not contradict this."
                                    enum:
                                    - TCP
                                    - UDP
                                    - ANY
                                    type: string
                                required:
                                - port
                                type: object
                              type: array
                          type: object
                        type: array
                      toRequires:
                        description: "ToRequires is a list of additional constraints
                          which must be met in order for the selected endpoints to
                          be able to connect to other endpoints. These additional
                          constraints do no by itself grant access privileges and
                          must always be accompanied with at least one matching ToEndpoints.
                          \n Example: Any Endpoint with the label \"team=A\" requires
                          any endpoint to which it communicates to also carry the
                          label \"team=A\"."
                        items:
                          description: EndpointSelector is a wrapper for k8s LabelSelector.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    enum:
                                    - In
                                    - NotIn
                                    - Exists
                                    - DoesNotExist
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                description: MatchLabelsValue represents the value
                                  from the MatchLabels {key,value} pair.
                                maxLength: 63
                                pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        type: array
                      toServices:
                        description: "ToServices is a list of services to which the
                          endpoint subject to the rule is allowed to initiate connections.
                          Currently Cilium only supports toServices for K8s services
                          without selectors. \n Example: Any endpoint with the label
                          \"app=backend-app\" is allowed to initiate connections to
                          all cidrs backing the \"external-service\" service"
                        items:
                          description: Service wraps around selectors for services
                          properties:
                            k8sService:
                              description: K8sService selects service by name and
                                namespace pair
                              properties:
                                namespace:
                                  type: string
                                serviceName:
                                  type: string
                              type: object
                            k8sServiceSelector:
                              description: K8sServiceSelector selects services by
                                k8s labels and namespace
                              properties:
                                namespace:
                                  type: string
                                selector:
                                  description: ServiceSelector is a label selector
                                    for k8s services
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            enum:
                                            - In
                                            - NotIn
                                            - Exists
                                            - DoesNotExist
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        description: MatchLabelsValue represents the
                                          value from the MatchLabels {key,value} pair.
                                        maxLength: 63
                                        pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                              required:
                              - selector
                              type: object
                          type: object
                        type: array
                    type: object
                  type: array
                endpointSelector:
                  description: EndpointSelector selects all endpoints which should
                    be subject to this rule. EndpointSelector and NodeSelector cannot
                    be both empty and are mutually exclusive.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            enum:
                            - In
                            - NotIn
                            - Exists
                            - DoesNotExist
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        description: MatchLabelsValue represents the value from the
                          MatchLabels {key,value} pair.
                        maxLength: 63
                        pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                ingress:
                  description: Ingress is a list of IngressRule which are enforced
                    at ingress. If omitted or empty, this rule does not apply at ingress.
                  items:
                    description: "IngressRule contains all rule types which can be
                      applied at ingress, i.e. network traffic that originates outside
                      of the endpoint and is entering the endpoint selected by the
                      endpointSelector. \n - All members of this structure are optional.
                      If omitted or empty, the   member will have no effect on the
                      rule. \n - If multiple members are set, all of them need to
                      match in order for   the rule to take effect. The exception
                      to this rule is FromRequires field;   the effects of any Requires
                      field in any rule will apply to all other   rules as well. \n
                      - FromEndpoints, FromCIDR, FromCIDRSet and FromEntities are
                      mutually   exclusive. Only one of these members may be present
                      within an individual   rule."
                    properties:
                      fromCIDR:
                        description: "FromCIDR is a list of IP blocks which the endpoint
                          subject to the rule is allowed to receive connections from.
                          Only connections which do *not* originate from the cluster
                          or from the local host are subject to CIDR rules. In order
                          to allow in-cluster connectivity, use the FromEndpoints
                          field.  This will match on the source IP address of incoming
                          connections. Adding  a prefix into FromCIDR or into FromCIDRSet
                          with no ExcludeCIDRs is  equivalent.  Overlaps are allowed
                          between FromCIDR and FromCIDRSet. \n Example: Any endpoint
                          with the label \"app=my-legacy-pet\" is allowed to receive
                          connections from 10.3.9.1"
                        items:
                          description: 'CIDR specifies a block of IP addresses. Example:
                            192.0.2.1/32'
                          pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                          type: string
                        type: array
                      fromCIDRSet:
                        description: "FromCIDRSet is a list of IP blocks which the
                          endpoint subject to the rule is allowed to receive connections
                          from in addition to FromEndpoints, along with a list of
                          subnets contained within their corresponding IP block from
                          which traffic should not be allowed. This will match on
                          the source IP address of incoming connections. Adding a
                          prefix into FromCIDR or into FromCIDRSet with no ExcludeCIDRs
                          is equivalent. Overlaps are allowed between FromCIDR and
                          FromCIDRSet. \n Example: Any endpoint with the label \"app=my-legacy-pet\"
                          is allowed to receive connections from 10.0.0.0/8 except
                          from IPs in subnet 10.96.0.0/12."
                        items:
                          description: CIDRRule is a rule that specifies a CIDR prefix
                            to/from which outside communication  is allowed, along
                            with an optional list of subnets within that CIDR prefix
                            to/from which outside communication is not allowed.
                          properties:
                            cidr:
                              description: CIDR is a CIDR prefix / IP Block.
                              pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                              type: string
                            except:
                              description: ExceptCIDRs is a list of IP blocks which
                                the endpoint subject to the rule is not allowed to
                                initiate connections to. These CIDR prefixes should
                                be contained within Cidr. These exceptions are only
                                applied to the Cidr in this CIDRRule, and do not apply
                                to any other CIDR prefixes in any other CIDRRules.
                              items:
                                description: 'CIDR specifies a block of IP addresses.
                                  Example: 192.0.2.1/32'
                                pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                                type: string
                              type: array
                          required:
                          - cidr
                          type: object
                        type: array
                      fromEndpoints:
                        description: "FromEndpoints is a list of endpoints identified
                          by an EndpointSelector which are allowed to communicate
                          with the endpoint subject to the rule. \n Example: Any endpoint
                          with the label \"role=backend\" can be consumed by any endpoint
                          carrying the label \"role=frontend\"."
                        items:
                          description: EndpointSelector is a wrapper for k8s LabelSelector.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    enum:
                                    - In
                                    - NotIn
                                    - Exists
                                    - DoesNotExist
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                description: MatchLabelsValue represents the value
                                  from the MatchLabels {key,value} pair.
                                maxLength: 63
                                pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        type: array
                      fromEntities:
                        description: FromEntities is a list of special entities which
                          the endpoint subject to the rule is allowed to receive connections
                          from. Supported entities are `world`, `cluster` and `host`
                        items:
                          description: Entity specifies the class of receiver/sender
                            endpoints that do not have individual identities.  Entities
                            are used to describe "outside of cluster", "host", etc.
                          enum:
                          - all
                          - world
                          - cluster
                          - host
                          - init
                          - unmanaged
                          - remote-node
                          - health
                          - none
                          type: string
                        type: array
                      fromRequires:
                        description: "FromRequires is a list of additional constraints
                          which must be met in order for the selected endpoints to
                          be reachable. These additional constraints do no by itself
                          grant access privileges and must always be accompanied with
                          at least one matching FromEndpoints. \n Example: Any Endpoint
                          with the label \"team=A\" requires consuming endpoint to
                          also carry the label \"team=A\"."
                        items:
                          description: EndpointSelector is a wrapper for k8s LabelSelector.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    enum:
                                    - In
                                    - NotIn
                                    - Exists
                                    - DoesNotExist
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                description: MatchLabelsValue represents the value
                                  from the MatchLabels {key,value} pair.
                                maxLength: 63
                                pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        type: array
                      toPorts:
                        description: "ToPorts is a list of destination ports identified
                          by port number and protocol which the endpoint subject to
                          the rule is allowed to receive connections on. \n Example:
                          Any endpoint with the label \"app=httpd\" can only accept
                          incoming connections on port 80/tcp."
                        items:
                          description: PortRule is a list of ports/protocol combinations
                            with optional Layer 7 rules which must be met.
                          properties:
                            originatingTLS:
                              description: OriginatingTLS is the TLS context for the
                                connections originated by the L7 proxy.  For egress
                                policy this specifies the client-side TLS parameters
                                for the upstream connection originating from the L7
                                proxy to the remote destination. For ingress policy
                                this specifies the client-side TLS parameters for
                                the connection from the L7 proxy to the local endpoint.
                              properties:
                                certificate:
                                  description: Certificate is the file name or k8s
                                    secret item name for the certificate chain. If
                                    omitted, 'tls.crt' is assumed, if it exists. If
                                    given, the item must exist.
                                  type: string
                                privateKey:
                                  description: PrivateKey is the file name or k8s
                                    secret item name for the private key matching
                                    the certificate chain. If omitted, 'tls.key' is
                                    assumed, if it exists. If given, the item must
                                    exist.
                                  type: string
                                secret:
                                  description: 'Secret is the secret that contains
                                    the certificates and private key for the TLS context.
                                    By default, Cilium will search in this secret
                                    for the following items:  - ''ca.crt''  - Which
                                    represents the trusted CA to verify remote source.  -
                                    ''tls.crt'' - Which represents the public key
                                    certificate.  - ''tls.key'' - Which represents
                                    the private key matching the public key                certificate.'
                                  properties:
                                    name:
                                      description: Name is the name of the secret.
                                      type: string
                                    namespace:
                                      description: Namespace is the namespace in which
                                        the secret exists. Context of use determines
                                        the default value if left out (e.g., "default").
                                      type: string
                                  required:
                                  - name
                                  type: object
                                trustedCA:
                                  description: TrustedCA is the file name or k8s secret
                                    item name for the trusted CA. If omitted, 'ca.crt'
                                    is assumed, if it exists. If given, the item must
                                    exist.
                                  type: string
                              required:
                              - secret
                              type: object
                            ports:
                              description: Ports is a list of L4 port/protocol
                              items:
                                description: PortProtocol specifies an L4 port with
                                  an optional transport protocol
                                properties:
                                  port:
                                    description: Port is an L4 port number. For now
                                      the string will be strictly parsed as a single
                                      uint16. In the future, this field may support
                                      ranges in the form "1024-2048 Port can also
                                      be a port name, which must contain at least
                                      one [a-z], and may also contain [0-9] and '-'
                                      anywhere except adjacent to another '-' or in
                                      the beginning or the end.
                                    pattern: ^(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[0-9]{1,4})|([a-zA-Z0-9]-?)*[a-zA-Z](-?[a-zA-Z0-9])*$
                                    type: string
                                  protocol:
                                    description: "Protocol is the L4 protocol. If
                                      omitted or empty, any protocol matches. Accepted
                                      values: \"TCP\", \"UDP\", \"\"/\"ANY\" \n Matching
                                      on ICMP is not supported. \n Named port specified
                                      for a container may narrow this down, but may
                                      not contradict this."
                                    enum:
                                    - TCP
                                    - UDP
                                    - ANY
                                    type: string
                                required:
                                - port
                                type: object
                              type: array
                            rules:
                              description: Rules is a list of additional port level
                                rules which must be met in order for the PortRule
                                to allow the traffic. If omitted or empty, no layer
                                7 rules are enforced.
                              properties:
                                dns:
                                  description: DNS-specific rules.
                                  items:
                                    description: PortRuleDNS is a list of allowed
                                      DNS lookups.
                                    properties:
                                      matchName:
                                        description: MatchName matches literal DNS
                                          names. A trailing "." is automatically added
                                          when missing.
                                        pattern: ^([-a-zA-Z0-9_]+[.]?)+$
                                        type: string
                                      matchPattern:
                                        description: "MatchPattern allows using wildcards
                                          to match DNS names. All wildcards are case
                                          insensitive. The wildcards are: - \"*\"
                                          matches 0 or more DNS valid characters,
                                          and may occur anywhere in the pattern. As
                                          a special case a \"*\" as the leftmost character,
                                          without a following \".\" matches all subdomains
                                          as well as the name to the right. A trailing
                                          \".\" is automatically added when missing.
                                          \n Examples: `*.cilium.io` matches subomains
                                          of cilium at that level   www.cilium.io
                                          and blog.cilium.io match, cilium.io and
                                          google.com do not `*cilium.io` matches cilium.io
                                          and all subdomains 1 level below   www.cilium.io,
                                          blog.cilium.io and cilium.io match, google.com
                                          does not sub*.cilium.io matches subdomains
                                          of cilium where the subdomain component
                                          begins with \"sub\"   sub.cilium.io and
                                          subdomain.cilium.io match, www.cilium.io,
                                          \  blog.cilium.io, cilium.io and google.com
                                          do not"
                                        pattern: ^([-a-zA-Z0-9_*]+[.]?)+$
                                        type: string
                                    type: object
                                  type: array
                                http:
                                  description: HTTP specific rules.
                                  items:
                                    description: "PortRuleHTTP is a list of HTTP protocol
                                      constraints. All fields are optional, if all
                                      fields are empty or missing, the rule does not
                                      have any effect. \n All fields of this type
                                      are extended POSIX regex as defined by IEEE
                                      Std 1003.1, (i.e this follows the egrep/unix
                                      syntax, not the perl syntax) matched against
                                      the path of an incoming request. Currently it
                                      can contain characters disallowed from the conventional
                                      \"path\" part of a URL as defined by RFC 3986."
                                    properties:
                                      headerMatches:
                                        description: HeaderMatches is a list of HTTP
                                          headers which must be present and match
                                          against the given values. Mismatch field
                                          can be used to specify what to do when there
                                          is no match.
                                        items:
                                          description: HeaderMatch extends the HeaderValue
                                            for matching requirement of a named header
                                            field against an immediate string, a secret
                                            value, or a regex.  If none of the optional
                                            fields is present, then the header value
                                            is not matched, only presence of the header
                                            is enough.
                                          properties:
                                            mismatch:
                                              description: Mismatch identifies what
                                                to do in case there is no match. The
                                                default is to drop the request. Otherwise
                                                the overall rule is still considered
                                                as matching, but the mismatches are
                                                logged in the access log.
                                              enum:
                                              - LOG
                                              - ADD
                                              - DELETE
                                              - REPLACE
                                              type: string
                                            name:
                                              description: Name identifies the header.
                                              type: string
                                            secret:
                                              description: Secret refers to a secret
                                                that contains the value to be matched
                                                against. The secret must only contain
                                                one entry. If the referred secret
                                                does not exist, and there is no "Value"
                                                specified, the match will fail.
                                              properties:
                                                name:
                                                  description: Name is the name of
                                                    the secret.
                                                  type: string
                                                namespace:
                                                  description: Namespace is the namespace
                                                    in which the secret exists. Context
                                                    of use determines the default
                                                    value if left out (e.g., "default").
                                                  type: string
                                              required:
                                              - name
                                              type: object
                                            value:
                                              description: Value matches the exact
                                                value of the header. Can be specified
                                                either alone or together with "Secret";
                                                will be used as the header value if
                                                the secret can not be found in the
                                                latter case.
                                              type: string
                                          required:
                                          - name
                                          type: object
                                        type: array
                                      headers:
                                        description: Headers is a list of HTTP headers
                                          which must be present in the request. If
                                          omitted or empty, requests are allowed regardless
                                          of headers present.
                                        items:
                                          type: string
                                        type: array
                                      host:
                                        description: "Host is an extended POSIX regex
                                          matched against the host header of a request,
                                          e.g. \"foo.com\" \n If omitted or empty,
                                          the value of the host header is ignored."
                                        format: idn-hostname
                                        type: string
                                      method:
                                        description: "Method is an extended POSIX
                                          regex matched against the method of a request,
                                          e.g. \"GET\", \"POST\", \"PUT\", \"PATCH\",
                                          \"DELETE\", ... \n If omitted or empty,
                                          all methods are allowed."
                                        type: string
                                      path:
                                        description: "Path is an extended POSIX regex
                                          matched against the path of a request. Currently
                                          it can contain characters disallowed from
                                          the conventional \"path\" part of a URL
                                          as defined by RFC 3986. \n If omitted or
                                          empty, all paths are all allowed."
                                        type: string
                                    type: object
                                  type: array
                                kafka:
                                  description: Kafka-specific rules.
                                  items:
                                    description: PortRule is a list of Kafka protocol
                                      constraints. All fields are optional, if all
                                      fields are empty or missing, the rule will match
                                      all Kafka messages.
                                    properties:
                                      apiKey:
                                        description: "APIKey is a case-insensitive
                                          string matched against the key of a request,
                                          e.g. \"produce\", \"fetch\", \"createtopic\",
                                          \"deletetopic\", et al Reference: https://kafka.apache.org/protocol#protocol_api_keys
                                          \n If omitted or empty, and if Role is not
                                          specified, then all keys are allowed."
                                        type: string
                                      apiVersion:
                                        description: "APIVersion is the version matched
                                          against the api version of the Kafka message.
                                          If set, it has to be a string representing
                                          a positive integer. \n If omitted or empty,
                                          all versions are allowed."
                                        type: string
                                      clientID:
                                        description: "ClientID is the client identifier
                                          as provided in the request. \n From Kafka
                                          protocol documentation: This is a user supplied
                                          identifier for the client application. The
                                          user can use any identifier they like and
                                          it will be used when logging errors, monitoring
                                          aggregates, etc. For example, one might
                                          want to monitor not just the requests per
                                          second overall, but the number coming from
                                          each client application (each of which could
                                          reside on multiple servers). This id acts
                                          as a logical grouping across all requests
                                          from a particular client. \n If omitted
                                          or empty, all client identifiers are allowed."
                                        type: string
                                      role:
                                        description: "Role is a case-insensitive string
                                          and describes a group of API keys necessary
                                          to perform certain higher-level Kafka operations
                                          such as \"produce\" or \"consume\". A Role
                                          automatically expands into all APIKeys required
                                          to perform the specified higher-level operation.
                                          \n The following values are supported:  -
                                          \"produce\": Allow producing to the topics
                                          specified in the rule  - \"consume\": Allow
                                          consuming from the topics specified in the
                                          rule \n This field is incompatible with
                                          the APIKey field, i.e APIKey and Role cannot
                                          both be specified in the same rule. \n If
                                          omitted or empty, and if APIKey is not specified,
                                          then all keys are allowed."
                                        enum:
                                        - produce
                                        - consume
                                        type: string
                                      topic:
                                        description: "Topic is the topic name contained
                                          in the message. If a Kafka request contains
                                          multiple topics, then all topics must be
                                          allowed or the message will be rejected.
                                          \n This constraint is ignored if the matched
                                          request message type doesn't contain any
                                          topic. Maximum size of Topic can be 249
                                          characters as per recent Kafka spec and
                                          allowed characters are a-z, A-Z, 0-9, -,
                                          . and _. \n Older Kafka versions had longer
                                          topic lengths of 255, but in Kafka 0.10
                                          version the length was changed from 255
                                          to 249. For compatibility reasons we are
                                          using 255. \n If omitted or empty, all topics
                                          are allowed."
                                        maxLength: 255
                                        type: string
                                    type: object
                                  type: array
                                l7:
                                  description: Key-value pair rules.
                                  items:
                                    additionalProperties:
                                      type: string
                                    description: PortRuleL7 is a list of key-value
                                      pairs interpreted by a L7 protocol as protocol
                                      constraints. All fields are optional, if all
                                      fields are empty or missing, the rule does not
                                      have any effect.
                                    type: object
                                  type: array
                                l7proto:
                                  description: Name of the L7 protocol for which the
                                    Key-value pair rules apply.
                                  type: string
                              type: object
                            terminatingTLS:
                              description: TerminatingTLS is the TLS context for the
                                connection terminated by the L7 proxy.  For egress
                                policy this specifies the server-side TLS parameters
                                to be applied on the connections originated from the
                                local endpoint and terminated by the L7 proxy. For
                                ingress policy this specifies the server-side TLS
                                parameters to be applied on the connections originated
                                from a remote source and terminated by the L7 proxy.
                              properties:
                                certificate:
                                  description: Certificate is the file name or k8s
                                    secret item name for the certificate chain. If
                                    omitted, 'tls.crt' is assumed, if it exists. If
                                    given, the item must exist.
                                  type: string
                                privateKey:
                                  description: PrivateKey is the file name or k8s
                                    secret item name for the private key matching
                                    the certificate chain. If omitted, 'tls.key' is
                                    assumed, if it exists. If given, the item must
                                    exist.
                                  type: string
                                secret:
                                  description: 'Secret is the secret that contains
                                    the certificates and private key for the TLS context.
                                    By default, Cilium will search in this secret
                                    for the following items:  - ''ca.crt''  - Which
                                    represents the trusted CA to verify remote source.  -
                                    ''tls.crt'' - Which represents the public key
                                    certificate.  - ''tls.key'' - Which represents
                                    the private key matching the public key                certificate.'
                                  properties:
                                    name:
                                      description: Name is the name of the secret.
                                      type: string
                                    namespace:
                                      description: Namespace is the namespace in which
                                        the secret exists. Context of use determines
                                        the default value if left out (e.g., "default").
                                      type: string
                                  required:
                                  - name
                                  type: object
                                trustedCA:
                                  description: TrustedCA is the file name or k8s secret
                                    item name for the trusted CA. If omitted, 'ca.crt'
                                    is assumed, if it exists. If given, the item must
                                    exist.
                                  type: string
                              required:
                              - secret
                              type: object
                          type: object
                        type: array
                    type: object
                  type: array
                ingressDeny:
                  description: IngressDeny is a list of IngressDenyRule which are
                    enforced at ingress. Any rule inserted here will by denied regardless
                    of the allowed ingress rules in the 'ingress' field. If omitted
                    or empty, this rule does not apply at ingress.
                  items:
                    description: "IngressDenyRule contains all rule types which can
                      be applied at ingress, i.e. network traffic that originates
                      outside of the endpoint and is entering the endpoint selected
                      by the endpointSelector. \n - All members of this structure
                      are optional. If omitted or empty, the   member will have no
                      effect on the rule. \n - If multiple members are set, all of
                      them need to match in order for   the rule to take effect. The
                      exception to this rule is FromRequires field;   the effects
                      of any Requires field in any rule will apply to all other   rules
                      as well. \n - FromEndpoints, FromCIDR, FromCIDRSet and FromEntities
                      are mutually   exclusive. Only one of these members may be present
                      within an individual   rule."
                    properties:
                      fromCIDR:
                        description: "FromCIDR is a list of IP blocks which the endpoint
                          subject to the rule is allowed to receive connections from.
                          Only connections which do *not* originate from the cluster
                          or from the local host are subject to CIDR rules. In order
                          to allow in-cluster connectivity, use the FromEndpoints
                          field.  This will match on the source IP address of incoming
                          connections. Adding  a prefix into FromCIDR or into FromCIDRSet
                          with no ExcludeCIDRs is  equivalent.  Overlaps are allowed
                          between FromCIDR and FromCIDRSet. \n Example: Any endpoint
                          with the label \"app=my-legacy-pet\" is allowed to receive
                          connections from 10.3.9.1"
                        items:
                          description: 'CIDR specifies a block of IP addresses. Example:
                            192.0.2.1/32'
                          pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                          type: string
                        type: array
                      fromCIDRSet:
                        description: "FromCIDRSet is a list of IP blocks which the
                          endpoint subject to the rule is allowed to receive connections
                          from in addition to FromEndpoints, along with a list of
                          subnets contained within their corresponding IP block from
                          which traffic should not be allowed. This will match on
                          the source IP address of incoming connections. Adding a
                          prefix into FromCIDR or into FromCIDRSet with no ExcludeCIDRs
                          is equivalent. Overlaps are allowed between FromCIDR and
                          FromCIDRSet. \n Example: Any endpoint with the label \"app=my-legacy-pet\"
                          is allowed to receive connections from 10.0.0.0/8 except
                          from IPs in subnet 10.96.0.0/12."
                        items:
                          description: CIDRRule is a rule that specifies a CIDR prefix
                            to/from which outside communication  is allowed, along
                            with an optional list of subnets within that CIDR prefix
                            to/from which outside communication is not allowed.
                          properties:
                            cidr:
                              description: CIDR is a CIDR prefix / IP Block.
                              pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                              type: string
                            except:
                              description: ExceptCIDRs is a list of IP blocks which
                                the endpoint subject to the rule is not allowed to
                                initiate connections to. These CIDR prefixes should
                                be contained within Cidr. These exceptions are only
                                applied to the Cidr in this CIDRRule, and do not apply
                                to any other CIDR prefixes in any other CIDRRules.
                              items:
                                description: 'CIDR specifies a block of IP addresses.
                                  Example: 192.0.2.1/32'
                                pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                                type: string
                              type: array
                          required:
                          - cidr
                          type: object
                        type: array
                      fromEndpoints:
                        description: "FromEndpoints is a list of endpoints identified
                          by an EndpointSelector which are allowed to communicate
                          with the endpoint subject to the rule. \n Example: Any endpoint
                          with the label \"role=backend\" can be consumed by any endpoint
                          carrying the label \"role=frontend\"."
                        items:
                          description: EndpointSelector is a wrapper for k8s LabelSelector.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    enum:
                                    - In
                                    - NotIn
                                    - Exists
                                    - DoesNotExist
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                description: MatchLabelsValue represents the value
                                  from the MatchLabels {key,value} pair.
                                maxLength: 63
                                pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        type: array
                      fromEntities:
                        description: FromEntities is a list of special entities which
                          the endpoint subject to the rule is allowed to receive connections
                          from. Supported entities are `world`, `cluster` and `host`
                        items:
                          description: Entity specifies the class of receiver/sender
                            endpoints that do not have individual identities.  Entities
                            are used to describe "outside of cluster", "host", etc.
                          enum:
                          - all
                          - world
                          - cluster
                          - host
                          - init
                          - unmanaged
                          - remote-node
                          - health
                          - none
                          type: string
                        type: array
                      fromRequires:
                        description: "FromRequires is a list of additional constraints
                          which must be met in order for the selected endpoints to
                          be reachable. These additional constraints do no by itself
                          grant access privileges and must always be accompanied with
                          at least one matching FromEndpoints. \n Example: Any Endpoint
                          with the label \"team=A\" requires consuming endpoint to
                          also carry the label \"team=A\"."
                        items:
                          description: EndpointSelector is a wrapper for k8s LabelSelector.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    enum:
                                    - In
                                    - NotIn
                                    - Exists
                                    - DoesNotExist
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                description: MatchLabelsValue represents the value
                                  from the MatchLabels {key,value} pair.
                                maxLength: 63
                                pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        type: array
                      toPorts:
                        description: "ToPorts is a list of destination ports identified
                          by port number and protocol which the endpoint subject to
                          the rule is not allowed to receive connections on. \n Example:
                          Any endpoint with the label \"app=httpd\" can not accept
                          incoming connections on port 80/tcp."
                        items:
                          description: PortDenyRule is a list of ports/protocol that
                            should be used for deny policies. This structure lacks
                            the L7Rules since it's not supported in deny policies.
                          properties:
                            ports:
                              description: Ports is a list of L4 port/protocol
                              items:
                                description: PortProtocol specifies an L4 port with
                                  an optional transport protocol
                                properties:
                                  port:
                                    description: Port is an L4 port number. For now
                                      the string will be strictly parsed as a single
                                      uint16. In the future, this field may support
                                      ranges in the form "1024-2048 Port can also
                                      be a port name, which must contain at least
                                      one [a-z], and may also contain [0-9] and '-'
                                      anywhere except adjacent to another '-' or in
                                      the beginning or the end.
                                    pattern: ^(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[0-9]{1,4})|([a-zA-Z0-9]-?)*[a-zA-Z](-?[a-zA-Z0-9])*$
                                    type: string
                                  protocol:
                                    description: "Protocol is the L4 protocol. If
                                      omitted or empty, any protocol matches. Accepted
                                      values: \"TCP\", \"UDP\", \"\"/\"ANY\" \n Matching
                                      on ICMP is not supported. \n Named port specified
                                      for a container may narrow this down, but may
                                      not contradict this."
                                    enum:
                                    - TCP
                                    - UDP
                                    - ANY
                                    type: string
                                required:
                                - port
                                type: object
                              type: array
                          type: object
                        type: array
                    type: object
                  type: array
                labels:
                  description: Labels is a list of optional strings which can be used
                    to re-identify the rule or to store metadata. It is possible to
                    lookup or delete strings based on labels. Labels are not required
                    to be unique, multiple rules can have overlapping or identical
                    labels.
                  items:
                    description: Label is the Cilium's representation of a container
                      label.
                    properties:
                      key:
                        type: string
                      source:
                        description: 'Source can be one of the above values (e.g.:
                          LabelSourceContainer).'
                        type: string
                      value:
                        type: string
                    required:
                    - key
                    type: object
                  type: array
                nodeSelector:
                  description: NodeSelector selects all nodes which should be subject
                    to this rule. EndpointSelector and NodeSelector cannot be both
                    empty and are mutually exclusive. Can only be used in CiliumClusterwideNetworkPolicies.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            enum:
                            - In
                            - NotIn
                            - Exists
                            - DoesNotExist
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        description: MatchLabelsValue represents the value from the
                          MatchLabels {key,value} pair.
                        maxLength: 63
                        pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
              type: object
            specs:
              description: Specs is a list of desired Cilium specific rule specification.
              items:
                description: "Rule is a policy rule which must be applied to all endpoints
                  which match the labels contained in the endpointSelector \n Each
                  rule is split into an ingress section which contains all rules applicable
                  at ingress, and an egress section applicable at egress. For rule
                  types such as `L4Rule` and `CIDR` which can be applied at both ingress
                  and egress, both ingress and egress side have to either specifically
                  allow the connection or one side has to be omitted. \n Either ingress,
                  egress, or both can be provided. If both ingress and egress are
                  omitted, the rule has no effect."
                oneOf:
                - properties:
                    endpointSelector: {}
                  required:
                  - endpointSelector
                - properties:
                    nodeSelector: {}
                  required:
                  - nodeSelector
                properties:
                  description:
                    description: Description is a free form string, it can be used
                      by the creator of the rule to store human readable explanation
                      of the purpose of this rule. Rules cannot be identified by comment.
                    type: string
                  egress:
                    description: Egress is a list of EgressRule which are enforced
                      at egress. If omitted or empty, this rule does not apply at
                      egress.
                    items:
                      description: "EgressRule contains all rule types which can be
                        applied at egress, i.e. network traffic that originates inside
                        the endpoint and exits the endpoint selected by the endpointSelector.
                        \n - All members of this structure are optional. If omitted
                        or empty, the   member will have no effect on the rule. \n
                        - If multiple members of the structure are specified, then
                        all members   must match in order for the rule to take effect.
                        The exception to this   rule is the ToRequires member; the
                        effects of any Requires field in any   rule will apply to
                        all other rules as well. \n - ToEndpoints, ToCIDR, ToCIDRSet,
                        ToEntities, ToServices and ToGroups are   mutually exclusive.
                        Only one of these members may be present within an   individual
                        rule."
                      properties:
                        toCIDR:
                          description: "ToCIDR is a list of IP blocks which the endpoint
                            subject to the rule is allowed to initiate connections.
                            Only connections destined for outside of the cluster and
                            not targeting the host will be subject to CIDR rules.
                            \ This will match on the destination IP address of outgoing
                            connections. Adding a prefix into ToCIDR or into ToCIDRSet
                            with no ExcludeCIDRs is equivalent. Overlaps are allowed
                            between ToCIDR and ToCIDRSet. \n Example: Any endpoint
                            with the label \"app=database-proxy\" is allowed to initiate
                            connections to 10.2.3.0/24"
                          items:
                            description: 'CIDR specifies a block of IP addresses.
                              Example: 192.0.2.1/32'
                            pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                            type: string
                          type: array
                        toCIDRSet:
                          description: "ToCIDRSet is a list of IP blocks which the
                            endpoint subject to the rule is allowed to initiate connections
                            to in addition to connections which are allowed via ToEndpoints,
                            along with a list of subnets contained within their corresponding
                            IP block to which traffic should not be allowed. This
                            will match on the destination IP address of outgoing connections.
                            Adding a prefix into ToCIDR or into ToCIDRSet with no
                            ExcludeCIDRs is equivalent. Overlaps are allowed between
                            ToCIDR and ToCIDRSet. \n Example: Any endpoint with the
                            label \"app=database-proxy\" is allowed to initiate connections
                            to 10.2.3.0/24 except from IPs in subnet 10.2.3.0/28."
                          items:
                            description: CIDRRule is a rule that specifies a CIDR
                              prefix to/from which outside communication  is allowed,
                              along with an optional list of subnets within that CIDR
                              prefix to/from which outside communication is not allowed.
                            properties:
                              cidr:
                                description: CIDR is a CIDR prefix / IP Block.
                                pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                                type: string
                              except:
                                description: ExceptCIDRs is a list of IP blocks which
                                  the endpoint subject to the rule is not allowed
                                  to initiate connections to. These CIDR prefixes
                                  should be contained within Cidr. These exceptions
                                  are only applied to the Cidr in this CIDRRule, and
                                  do not apply to any other CIDR prefixes in any other
                                  CIDRRules.
                                items:
                                  description: 'CIDR specifies a block of IP addresses.
                                    Example: 192.0.2.1/32'
                                  pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                                  type: string
                                type: array
                            required:
                            - cidr
                            type: object
                          type: array
                        toEndpoints:
                          description: "ToEndpoints is a list of endpoints identified
                            by an EndpointSelector to which the endpoints subject
                            to the rule are allowed to communicate. \n Example: Any
                            endpoint with the label \"role=frontend\" can communicate
                            with any endpoint carrying the label \"role=backend\"."
                          items:
                            description: EndpointSelector is a wrapper for k8s LabelSelector.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      enum:
                                      - In
                                      - NotIn
                                      - Exists
                                      - DoesNotExist
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  description: MatchLabelsValue represents the value
                                    from the MatchLabels {key,value} pair.
                                  maxLength: 63
                                  pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          type: array
                        toEntities:
                          description: ToEntities is a list of special entities to
                            which the endpoint subject to the rule is allowed to initiate
                            connections. Supported entities are `world`, `cluster`
                            and `host`
                          items:
                            description: Entity specifies the class of receiver/sender
                              endpoints that do not have individual identities.  Entities
                              are used to describe "outside of cluster", "host", etc.
                            enum:
                            - all
                            - world
                            - cluster
                            - host
                            - init
                            - unmanaged
                            - remote-node
                            - health
                            - none
                            type: string
                          type: array
                        toFQDNs:
                          description: "ToFQDN allows whitelisting DNS names in place
                            of IPs. The IPs that result from DNS resolution of `ToFQDN.MatchName`s
                            are added to the same EgressRule object as ToCIDRSet entries,
                            and behave accordingly. Any L4 and L7 rules within this
                            EgressRule will also apply to these IPs. The DNS -> IP
                            mapping is re-resolved periodically from within the cilium-agent,
                            and the IPs in the DNS response are effected in the policy
                            for selected pods as-is (i.e. the list of IPs is not modified
                            in any way). Note: An explicit rule to allow for DNS traffic
                            is needed for the pods, as ToFQDN counts as an egress
                            rule and will enforce egress policy when PolicyEnforcment=default.
                            Note: If the resolved IPs are IPs within the kubernetes
                            cluster, the ToFQDN rule will not apply to that IP. Note:
                            ToFQDN cannot occur in the same policy as other To* rules.
                            \n The current implementation has a number of limitations:
                            - The DNS resolution originates from cilium-agent, and
                            not from the pods. Differences between the responses seen
                            by cilium agent and a particular pod will whitelist the
                            incorrect IP. - DNS TTLs are ignored, and cilium-agent
                            will repoll on a short interval (5 seconds). Each change
                            to the DNS data will trigger a policy regeneration. This
                            may result in delayed updates to the policy for an endpoint
                            when the data changes often or the system is under load."
                          items:
                            properties:
                              matchName:
                                description: MatchName matches literal DNS names.
                                  A trailing "." is automatically added when missing.
                                pattern: ^([-a-zA-Z0-9_]+[.]?)+$
                                type: string
                              matchPattern:
                                description: "MatchPattern allows using wildcards
                                  to match DNS names. All wildcards are case insensitive.
                                  The wildcards are: - \"*\" matches 0 or more DNS
                                  valid characters, and may occur anywhere in the
                                  pattern. As a special case a \"*\" as the leftmost
                                  character, without a following \".\" matches all
                                  subdomains as well as the name to the right. A trailing
                                  \".\" is automatically added when missing. \n Examples:
                                  `*.cilium.io` matches subomains of cilium at that
                                  level   www.cilium.io and blog.cilium.io match,
                                  cilium.io and google.com do not `*cilium.io` matches
                                  cilium.io and all subdomains 1 level below   www.cilium.io,
                                  blog.cilium.io and cilium.io match, google.com does
                                  not sub*.cilium.io matches subdomains of cilium
                                  where the subdomain component begins with \"sub\"
                                  \  sub.cilium.io and subdomain.cilium.io match,
                                  www.cilium.io,   blog.cilium.io, cilium.io and google.com
                                  do not"
                                pattern: ^([-a-zA-Z0-9_*]+[.]?)+$
                                type: string
                            type: object
                          type: array
                        toGroups:
                          description: "ToGroups is a directive that allows the integration
                            with multiple outside providers. Currently, only AWS is
                            supported, and the rule can select by multiple sub directives:
                            \n Example: toGroups: - aws:     securityGroupsIds:     -
                            'sg-XXXXXXXXXXXXX'"
                          items:
                            description: ToGroups structure to store all kinds of
                              new integrations that needs a new derivative policy.
                            properties:
                              aws:
                                description: AWSGroup is an structure that can be
                                  used to whitelisting information from AWS integration
                                properties:
                                  labels:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  region:
                                    type: string
                                  securityGroupsIds:
                                    items:
                                      type: string
                                    type: array
                                  securityGroupsNames:
                                    items:
                                      type: string
                                    type: array
                                type: object
                            type: object
                          type: array
                        toPorts:
                          description: "ToPorts is a list of destination ports identified
                            by port number and protocol which the endpoint subject
                            to the rule is allowed to connect to. \n Example: Any
                            endpoint with the label \"role=frontend\" is allowed to
                            initiate connections to destination port 8080/tcp"
                          items:
                            description: PortRule is a list of ports/protocol combinations
                              with optional Layer 7 rules which must be met.
                            properties:
                              originatingTLS:
                                description: OriginatingTLS is the TLS context for
                                  the connections originated by the L7 proxy.  For
                                  egress policy this specifies the client-side TLS
                                  parameters for the upstream connection originating
                                  from the L7 proxy to the remote destination. For
                                  ingress policy this specifies the client-side TLS
                                  parameters for the connection from the L7 proxy
                                  to the local endpoint.
                                properties:
                                  certificate:
                                    description: Certificate is the file name or k8s
                                      secret item name for the certificate chain.
                                      If omitted, 'tls.crt' is assumed, if it exists.
                                      If given, the item must exist.
                                    type: string
                                  privateKey:
                                    description: PrivateKey is the file name or k8s
                                      secret item name for the private key matching
                                      the certificate chain. If omitted, 'tls.key'
                                      is assumed, if it exists. If given, the item
                                      must exist.
                                    type: string
                                  secret:
                                    description: 'Secret is the secret that contains
                                      the certificates and private key for the TLS
                                      context. By default, Cilium will search in this
                                      secret for the following items:  - ''ca.crt''  -
                                      Which represents the trusted CA to verify remote
                                      source.  - ''tls.crt'' - Which represents the
                                      public key certificate.  - ''tls.key'' - Which
                                      represents the private key matching the public
                                      key                certificate.'
                                    properties:
                                      name:
                                        description: Name is the name of the secret.
                                        type: string
                                      namespace:
                                        description: Namespace is the namespace in
                                          which the secret exists. Context of use
                                          determines the default value if left out
                                          (e.g., "default").
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  trustedCA:
                                    description: TrustedCA is the file name or k8s
                                      secret item name for the trusted CA. If omitted,
                                      'ca.crt' is assumed, if it exists. If given,
                                      the item must exist.
                                    type: string
                                required:
                                - secret
                                type: object
                              ports:
                                description: Ports is a list of L4 port/protocol
                                items:
                                  description: PortProtocol specifies an L4 port with
                                    an optional transport protocol
                                  properties:
                                    port:
                                      description: Port is an L4 port number. For
                                        now the string will be strictly parsed as
                                        a single uint16. In the future, this field
                                        may support ranges in the form "1024-2048
                                        Port can also be a port name, which must contain
                                        at least one [a-z], and may also contain [0-9]
                                        and '-' anywhere except adjacent to another
                                        '-' or in the beginning or the end.
                                      pattern: ^(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[0-9]{1,4})|([a-zA-Z0-9]-?)*[a-zA-Z](-?[a-zA-Z0-9])*$
                                      type: string
                                    protocol:
                                      description: "Protocol is the L4 protocol. If
                                        omitted or empty, any protocol matches. Accepted
                                        values: \"TCP\", \"UDP\", \"\"/\"ANY\" \n
                                        Matching on ICMP is not supported. \n Named
                                        port specified for a container may narrow
                                        this down, but may not contradict this."
                                      enum:
                                      - TCP
                                      - UDP
                                      - ANY
                                      type: string
                                  required:
                                  - port
                                  type: object
                                type: array
                              rules:
                                description: Rules is a list of additional port level
                                  rules which must be met in order for the PortRule
                                  to allow the traffic. If omitted or empty, no layer
                                  7 rules are enforced.
                                properties:
                                  dns:
                                    description: DNS-specific rules.
                                    items:
                                      description: PortRuleDNS is a list of allowed
                                        DNS lookups.
                                      properties:
                                        matchName:
                                          description: MatchName matches literal DNS
                                            names. A trailing "." is automatically
                                            added when missing.
                                          pattern: ^([-a-zA-Z0-9_]+[.]?)+$
                                          type: string
                                        matchPattern:
                                          description: "MatchPattern allows using
                                            wildcards to match DNS names. All wildcards
                                            are case insensitive. The wildcards are:
                                            - \"*\" matches 0 or more DNS valid characters,
                                            and may occur anywhere in the pattern.
                                            As a special case a \"*\" as the leftmost
                                            character, without a following \".\" matches
                                            all subdomains as well as the name to
                                            the right. A trailing \".\" is automatically
                                            added when missing. \n Examples: `*.cilium.io`
                                            matches subomains of cilium at that level
                                            \  www.cilium.io and blog.cilium.io match,
                                            cilium.io and google.com do not `*cilium.io`
                                            matches cilium.io and all subdomains 1
                                            level below   www.cilium.io, blog.cilium.io
                                            and cilium.io match, google.com does not
                                            sub*.cilium.io matches subdomains of cilium
                                            where the subdomain component begins with
                                            \"sub\"   sub.cilium.io and subdomain.cilium.io
                                            match, www.cilium.io,   blog.cilium.io,
                                            cilium.io and google.com do not"
                                          pattern: ^([-a-zA-Z0-9_*]+[.]?)+$
                                          type: string
                                      type: object
                                    type: array
                                  http:
                                    description: HTTP specific rules.
                                    items:
                                      description: "PortRuleHTTP is a list of HTTP
                                        protocol constraints. All fields are optional,
                                        if all fields are empty or missing, the rule
                                        does not have any effect. \n All fields of
                                        this type are extended POSIX regex as defined
                                        by IEEE Std 1003.1, (i.e this follows the
                                        egrep/unix syntax, not the perl syntax) matched
                                        against the path of an incoming request. Currently
                                        it can contain characters disallowed from
                                        the conventional \"path\" part of a URL as
                                        defined by RFC 3986."
                                      properties:
                                        headerMatches:
                                          description: HeaderMatches is a list of
                                            HTTP headers which must be present and
                                            match against the given values. Mismatch
                                            field can be used to specify what to do
                                            when there is no match.
                                          items:
                                            description: HeaderMatch extends the HeaderValue
                                              for matching requirement of a named
                                              header field against an immediate string,
                                              a secret value, or a regex.  If none
                                              of the optional fields is present, then
                                              the header value is not matched, only
                                              presence of the header is enough.
                                            properties:
                                              mismatch:
                                                description: Mismatch identifies what
                                                  to do in case there is no match.
                                                  The default is to drop the request.
                                                  Otherwise the overall rule is still
                                                  considered as matching, but the
                                                  mismatches are logged in the access
                                                  log.
                                                enum:
                                                - LOG
                                                - ADD
                                                - DELETE
                                                - REPLACE
                                                type: string
                                              name:
                                                description: Name identifies the header.
                                                type: string
                                              secret:
                                                description: Secret refers to a secret
                                                  that contains the value to be matched
                                                  against. The secret must only contain
                                                  one entry. If the referred secret
                                                  does not exist, and there is no
                                                  "Value" specified, the match will
                                                  fail.
                                                properties:
                                                  name:
                                                    description: Name is the name
                                                      of the secret.
                                                    type: string
                                                  namespace:
                                                    description: Namespace is the
                                                      namespace in which the secret
                                                      exists. Context of use determines
                                                      the default value if left out
                                                      (e.g., "default").
                                                    type: string
                                                required:
                                                - name
                                                type: object
                                              value:
                                                description: Value matches the exact
                                                  value of the header. Can be specified
                                                  either alone or together with "Secret";
                                                  will be used as the header value
                                                  if the secret can not be found in
                                                  the latter case.
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                        headers:
                                          description: Headers is a list of HTTP headers
                                            which must be present in the request.
                                            If omitted or empty, requests are allowed
                                            regardless of headers present.
                                          items:
                                            type: string
                                          type: array
                                        host:
                                          description: "Host is an extended POSIX
                                            regex matched against the host header
                                            of a request, e.g. \"foo.com\" \n If omitted
                                            or empty, the value of the host header
                                            is ignored."
                                          format: idn-hostname
                                          type: string
                                        method:
                                          description: "Method is an extended POSIX
                                            regex matched against the method of a
                                            request, e.g. \"GET\", \"POST\", \"PUT\",
                                            \"PATCH\", \"DELETE\", ... \n If omitted
                                            or empty, all methods are allowed."
                                          type: string
                                        path:
                                          description: "Path is an extended POSIX
                                            regex matched against the path of a request.
                                            Currently it can contain characters disallowed
                                            from the conventional \"path\" part of
                                            a URL as defined by RFC 3986. \n If omitted
                                            or empty, all paths are all allowed."
                                          type: string
                                      type: object
                                    type: array
                                  kafka:
                                    description: Kafka-specific rules.
                                    items:
                                      description: PortRule is a list of Kafka protocol
                                        constraints. All fields are optional, if all
                                        fields are empty or missing, the rule will
                                        match all Kafka messages.
                                      properties:
                                        apiKey:
                                          description: "APIKey is a case-insensitive
                                            string matched against the key of a request,
                                            e.g. \"produce\", \"fetch\", \"createtopic\",
                                            \"deletetopic\", et al Reference: https://kafka.apache.org/protocol#protocol_api_keys
                                            \n If omitted or empty, and if Role is
                                            not specified, then all keys are allowed."
                                          type: string
                                        apiVersion:
                                          description: "APIVersion is the version
                                            matched against the api version of the
                                            Kafka message. If set, it has to be a
                                            string representing a positive integer.
                                            \n If omitted or empty, all versions are
                                            allowed."
                                          type: string
                                        clientID:
                                          description: "ClientID is the client identifier
                                            as provided in the request. \n From Kafka
                                            protocol documentation: This is a user
                                            supplied identifier for the client application.
                                            The user can use any identifier they like
                                            and it will be used when logging errors,
                                            monitoring aggregates, etc. For example,
                                            one might want to monitor not just the
                                            requests per second overall, but the number
                                            coming from each client application (each
                                            of which could reside on multiple servers).
                                            This id acts as a logical grouping across
                                            all requests from a particular client.
                                            \n If omitted or empty, all client identifiers
                                            are allowed."
                                          type: string
                                        role:
                                          description: "Role is a case-insensitive
                                            string and describes a group of API keys
                                            necessary to perform certain higher-level
                                            Kafka operations such as \"produce\" or
                                            \"consume\". A Role automatically expands
                                            into all APIKeys required to perform the
                                            specified higher-level operation. \n The
                                            following values are supported:  - \"produce\":
                                            Allow producing to the topics specified
                                            in the rule  - \"consume\": Allow consuming
                                            from the topics specified in the rule
                                            \n This field is incompatible with the
                                            APIKey field, i.e APIKey and Role cannot
                                            both be specified in the same rule. \n
                                            If omitted or empty, and if APIKey is
                                            not specified, then all keys are allowed."
                                          enum:
                                          - produce
                                          - consume
                                          type: string
                                        topic:
                                          description: "Topic is the topic name contained
                                            in the message. If a Kafka request contains
                                            multiple topics, then all topics must
                                            be allowed or the message will be rejected.
                                            \n This constraint is ignored if the matched
                                            request message type doesn't contain any
                                            topic. Maximum size of Topic can be 249
                                            characters as per recent Kafka spec and
                                            allowed characters are a-z, A-Z, 0-9,
                                            -, . and _. \n Older Kafka versions had
                                            longer topic lengths of 255, but in Kafka
                                            0.10 version the length was changed from
                                            255 to 249. For compatibility reasons
                                            we are using 255. \n If omitted or empty,
                                            all topics are allowed."
                                          maxLength: 255
                                          type: string
                                      type: object
                                    type: array
                                  l7:
                                    description: Key-value pair rules.
                                    items:
                                      additionalProperties:
                                        type: string
                                      description: PortRuleL7 is a list of key-value
                                        pairs interpreted by a L7 protocol as protocol
                                        constraints. All fields are optional, if all
                                        fields are empty or missing, the rule does
                                        not have any effect.
                                      type: object
                                    type: array
                                  l7proto:
                                    description: Name of the L7 protocol for which
                                      the Key-value pair rules apply.
                                    type: string
                                type: object
                              terminatingTLS:
                                description: TerminatingTLS is the TLS context for
                                  the connection terminated by the L7 proxy.  For
                                  egress policy this specifies the server-side TLS
                                  parameters to be applied on the connections originated
                                  from the local endpoint and terminated by the L7
                                  proxy. For ingress policy this specifies the server-side
                                  TLS parameters to be applied on the connections
                                  originated from a remote source and terminated by
                                  the L7 proxy.
                                properties:
                                  certificate:
                                    description: Certificate is the file name or k8s
                                      secret item name for the certificate chain.
                                      If omitted, 'tls.crt' is assumed, if it exists.
                                      If given, the item must exist.
                                    type: string
                                  privateKey:
                                    description: PrivateKey is the file name or k8s
                                      secret item name for the private key matching
                                      the certificate chain. If omitted, 'tls.key'
                                      is assumed, if it exists. If given, the item
                                      must exist.
                                    type: string
                                  secret:
                                    description: 'Secret is the secret that contains
                                      the certificates and private key for the TLS
                                      context. By default, Cilium will search in this
                                      secret for the following items:  - ''ca.crt''  -
                                      Which represents the trusted CA to verify remote
                                      source.  - ''tls.crt'' - Which represents the
                                      public key certificate.  - ''tls.key'' - Which
                                      represents the private key matching the public
                                      key                certificate.'
                                    properties:
                                      name:
                                        description: Name is the name of the secret.
                                        type: string
                                      namespace:
                                        description: Namespace is the namespace in
                                          which the secret exists. Context of use
                                          determines the default value if left out
                                          (e.g., "default").
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  trustedCA:
                                    description: TrustedCA is the file name or k8s
                                      secret item name for the trusted CA. If omitted,
                                      'ca.crt' is assumed, if it exists. If given,
                                      the item must exist.
                                    type: string
                                required:
                                - secret
                                type: object
                            type: object
                          type: array
                        toRequires:
                          description: "ToRequires is a list of additional constraints
                            which must be met in order for the selected endpoints
                            to be able to connect to other endpoints. These additional
                            constraints do no by itself grant access privileges and
                            must always be accompanied with at least one matching
                            ToEndpoints. \n Example: Any Endpoint with the label \"team=A\"
                            requires any endpoint to which it communicates to also
                            carry the label \"team=A\"."
                          items:
                            description: EndpointSelector is a wrapper for k8s LabelSelector.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      enum:
                                      - In
                                      - NotIn
                                      - Exists
                                      - DoesNotExist
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  description: MatchLabelsValue represents the value
                                    from the MatchLabels {key,value} pair.
                                  maxLength: 63
                                  pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          type: array
                        toServices:
                          description: "ToServices is a list of services to which
                            the endpoint subject to the rule is allowed to initiate
                            connections. Currently Cilium only supports toServices
                            for K8s services without selectors. \n Example: Any endpoint
                            with the label \"app=backend-app\" is allowed to initiate
                            connections to all cidrs backing the \"external-service\"
                            service"
                          items:
                            description: Service wraps around selectors for services
                            properties:
                              k8sService:
                                description: K8sService selects service by name and
                                  namespace pair
                                properties:
                                  namespace:
                                    type: string
                                  serviceName:
                                    type: string
                                type: object
                              k8sServiceSelector:
                                description: K8sServiceSelector selects services by
                                  k8s labels and namespace
                                properties:
                                  namespace:
                                    type: string
                                  selector:
                                    description: ServiceSelector is a label selector
                                      for k8s services
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              enum:
                                              - In
                                              - NotIn
                                              - Exists
                                              - DoesNotExist
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          description: MatchLabelsValue represents
                                            the value from the MatchLabels {key,value}
                                            pair.
                                          maxLength: 63
                                          pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                required:
                                - selector
                                type: object
                            type: object
                          type: array
                      type: object
                    type: array
                  egressDeny:
                    description: EgressDeny is a list of EgressDenyRule which are
                      enforced at egress. Any rule inserted here will by denied regardless
                      of the allowed egress rules in the 'egress' field. If omitted
                      or empty, this rule does not apply at egress.
                    items:
                      description: "EgressDenyRule contains all rule types which can
                        be applied at egress, i.e. network traffic that originates
                        inside the endpoint and exits the endpoint selected by the
                        endpointSelector. \n - All members of this structure are optional.
                        If omitted or empty, the   member will have no effect on the
                        rule. \n - If multiple members of the structure are specified,
                        then all members   must match in order for the rule to take
                        effect. The exception to this   rule is the ToRequires member;
                        the effects of any Requires field in any   rule will apply
                        to all other rules as well. \n - ToEndpoints, ToCIDR, ToCIDRSet,
                        ToEntities, ToServices and ToGroups are   mutually exclusive.
                        Only one of these members may be present within an   individual
                        rule."
                      properties:
                        toCIDR:
                          description: "ToCIDR is a list of IP blocks which the endpoint
                            subject to the rule is allowed to initiate connections.
                            Only connections destined for outside of the cluster and
                            not targeting the host will be subject to CIDR rules.
                            \ This will match on the destination IP address of outgoing
                            connections. Adding a prefix into ToCIDR or into ToCIDRSet
                            with no ExcludeCIDRs is equivalent. Overlaps are allowed
                            between ToCIDR and ToCIDRSet. \n Example: Any endpoint
                            with the label \"app=database-proxy\" is allowed to initiate
                            connections to 10.2.3.0/24"
                          items:
                            description: 'CIDR specifies a block of IP addresses.
                              Example: 192.0.2.1/32'
                            pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                            type: string
                          type: array
                        toCIDRSet:
                          description: "ToCIDRSet is a list of IP blocks which the
                            endpoint subject to the rule is allowed to initiate connections
                            to in addition to connections which are allowed via ToEndpoints,
                            along with a list of subnets contained within their corresponding
                            IP block to which traffic should not be allowed. This
                            will match on the destination IP address of outgoing connections.
                            Adding a prefix into ToCIDR or into ToCIDRSet with no
                            ExcludeCIDRs is equivalent. Overlaps are allowed between
                            ToCIDR and ToCIDRSet. \n Example: Any endpoint with the
                            label \"app=database-proxy\" is allowed to initiate connections
                            to 10.2.3.0/24 except from IPs in subnet 10.2.3.0/28."
                          items:
                            description: CIDRRule is a rule that specifies a CIDR
                              prefix to/from which outside communication  is allowed,
                              along with an optional list of subnets within that CIDR
                              prefix to/from which outside communication is not allowed.
                            properties:
                              cidr:
                                description: CIDR is a CIDR prefix / IP Block.
                                pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                                type: string
                              except:
                                description: ExceptCIDRs is a list of IP blocks which
                                  the endpoint subject to the rule is not allowed
                                  to initiate connections to. These CIDR prefixes
                                  should be contained within Cidr. These exceptions
                                  are only applied to the Cidr in this CIDRRule, and
                                  do not apply to any other CIDR prefixes in any other
                                  CIDRRules.
                                items:
                                  description: 'CIDR specifies a block of IP addresses.
                                    Example: 192.0.2.1/32'
                                  pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                                  type: string
                                type: array
                            required:
                            - cidr
                            type: object
                          type: array
                        toEndpoints:
                          description: "ToEndpoints is a list of endpoints identified
                            by an EndpointSelector to which the endpoints subject
                            to the rule are allowed to communicate. \n Example: Any
                            endpoint with the label \"role=frontend\" can communicate
                            with any endpoint carrying the label \"role=backend\"."
                          items:
                            description: EndpointSelector is a wrapper for k8s LabelSelector.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      enum:
                                      - In
                                      - NotIn
                                      - Exists
                                      - DoesNotExist
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  description: MatchLabelsValue represents the value
                                    from the MatchLabels {key,value} pair.
                                  maxLength: 63
                                  pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          type: array
                        toEntities:
                          description: ToEntities is a list of special entities to
                            which the endpoint subject to the rule is allowed to initiate
                            connections. Supported entities are `world`, `cluster`
                            and `host`
                          items:
                            description: Entity specifies the class of receiver/sender
                              endpoints that do not have individual identities.  Entities
                              are used to describe "outside of cluster", "host", etc.
                            enum:
                            - all
                            - world
                            - cluster
                            - host
                            - init
                            - unmanaged
                            - remote-node
                            - health
                            - none
                            type: string
                          type: array
                        toGroups:
                          description: "ToGroups is a directive that allows the integration
                            with multiple outside providers. Currently, only AWS is
                            supported, and the rule can select by multiple sub directives:
                            \n Example: toGroups: - aws:     securityGroupsIds:     -
                            'sg-XXXXXXXXXXXXX'"
                          items:
                            description: ToGroups structure to store all kinds of
                              new integrations that needs a new derivative policy.
                            properties:
                              aws:
                                description: AWSGroup is an structure that can be
                                  used to whitelisting information from AWS integration
                                properties:
                                  labels:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  region:
                                    type: string
                                  securityGroupsIds:
                                    items:
                                      type: string
                                    type: array
                                  securityGroupsNames:
                                    items:
                                      type: string
                                    type: array
                                type: object
                            type: object
                          type: array
                        toPorts:
                          description: "ToPorts is a list of destination ports identified
                            by port number and protocol which the endpoint subject
                            to the rule is not allowed to connect to. \n Example:
                            Any endpoint with the label \"role=frontend\" is not allowed
                            to initiate connections to destination port 8080/tcp"
                          items:
                            description: PortDenyRule is a list of ports/protocol
                              that should be used for deny policies. This structure
                              lacks the L7Rules since it's not supported in deny policies.
                            properties:
                              ports:
                                description: Ports is a list of L4 port/protocol
                                items:
                                  description: PortProtocol specifies an L4 port with
                                    an optional transport protocol
                                  properties:
                                    port:
                                      description: Port is an L4 port number. For
                                        now the string will be strictly parsed as
                                        a single uint16. In the future, this field
                                        may support ranges in the form "1024-2048
                                        Port can also be a port name, which must contain
                                        at least one [a-z], and may also contain [0-9]
                                        and '-' anywhere except adjacent to another
                                        '-' or in the beginning or the end.
                                      pattern: ^(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[0-9]{1,4})|([a-zA-Z0-9]-?)*[a-zA-Z](-?[a-zA-Z0-9])*$
                                      type: string
                                    protocol:
                                      description: "Protocol is the L4 protocol. If
                                        omitted or empty, any protocol matches. Accepted
                                        values: \"TCP\", \"UDP\", \"\"/\"ANY\" \n
                                        Matching on ICMP is not supported. \n Named
                                        port specified for a container may narrow
                                        this down, but may not contradict this."
                                      enum:
                                      - TCP
                                      - UDP
                                      - ANY
                                      type: string
                                  required:
                                  - port
                                  type: object
                                type: array
                            type: object
                          type: array
                        toRequires:
                          description: "ToRequires is a list of additional constraints
                            which must be met in order for the selected endpoints
                            to be able to connect to other endpoints. These additional
                            constraints do no by itself grant access privileges and
                            must always be accompanied with at least one matching
                            ToEndpoints. \n Example: Any Endpoint with the label \"team=A\"
                            requires any endpoint to which it communicates to also
                            carry the label \"team=A\"."
                          items:
                            description: EndpointSelector is a wrapper for k8s LabelSelector.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      enum:
                                      - In
                                      - NotIn
                                      - Exists
                                      - DoesNotExist
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  description: MatchLabelsValue represents the value
                                    from the MatchLabels {key,value} pair.
                                  maxLength: 63
                                  pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          type: array
                        toServices:
                          description: "ToServices is a list of services to which
                            the endpoint subject to the rule is allowed to initiate
                            connections. Currently Cilium only supports toServices
                            for K8s services without selectors. \n Example: Any endpoint
                            with the label \"app=backend-app\" is allowed to initiate
                            connections to all cidrs backing the \"external-service\"
                            service"
                          items:
                            description: Service wraps around selectors for services
                            properties:
                              k8sService:
                                description: K8sService selects service by name and
                                  namespace pair
                                properties:
                                  namespace:
                                    type: string
                                  serviceName:
                                    type: string
                                type: object
                              k8sServiceSelector:
                                description: K8sServiceSelector selects services by
                                  k8s labels and namespace
                                properties:
                                  namespace:
                                    type: string
                                  selector:
                                    description: ServiceSelector is a label selector
                                      for k8s services
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              enum:
                                              - In
                                              - NotIn
                                              - Exists
                                              - DoesNotExist
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          description: MatchLabelsValue represents
                                            the value from the MatchLabels {key,value}
                                            pair.
                                          maxLength: 63
                                          pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                required:
                                - selector
                                type: object
                            type: object
                          type: array
                      type: object
                    type: array
                  endpointSelector:
                    description: EndpointSelector selects all endpoints which should
                      be subject to this rule. EndpointSelector and NodeSelector cannot
                      be both empty and are mutually exclusive.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              enum:
                              - In
                              - NotIn
                              - Exists
                              - DoesNotExist
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          description: MatchLabelsValue represents the value from
                            the MatchLabels {key,value} pair.
                          maxLength: 63
                          pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                  ingress:
                    description: Ingress is a list of IngressRule which are enforced
                      at ingress. If omitted or empty, this rule does not apply at
                      ingress.
                    items:
                      description: "IngressRule contains all rule types which can
                        be applied at ingress, i.e. network traffic that originates
                        outside of the endpoint and is entering the endpoint selected
                        by the endpointSelector. \n - All members of this structure
                        are optional. If omitted or empty, the   member will have
                        no effect on the rule. \n - If multiple members are set, all
                        of them need to match in order for   the rule to take effect.
                        The exception to this rule is FromRequires field;   the effects
                        of any Requires field in any rule will apply to all other
                        \  rules as well. \n - FromEndpoints, FromCIDR, FromCIDRSet
                        and FromEntities are mutually   exclusive. Only one of these
                        members may be present within an individual   rule."
                      properties:
                        fromCIDR:
                          description: "FromCIDR is a list of IP blocks which the
                            endpoint subject to the rule is allowed to receive connections
                            from. Only connections which do *not* originate from the
                            cluster or from the local host are subject to CIDR rules.
                            In order to allow in-cluster connectivity, use the FromEndpoints
                            field.  This will match on the source IP address of incoming
                            connections. Adding  a prefix into FromCIDR or into FromCIDRSet
                            with no ExcludeCIDRs is  equivalent.  Overlaps are allowed
                            between FromCIDR and FromCIDRSet. \n Example: Any endpoint
                            with the label \"app=my-legacy-pet\" is allowed to receive
                            connections from 10.3.9.1"
                          items:
                            description: 'CIDR specifies a block of IP addresses.
                              Example: 192.0.2.1/32'
                            pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                            type: string
                          type: array
                        fromCIDRSet:
                          description: "FromCIDRSet is a list of IP blocks which the
                            endpoint subject to the rule is allowed to receive connections
                            from in addition to FromEndpoints, along with a list of
                            subnets contained within their corresponding IP block
                            from which traffic should not be allowed. This will match
                            on the source IP address of incoming connections. Adding
                            a prefix into FromCIDR or into FromCIDRSet with no ExcludeCIDRs
                            is equivalent. Overlaps are allowed between FromCIDR and
                            FromCIDRSet. \n Example: Any endpoint with the label \"app=my-legacy-pet\"
                            is allowed to receive connections from 10.0.0.0/8 except
                            from IPs in subnet 10.96.0.0/12."
                          items:
                            description: CIDRRule is a rule that specifies a CIDR
                              prefix to/from which outside communication  is allowed,
                              along with an optional list of subnets within that CIDR
                              prefix to/from which outside communication is not allowed.
                            properties:
                              cidr:
                                description: CIDR is a CIDR prefix / IP Block.
                                pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                                type: string
                              except:
                                description: ExceptCIDRs is a list of IP blocks which
                                  the endpoint subject to the rule is not allowed
                                  to initiate connections to. These CIDR prefixes
                                  should be contained within Cidr. These exceptions
                                  are only applied to the Cidr in this CIDRRule, and
                                  do not apply to any other CIDR prefixes in any other
                                  CIDRRules.
                                items:
                                  description: 'CIDR specifies a block of IP addresses.
                                    Example: 192.0.2.1/32'
                                  pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                                  type: string
                                type: array
                            required:
                            - cidr
                            type: object
                          type: array
                        fromEndpoints:
                          description: "FromEndpoints is a list of endpoints identified
                            by an EndpointSelector which are allowed to communicate
                            with the endpoint subject to the rule. \n Example: Any
                            endpoint with the label \"role=backend\" can be consumed
                            by any endpoint carrying the label \"role=frontend\"."
                          items:
                            description: EndpointSelector is a wrapper for k8s LabelSelector.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      enum:
                                      - In
                                      - NotIn
                                      - Exists
                                      - DoesNotExist
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  description: MatchLabelsValue represents the value
                                    from the MatchLabels {key,value} pair.
                                  maxLength: 63
                                  pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          type: array
                        fromEntities:
                          description: FromEntities is a list of special entities
                            which the endpoint subject to the rule is allowed to receive
                            connections from. Supported entities are `world`, `cluster`
                            and `host`
                          items:
                            description: Entity specifies the class of receiver/sender
                              endpoints that do not have individual identities.  Entities
                              are used to describe "outside of cluster", "host", etc.
                            enum:
                            - all
                            - world
                            - cluster
                            - host
                            - init
                            - unmanaged
                            - remote-node
                            - health
                            - none
                            type: string
                          type: array
                        fromRequires:
                          description: "FromRequires is a list of additional constraints
                            which must be met in order for the selected endpoints
                            to be reachable. These additional constraints do no by
                            itself grant access privileges and must always be accompanied
                            with at least one matching FromEndpoints. \n Example:
                            Any Endpoint with the label \"team=A\" requires consuming
                            endpoint to also carry the label \"team=A\"."
                          items:
                            description: EndpointSelector is a wrapper for k8s LabelSelector.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      enum:
                                      - In
                                      - NotIn
                                      - Exists
                                      - DoesNotExist
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  description: MatchLabelsValue represents the value
                                    from the MatchLabels {key,value} pair.
                                  maxLength: 63
                                  pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          type: array
                        toPorts:
                          description: "ToPorts is a list of destination ports identified
                            by port number and protocol which the endpoint subject
                            to the rule is allowed to receive connections on. \n Example:
                            Any endpoint with the label \"app=httpd\" can only accept
                            incoming connections on port 80/tcp."
                          items:
                            description: PortRule is a list of ports/protocol combinations
                              with optional Layer 7 rules which must be met.
                            properties:
                              originatingTLS:
                                description: OriginatingTLS is the TLS context for
                                  the connections originated by the L7 proxy.  For
                                  egress policy this specifies the client-side TLS
                                  parameters for the upstream connection originating
                                  from the L7 proxy to the remote destination. For
                                  ingress policy this specifies the client-side TLS
                                  parameters for the connection from the L7 proxy
                                  to the local endpoint.
                                properties:
                                  certificate:
                                    description: Certificate is the file name or k8s
                                      secret item name for the certificate chain.
                                      If omitted, 'tls.crt' is assumed, if it exists.
                                      If given, the item must exist.
                                    type: string
                                  privateKey:
                                    description: PrivateKey is the file name or k8s
                                      secret item name for the private key matching
                                      the certificate chain. If omitted, 'tls.key'
                                      is assumed, if it exists. If given, the item
                                      must exist.
                                    type: string
                                  secret:
                                    description: 'Secret is the secret that contains
                                      the certificates and private key for the TLS
                                      context. By default, Cilium will search in this
                                      secret for the following items:  - ''ca.crt''  -
                                      Which represents the trusted CA to verify remote
                                      source.  - ''tls.crt'' - Which represents the
                                      public key certificate.  - ''tls.key'' - Which
                                      represents the private key matching the public
                                      key                certificate.'
                                    properties:
                                      name:
                                        description: Name is the name of the secret.
                                        type: string
                                      namespace:
                                        description: Namespace is the namespace in
                                          which the secret exists. Context of use
                                          determines the default value if left out
                                          (e.g., "default").
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  trustedCA:
                                    description: TrustedCA is the file name or k8s
                                      secret item name for the trusted CA. If omitted,
                                      'ca.crt' is assumed, if it exists. If given,
                                      the item must exist.
                                    type: string
                                required:
                                - secret
                                type: object
                              ports:
                                description: Ports is a list of L4 port/protocol
                                items:
                                  description: PortProtocol specifies an L4 port with
                                    an optional transport protocol
                                  properties:
                                    port:
                                      description: Port is an L4 port number. For
                                        now the string will be strictly parsed as
                                        a single uint16. In the future, this field
                                        may support ranges in the form "1024-2048
                                        Port can also be a port name, which must contain
                                        at least one [a-z], and may also contain [0-9]
                                        and '-' anywhere except adjacent to another
                                        '-' or in the beginning or the end.
                                      pattern: ^(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[0-9]{1,4})|([a-zA-Z0-9]-?)*[a-zA-Z](-?[a-zA-Z0-9])*$
                                      type: string
                                    protocol:
                                      description: "Protocol is the L4 protocol. If
                                        omitted or empty, any protocol matches. Accepted
                                        values: \"TCP\", \"UDP\", \"\"/\"ANY\" \n
                                        Matching on ICMP is not supported. \n Named
                                        port specified for a container may narrow
                                        this down, but may not contradict this."
                                      enum:
                                      - TCP
                                      - UDP
                                      - ANY
                                      type: string
                                  required:
                                  - port
                                  type: object
                                type: array
                              rules:
                                description: Rules is a list of additional port level
                                  rules which must be met in order for the PortRule
                                  to allow the traffic. If omitted or empty, no layer
                                  7 rules are enforced.
                                properties:
                                  dns:
                                    description: DNS-specific rules.
                                    items:
                                      description: PortRuleDNS is a list of allowed
                                        DNS lookups.
                                      properties:
                                        matchName:
                                          description: MatchName matches literal DNS
                                            names. A trailing "." is automatically
                                            added when missing.
                                          pattern: ^([-a-zA-Z0-9_]+[.]?)+$
                                          type: string
                                        matchPattern:
                                          description: "MatchPattern allows using
                                            wildcards to match DNS names. All wildcards
                                            are case insensitive. The wildcards are:
                                            - \"*\" matches 0 or more DNS valid characters,
                                            and may occur anywhere in the pattern.
                                            As a special case a \"*\" as the leftmost
                                            character, without a following \".\" matches
                                            all subdomains as well as the name to
                                            the right. A trailing \".\" is automatically
                                            added when missing. \n Examples: `*.cilium.io`
                                            matches subomains of cilium at that level
                                            \  www.cilium.io and blog.cilium.io match,
                                            cilium.io and google.com do not `*cilium.io`
                                            matches cilium.io and all subdomains 1
                                            level below   www.cilium.io, blog.cilium.io
                                            and cilium.io match, google.com does not
                                            sub*.cilium.io matches subdomains of cilium
                                            where the subdomain component begins with
                                            \"sub\"   sub.cilium.io and subdomain.cilium.io
                                            match, www.cilium.io,   blog.cilium.io,
                                            cilium.io and google.com do not"
                                          pattern: ^([-a-zA-Z0-9_*]+[.]?)+$
                                          type: string
                                      type: object
                                    type: array
                                  http:
                                    description: HTTP specific rules.
                                    items:
                                      description: "PortRuleHTTP is a list of HTTP
                                        protocol constraints. All fields are optional,
                                        if all fields are empty or missing, the rule
                                        does not have any effect. \n All fields of
                                        this type are extended POSIX regex as defined
                                        by IEEE Std 1003.1, (i.e this follows the
                                        egrep/unix syntax, not the perl syntax) matched
                                        against the path of an incoming request. Currently
                                        it can contain characters disallowed from
                                        the conventional \"path\" part of a URL as
                                        defined by RFC 3986."
                                      properties:
                                        headerMatches:
                                          description: HeaderMatches is a list of
                                            HTTP headers which must be present and
                                            match against the given values. Mismatch
                                            field can be used to specify what to do
                                            when there is no match.
                                          items:
                                            description: HeaderMatch extends the HeaderValue
                                              for matching requirement of a named
                                              header field against an immediate string,
                                              a secret value, or a regex.  If none
                                              of the optional fields is present, then
                                              the header value is not matched, only
                                              presence of the header is enough.
                                            properties:
                                              mismatch:
                                                description: Mismatch identifies what
                                                  to do in case there is no match.
                                                  The default is to drop the request.
                                                  Otherwise the overall rule is still
                                                  considered as matching, but the
                                                  mismatches are logged in the access
                                                  log.
                                                enum:
                                                - LOG
                                                - ADD
                                                - DELETE
                                                - REPLACE
                                                type: string
                                              name:
                                                description: Name identifies the header.
                                                type: string
                                              secret:
                                                description: Secret refers to a secret
                                                  that contains the value to be matched
                                                  against. The secret must only contain
                                                  one entry. If the referred secret
                                                  does not exist, and there is no
                                                  "Value" specified, the match will
                                                  fail.
                                                properties:
                                                  name:
                                                    description: Name is the name
                                                      of the secret.
                                                    type: string
                                                  namespace:
                                                    description: Namespace is the
                                                      namespace in which the secret
                                                      exists. Context of use determines
                                                      the default value if left out
                                                      (e.g., "default").
                                                    type: string
                                                required:
                                                - name
                                                type: object
                                              value:
                                                description: Value matches the exact
                                                  value of the header. Can be specified
                                                  either alone or together with "Secret";
                                                  will be used as the header value
                                                  if the secret can not be found in
                                                  the latter case.
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                        headers:
                                          description: Headers is a list of HTTP headers
                                            which must be present in the request.
                                            If omitted or empty, requests are allowed
                                            regardless of headers present.
                                          items:
                                            type: string
                                          type: array
                                        host:
                                          description: "Host is an extended POSIX
                                            regex matched against the host header
                                            of a request, e.g. \"foo.com\" \n If omitted
                                            or empty, the value of the host header
                                            is ignored."
                                          format: idn-hostname
                                          type: string
                                        method:
                                          description: "Method is an extended POSIX
                                            regex matched against the method of a
                                            request, e.g. \"GET\", \"POST\", \"PUT\",
                                            \"PATCH\", \"DELETE\", ... \n If omitted
                                            or empty, all methods are allowed."
                                          type: string
                                        path:
                                          description: "Path is an extended POSIX
                                            regex matched against the path of a request.
                                            Currently it can contain characters disallowed
                                            from the conventional \"path\" part of
                                            a URL as defined by RFC 3986. \n If omitted
                                            or empty, all paths are all allowed."
                                          type: string
                                      type: object
                                    type: array
                                  kafka:
                                    description: Kafka-specific rules.
                                    items:
                                      description: PortRule is a list of Kafka protocol
                                        constraints. All fields are optional, if all
                                        fields are empty or missing, the rule will
                                        match all Kafka messages.
                                      properties:
                                        apiKey:
                                          description: "APIKey is a case-insensitive
                                            string matched against the key of a request,
                                            e.g. \"produce\", \"fetch\", \"createtopic\",
                                            \"deletetopic\", et al Reference: https://kafka.apache.org/protocol#protocol_api_keys
                                            \n If omitted or empty, and if Role is
                                            not specified, then all keys are allowed."
                                          type: string
                                        apiVersion:
                                          description: "APIVersion is the version
                                            matched against the api version of the
                                            Kafka message. If set, it has to be a
                                            string representing a positive integer.
                                            \n If omitted or empty, all versions are
                                            allowed."
                                          type: string
                                        clientID:
                                          description: "ClientID is the client identifier
                                            as provided in the request. \n From Kafka
                                            protocol documentation: This is a user
                                            supplied identifier for the client application.
                                            The user can use any identifier they like
                                            and it will be used when logging errors,
                                            monitoring aggregates, etc. For example,
                                            one might want to monitor not just the
                                            requests per second overall, but the number
                                            coming from each client application (each
                                            of which could reside on multiple servers).
                                            This id acts as a logical grouping across
                                            all requests from a particular client.
                                            \n If omitted or empty, all client identifiers
                                            are allowed."
                                          type: string
                                        role:
                                          description: "Role is a case-insensitive
                                            string and describes a group of API keys
                                            necessary to perform certain higher-level
                                            Kafka operations such as \"produce\" or
                                            \"consume\". A Role automatically expands
                                            into all APIKeys required to perform the
                                            specified higher-level operation. \n The
                                            following values are supported:  - \"produce\":
                                            Allow producing to the topics specified
                                            in the rule  - \"consume\": Allow consuming
                                            from the topics specified in the rule
                                            \n This field is incompatible with the
                                            APIKey field, i.e APIKey and Role cannot
                                            both be specified in the same rule. \n
                                            If omitted or empty, and if APIKey is
                                            not specified, then all keys are allowed."
                                          enum:
                                          - produce
                                          - consume
                                          type: string
                                        topic:
                                          description: "Topic is the topic name contained
                                            in the message. If a Kafka request contains
                                            multiple topics, then all topics must
                                            be allowed or the message will be rejected.
                                            \n This constraint is ignored if the matched
                                            request message type doesn't contain any
                                            topic. Maximum size of Topic can be 249
                                            characters as per recent Kafka spec and
                                            allowed characters are a-z, A-Z, 0-9,
                                            -, . and _. \n Older Kafka versions had
                                            longer topic lengths of 255, but in Kafka
                                            0.10 version the length was changed from
                                            255 to 249. For compatibility reasons
                                            we are using 255. \n If omitted or empty,
                                            all topics are allowed."
                                          maxLength: 255
                                          type: string
                                      type: object
                                    type: array
                                  l7:
                                    description: Key-value pair rules.
                                    items:
                                      additionalProperties:
                                        type: string
                                      description: PortRuleL7 is a list of key-value
                                        pairs interpreted by a L7 protocol as protocol
                                        constraints. All fields are optional, if all
                                        fields are empty or missing, the rule does
                                        not have any effect.
                                      type: object
                                    type: array
                                  l7proto:
                                    description: Name of the L7 protocol for which
                                      the Key-value pair rules apply.
                                    type: string
                                type: object
                              terminatingTLS:
                                description: TerminatingTLS is the TLS context for
                                  the connection terminated by the L7 proxy.  For
                                  egress policy this specifies the server-side TLS
                                  parameters to be applied on the connections originated
                                  from the local endpoint and terminated by the L7
                                  proxy. For ingress policy this specifies the server-side
                                  TLS parameters to be applied on the connections
                                  originated from a remote source and terminated by
                                  the L7 proxy.
                                properties:
                                  certificate:
                                    description: Certificate is the file name or k8s
                                      secret item name for the certificate chain.
                                      If omitted, 'tls.crt' is assumed, if it exists.
                                      If given, the item must exist.
                                    type: string
                                  privateKey:
                                    description: PrivateKey is the file name or k8s
                                      secret item name for the private key matching
                                      the certificate chain. If omitted, 'tls.key'
                                      is assumed, if it exists. If given, the item
                                      must exist.
                                    type: string
                                  secret:
                                    description: 'Secret is the secret that contains
                                      the certificates and private key for the TLS
                                      context. By default, Cilium will search in this
                                      secret for the following items:  - ''ca.crt''  -
                                      Which represents the trusted CA to verify remote
                                      source.  - ''tls.crt'' - Which represents the
                                      public key certificate.  - ''tls.key'' - Which
                                      represents the private key matching the public
                                      key                certificate.'
                                    properties:
                                      name:
                                        description: Name is the name of the secret.
                                        type: string
                                      namespace:
                                        description: Namespace is the namespace in
                                          which the secret exists. Context of use
                                          determines the default value if left out
                                          (e.g., "default").
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  trustedCA:
                                    description: TrustedCA is the file name or k8s
                                      secret item name for the trusted CA. If omitted,
                                      'ca.crt' is assumed, if it exists. If given,
                                      the item must exist.
                                    type: string
                                required:
                                - secret
                                type: object
                            type: object
                          type: array
                      type: object
                    type: array
                  ingressDeny:
                    description: IngressDeny is a list of IngressDenyRule which are
                      enforced at ingress. Any rule inserted here will by denied regardless
                      of the allowed ingress rules in the 'ingress' field. If omitted
                      or empty, this rule does not apply at ingress.
                    items:
                      description: "IngressDenyRule contains all rule types which
                        can be applied at ingress, i.e. network traffic that originates
                        outside of the endpoint and is entering the endpoint selected
                        by the endpointSelector. \n - All members of this structure
                        are optional. If omitted or empty, the   member will have
                        no effect on the rule. \n - If multiple members are set, all
                        of them need to match in order for   the rule to take effect.
                        The exception to this rule is FromRequires field;   the effects
                        of any Requires field in any rule will apply to all other
                        \  rules as well. \n - FromEndpoints, FromCIDR, FromCIDRSet
                        and FromEntities are mutually   exclusive. Only one of these
                        members may be present within an individual   rule."
                      properties:
                        fromCIDR:
                          description: "FromCIDR is a list of IP blocks which the
                            endpoint subject to the rule is allowed to receive connections
                            from. Only connections which do *not* originate from the
                            cluster or from the local host are subject to CIDR rules.
                            In order to allow in-cluster connectivity, use the FromEndpoints
                            field.  This will match on the source IP address of incoming
                            connections. Adding  a prefix into FromCIDR or into FromCIDRSet
                            with no ExcludeCIDRs is  equivalent.  Overlaps are allowed
                            between FromCIDR and FromCIDRSet. \n Example: Any endpoint
                            with the label \"app=my-legacy-pet\" is allowed to receive
                            connections from 10.3.9.1"
                          items:
                            description: 'CIDR specifies a block of IP addresses.
                              Example: 192.0.2.1/32'
                            pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                            type: string
                          type: array
                        fromCIDRSet:
                          description: "FromCIDRSet is a list of IP blocks which the
                            endpoint subject to the rule is allowed to receive connections
                            from in addition to FromEndpoints, along with a list of
                            subnets contained within their corresponding IP block
                            from which traffic should not be allowed. This will match
                            on the source IP address of incoming connections. Adding
                            a prefix into FromCIDR or into FromCIDRSet with no ExcludeCIDRs
                            is equivalent. Overlaps are allowed between FromCIDR and
                            FromCIDRSet. \n Example: Any endpoint with the label \"app=my-legacy-pet\"
                            is allowed to receive connections from 10.0.0.0/8 except
                            from IPs in subnet 10.96.0.0/12."
                          items:
                            description: CIDRRule is a rule that specifies a CIDR
                              prefix to/from which outside communication  is allowed,
                              along with an optional list of subnets within that CIDR
                              prefix to/from which outside communication is not allowed.
                            properties:
                              cidr:
                                description: CIDR is a CIDR prefix / IP Block.
                                pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                                type: string
                              except:
                                description: ExceptCIDRs is a list of IP blocks which
                                  the endpoint subject to the rule is not allowed
                                  to initiate connections to. These CIDR prefixes
                                  should be contained within Cidr. These exceptions
                                  are only applied to the Cidr in this CIDRRule, and
                                  do not apply to any other CIDR prefixes in any other
                                  CIDRRules.
                                items:
                                  description: 'CIDR specifies a block of IP addresses.
                                    Example: 192.0.2.1/32'
                                  pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([0-9]|[1-2][0-9]|3[0-2])$|^s*((([0-9A-Fa-f]{1,4}:){7}(:|([0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){6}:([0-9A-Fa-f]{1,4})?)|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){0,1}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){0,2}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){0,3}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){0,4}):([0-9A-Fa-f]{1,4})?))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){0,5}):([0-9A-Fa-f]{1,4})?))|(:(:|((:[0-9A-Fa-f]{1,4}){1,7}))))(%.+)?s*/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8])$
                                  type: string
                                type: array
                            required:
                            - cidr
                            type: object
                          type: array
                        fromEndpoints:
                          description: "FromEndpoints is a list of endpoints identified
                            by an EndpointSelector which are allowed to communicate
                            with the endpoint subject to the rule. \n Example: Any
                            endpoint with the label \"role=backend\" can be consumed
                            by any endpoint carrying the label \"role=frontend\"."
                          items:
                            description: EndpointSelector is a wrapper for k8s LabelSelector.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      enum:
                                      - In
                                      - NotIn
                                      - Exists
                                      - DoesNotExist
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  description: MatchLabelsValue represents the value
                                    from the MatchLabels {key,value} pair.
                                  maxLength: 63
                                  pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          type: array
                        fromEntities:
                          description: FromEntities is a list of special entities
                            which the endpoint subject to the rule is allowed to receive
                            connections from. Supported entities are `world`, `cluster`
                            and `host`
                          items:
                            description: Entity specifies the class of receiver/sender
                              endpoints that do not have individual identities.  Entities
                              are used to describe "outside of cluster", "host", etc.
                            enum:
                            - all
                            - world
                            - cluster
                            - host
                            - init
                            - unmanaged
                            - remote-node
                            - health
                            - none
                            type: string
                          type: array
                        fromRequires:
                          description: "FromRequires is a list of additional constraints
                            which must be met in order for the selected endpoints
                            to be reachable. These additional constraints do no by
                            itself grant access privileges and must always be accompanied
                            with at least one matching FromEndpoints. \n Example:
                            Any Endpoint with the label \"team=A\" requires consuming
                            endpoint to also carry the label \"team=A\"."
                          items:
                            description: EndpointSelector is a wrapper for k8s LabelSelector.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      enum:
                                      - In
                                      - NotIn
                                      - Exists
                                      - DoesNotExist
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  description: MatchLabelsValue represents the value
                                    from the MatchLabels {key,value} pair.
                                  maxLength: 63
                                  pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          type: array
                        toPorts:
                          description: "ToPorts is a list of destination ports identified
                            by port number and protocol which the endpoint subject
                            to the rule is not allowed to receive connections on.
                            \n Example: Any endpoint with the label \"app=httpd\"
                            can not accept incoming connections on port 80/tcp."
                          items:
                            description: PortDenyRule is a list of ports/protocol
                              that should be used for deny policies. This structure
                              lacks the L7Rules since it's not supported in deny policies.
                            properties:
                              ports:
                                description: Ports is a list of L4 port/protocol
                                items:
                                  description: PortProtocol specifies an L4 port with
                                    an optional transport protocol
                                  properties:
                                    port:
                                      description: Port is an L4 port number. For
                                        now the string will be strictly parsed as
                                        a single uint16. In the future, this field
                                        may support ranges in the form "1024-2048
                                        Port can also be a port name, which must contain
                                        at least one [a-z], and may also contain [0-9]
                                        and '-' anywhere except adjacent to another
                                        '-' or in the beginning or the end.
                                      pattern: ^(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[0-9]{1,4})|([a-zA-Z0-9]-?)*[a-zA-Z](-?[a-zA-Z0-9])*$
                                      type: string
                                    protocol:
                                      description: "Protocol is the L4 protocol. If
                                        omitted or empty, any protocol matches. Accepted
                                        values: \"TCP\", \"UDP\", \"\"/\"ANY\" \n
                                        Matching on ICMP is not supported. \n Named
                                        port specified for a container may narrow
                                        this down, but may not contradict this."
                                      enum:
                                      - TCP
                                      - UDP
                                      - ANY
                                      type: string
                                  required:
                                  - port
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  labels:
                    description: Labels is a list of optional strings which can be
                      used to re-identify the rule or to store metadata. It is possible
                      to lookup or delete strings based on labels. Labels are not
                      required to be unique, multiple rules can have overlapping or
                      identical labels.
                    items:
                      description: Label is the Cilium's representation of a container
                        label.
                      properties:
                        key:
                          type: string
                        source:
                          description: 'Source can be one of the above values (e.g.:
                            LabelSourceContainer).'
                          type: string
                        value:
                          type: string
                      required:
                      - key
                      type: object
                    type: array
                  nodeSelector:
                    description: NodeSelector selects all nodes which should be subject
                      to this rule. EndpointSelector and NodeSelector cannot be both
                      empty and are mutually exclusive. Can only be used in CiliumClusterwideNetworkPolicies.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              enum:
                              - In
                              - NotIn
                              - Exists
                              - DoesNotExist
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          description: MatchLabelsValue represents the value from
                            the MatchLabels {key,value} pair.
                          maxLength: 63
                          pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                type: object
              type: array
            status:
              description: Status is the status of the Cilium policy rule
              properties:
                derivativePolicies:
                  additionalProperties:
                    description: CiliumNetworkPolicyNodeStatus is the status of a
                      Cilium policy rule for a specific node.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations corresponds to the Annotations in
                          the ObjectMeta of the CNP that have been realized on the
                          node for CNP. That is, if a CNP has been imported and has
                          been assigned annotation X=Y by the user, Annotations in
                          CiliumNetworkPolicyNodeStatus will be X=Y once the CNP that
                          was imported corresponding to Annotation X=Y has been realized
                          on the node.
                        type: object
                      enforcing:
                        description: Enforcing is set to true once all endpoints present
                          at the time the policy has been imported are enforcing this
                          policy.
                        type: boolean
                      error:
                        description: Error describes any error that occurred when
                          parsing or importing the policy, or realizing the policy
                          for the endpoints to which it applies on the node.
                        type: string
                      lastUpdated:
                        description: LastUpdated contains the last time this status
                          was updated
                        format: date-time
                        type: string
                      localPolicyRevision:
                        description: Revision is the policy revision of the repository
                          which first implemented this policy.
                        format: int64
                        type: integer
                      ok:
                        description: OK is true when the policy has been parsed and
                          imported successfully into the in-memory policy repository
                          on the node.
                        type: boolean
                    type: object
                  description: DerivativePolicies is the status of all policies derived
                    from the Cilium policy
                  type: object
                nodes:
                  additionalProperties:
                    description: CiliumNetworkPolicyNodeStatus is the status of a
                      Cilium policy rule for a specific node.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations corresponds to the Annotations in
                          the ObjectMeta of the CNP that have been realized on the
                          node for CNP. That is, if a CNP has been imported and has
                          been assigned annotation X=Y by the user, Annotations in
                          CiliumNetworkPolicyNodeStatus will be X=Y once the CNP that
                          was imported corresponding to Annotation X=Y has been realized
                          on the node.
                        type: object
                      enforcing:
                        description: Enforcing is set to true once all endpoints present
                          at the time the policy has been imported are enforcing this
                          policy.
                        type: boolean
                      error:
                        description: Error describes any error that occurred when
                          parsing or importing the policy, or realizing the policy
                          for the endpoints to which it applies on the node.
                        type: string
                      lastUpdated:
                        description: LastUpdated contains the last time this status
                          was updated
                        format: date-time
                        type: string
                      localPolicyRevision:
                        description: Revision is the policy revision of the repository
                          which first implemented this policy.
                        format: int64
                        type: integer
                      ok:
                        description: OK is true when the policy has been parsed and
                          imported successfully into the in-memory policy repository
                          on the node.
                        type: boolean
                    type: object
                  description: Nodes is the Cilium policy status for each node
                  type: object
              type: object
          required:
          - metadata
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: CiliumNetworkPolicy
      listKind: CiliumNetworkPolicyList
      plural: ciliumnetworkpolicies
      shortNames:
      - cnp
      - ciliumnp
      singular: ciliumnetworkpolicy
    conditions:
    - lastTransitionTime: "2021-12-04T16:58:56Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-04T16:58:56Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v2
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2021-12-04T16:58:55Z"
    generation: 1
    labels:
      io.cilium.k8s.crd.schema.version: 1.23.2
    name: ciliumnodes.cilium.io
    resourceVersion: "899"
    uid: aa6e307a-7669-4d12-886b-00cbb4e5c8b6
  spec:
    conversion:
      strategy: None
    group: cilium.io
    names:
      kind: CiliumNode
      listKind: CiliumNodeList
      plural: ciliumnodes
      shortNames:
      - cn
      - ciliumn
      singular: ciliumnode
    scope: Cluster
    versions:
    - name: v2
      schema:
        openAPIV3Schema:
          description: CiliumNode represents a node managed by Cilium. It contains
            a specification to control various node specific configuration aspects
            and a status section to represent the status of the node.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the desired specification/configuration of
                the node.
              properties:
                addresses:
                  description: Addresses is the list of all node addresses.
                  items:
                    description: NodeAddress is a node address.
                    properties:
                      ip:
                        description: IP is an IP of a node
                        type: string
                      type:
                        description: Type is the type of the node address
                        type: string
                    type: object
                  type: array
                alibaba-cloud:
                  description: AlibabaCloud is the AlibabaCloud IPAM specific configuration.
                  properties:
                    availability-zone:
                      description: AvailabilityZone is the availability zone to use
                        when allocating ENIs.
                      type: string
                    cidr-block:
                      description: CIDRBlock is vpc ipv4 CIDR
                      type: string
                    instance-type:
                      description: InstanceType is the ECS instance type, e.g. "ecs.g6.2xlarge"
                      type: string
                    security-group-tags:
                      additionalProperties:
                        type: string
                      description: SecurityGroupTags is the list of tags to use when
                        evaluating which security groups to use for the ENI.
                      type: object
                    security-groups:
                      description: SecurityGroups is the list of security groups to
                        attach to any ENI that is created and attached to the instance.
                      items:
                        type: string
                      type: array
                    vpc-id:
                      description: VPCID is the VPC ID to use when allocating ENIs.
                      type: string
                    vswitch-tags:
                      additionalProperties:
                        type: string
                      description: VSwitchTags is the list of tags to use when evaluating
                        which vSwitch to use for the ENI.
                      type: object
                    vswitches:
                      description: VSwitches is the ID of vSwitch available for ENI
                      items:
                        type: string
                      type: array
                  type: object
                azure:
                  description: Azure is the Azure IPAM specific configuration.
                  properties:
                    interface-name:
                      description: InterfaceName is the name of the interface the
                        cilium-operator will use to allocate all the IPs on
                      type: string
                  type: object
                encryption:
                  description: Encryption is the encryption configuration of the node.
                  properties:
                    key:
                      description: Key is the index to the key to use for encryption
                        or 0 if encryption is disabled.
                      type: integer
                  type: object
                eni:
                  description: ENI is the AWS ENI specific configuration.
                  properties:
                    availability-zone:
                      description: AvailabilityZone is the availability zone to use
                        when allocating ENIs.
                      type: string
                    delete-on-termination:
                      description: DeleteOnTermination defines that the ENI should
                        be deleted when the associated instance is terminated. If
                        the parameter is not set the default behavior is to delete
                        the ENI on instance termination.
                      type: boolean
                    first-interface-index:
                      description: FirstInterfaceIndex is the index of the first ENI
                        to use for IP allocation, e.g. if the node has eth0, eth1,
                        eth2 and FirstInterfaceIndex is set to 1, then only eth1 and
                        eth2 will be used for IP allocation, eth0 will be ignored
                        for PodIP allocation.
                      minimum: 0
                      type: integer
                    instance-id:
                      description: "InstanceID is the AWS InstanceId of the node.
                        The InstanceID is used to retrieve AWS metadata for the node.
                        \n OBSOLETE: This field is obsolete, please use Spec.InstanceID"
                      type: string
                    instance-type:
                      description: InstanceType is the AWS EC2 instance type, e.g.
                        "m5.large"
                      type: string
                    max-above-watermark:
                      description: "MaxAboveWatermark is the maximum number of addresses
                        to allocate beyond the addresses needed to reach the PreAllocate
                        watermark. Going above the watermark can help reduce the number
                        of API calls to allocate IPs, e.g. when a new ENI is allocated,
                        as many secondary IPs as possible are allocated. Limiting
                        the amount can help reduce waste of IPs. \n OBSOLETE: This
                        field is obsolete, please use Spec.IPAM.MaxAboveWatermark"
                      minimum: 0
                      type: integer
                    min-allocate:
                      description: "MinAllocate is the minimum number of IPs that
                        must be allocated when the node is first bootstrapped. It
                        defines the minimum base socket of addresses that must be
                        available. After reaching this watermark, the PreAllocate
                        and MaxAboveWatermark logic takes over to continue allocating
                        IPs. \n OBSOLETE: This field is obsolete, please use Spec.IPAM.MinAllocate"
                      minimum: 0
                      type: integer
                    pre-allocate:
                      description: "PreAllocate defines the number of IP addresses
                        that must be available for allocation in the IPAMspec. It
                        defines the buffer of addresses available immediately without
                        requiring cilium-operator to get involved. \n OBSOLETE: This
                        field is obsolete, please use Spec.IPAM.PreAllocate"
                      minimum: 0
                      type: integer
                    security-group-tags:
                      additionalProperties:
                        type: string
                      description: SecurityGroupTags is the list of tags to use when
                        evaliating what AWS security groups to use for the ENI.
                      type: object
                    security-groups:
                      description: SecurityGroups is the list of security groups to
                        attach to any ENI that is created and attached to the instance.
                      items:
                        type: string
                      type: array
                    subnet-tags:
                      additionalProperties:
                        type: string
                      description: SubnetTags is the list of tags to use when evaluating
                        what AWS subnets to use for ENI and IP allocation.
                      type: object
                    vpc-id:
                      description: VpcID is the VPC ID to use when allocating ENIs.
                      type: string
                  type: object
                health:
                  description: HealthAddressing is the addressing information for
                    health connectivity checking.
                  properties:
                    ipv4:
                      description: IPv4 is the IPv4 address of the IPv4 health endpoint.
                      type: string
                    ipv6:
                      description: IPv6 is the IPv6 address of the IPv4 health endpoint.
                      type: string
                  type: object
                instance-id:
                  description: InstanceID is the identifier of the node. This is different
                    from the node name which is typically the FQDN of the node. The
                    InstanceID typically refers to the identifier used by the cloud
                    provider or some other means of identification.
                  type: string
                ipam:
                  description: IPAM is the address management specification. This
                    section can be populated by a user or it can be automatically
                    populated by an IPAM operator.
                  properties:
                    max-above-watermark:
                      description: MaxAboveWatermark is the maximum number of addresses
                        to allocate beyond the addresses needed to reach the PreAllocate
                        watermark. Going above the watermark can help reduce the number
                        of API calls to allocate IPs, e.g. when a new ENI is allocated,
                        as many secondary IPs as possible are allocated. Limiting
                        the amount can help reduce waste of IPs.
                      minimum: 0
                      type: integer
                    max-allocate:
                      description: MaxAllocate is the maximum number of IPs that can
                        be allocated to the node. When the current amount of allocated
                        IPs will approach this value, the considered value for PreAllocate
                        will decrease down to 0 in order to not attempt to allocate
                        more addresses than defined.
                      minimum: 0
                      type: integer
                    min-allocate:
                      description: MinAllocate is the minimum number of IPs that must
                        be allocated when the node is first bootstrapped. It defines
                        the minimum base socket of addresses that must be available.
                        After reaching this watermark, the PreAllocate and MaxAboveWatermark
                        logic takes over to continue allocating IPs.
                      minimum: 0
                      type: integer
                    podCIDRs:
                      description: PodCIDRs is the list of CIDRs available to the
                        node for allocation. When an IP is used, the IP will be added
                        to Status.IPAM.Used
                      items:
                        type: string
                      type: array
                    pool:
                      additionalProperties:
                        description: AllocationIP is an IP which is available for
                          allocation, or already has been allocated
                        properties:
                          owner:
                            description: "Owner is the owner of the IP. This field
                              is set if the IP has been allocated. It will be set
                              to the pod name or another identifier representing the
                              usage of the IP \n The owner field is left blank for
                              an entry in Spec.IPAM.Pool and filled out as the IP
                              is used and also added to Status.IPAM.Used."
                            type: string
                          resource:
                            description: Resource is set for both available and allocated
                              IPs, it represents what resource the IP is associated
                              with, e.g. in combination with AWS ENI, this will refer
                              to the ID of the ENI
                            type: string
                        type: object
                      description: Pool is the list of IPs available to the node for
                        allocation. When an IP is used, the IP will remain on this
                        list but will be added to Status.IPAM.Used
                      type: object
                    pre-allocate:
                      description: PreAllocate defines the number of IP addresses
                        that must be available for allocation in the IPAMspec. It
                        defines the buffer of addresses available immediately without
                        requiring cilium-operator to get involved.
                      minimum: 0
                      type: integer
                  type: object
                nodeidentity:
                  description: NodeIdentity is the Cilium numeric identity allocated
                    for the node, if any.
                  format: int64
                  type: integer
              type: object
            status:
              description: Status defines the realized specification/configuration
                and status of the node.
              properties:
                alibaba-cloud:
                  description: AlibabaCloud is the AlibabaCloud specific status of
                    the node.
                  properties:
                    enis:
                      additionalProperties:
                        description: ENI represents an AlibabaCloud Elastic Network
                          Interface
                        properties:
                          instance-id:
                            description: InstanceID is the InstanceID using this ENI
                            type: string
                          mac-address:
                            description: MACAddress is the mac address of the ENI
                            type: string
                          network-interface-id:
                            description: NetworkInterfaceID is the ENI id
                            type: string
                          primary-ip-address:
                            description: PrimaryIPAddress is the primary IP on ENI
                            type: string
                          private-ipsets:
                            description: PrivateIPSets is the list of all IPs on the
                              ENI, including PrimaryIPAddress
                            items:
                              description: PrivateIPSet is a nested struct in ecs
                                response
                              properties:
                                primary:
                                  type: boolean
                                private-ip-address:
                                  type: string
                              type: object
                            type: array
                          security-groupids:
                            description: SecurityGroupIDs is the security group ids
                              used by this ENI
                            items:
                              type: string
                            type: array
                          tags:
                            additionalProperties:
                              type: string
                            description: Tags is the tags on this ENI
                            type: object
                          type:
                            description: Type is the ENI type Primary or Secondary
                            type: string
                          vpc:
                            description: VPC is the vpc to which the ENI belongs
                            properties:
                              cidr:
                                description: CIDRBlock is the VPC IPv4 CIDR
                                type: string
                              ipv6-cidr:
                                description: IPv6CIDRBlock is the VPC IPv6 CIDR
                                type: string
                              vpc-id:
                                description: VPCID is the vpc to which the ENI belongs
                                type: string
                            type: object
                          vswitch:
                            description: VSwitch is the vSwitch the ENI is using
                            properties:
                              cidr:
                                description: CIDRBlock is the vSwitch IPv4 CIDR
                                type: string
                              ipv6-cidr:
                                description: IPv6CIDRBlock is the vSwitch IPv6 CIDR
                                type: string
                              vswitch-id:
                                description: VSwitchID is the vSwitch to which the
                                  ENI belongs
                                type: string
                            type: object
                          zone-id:
                            description: ZoneID is the zone to which the ENI belongs
                            type: string
                        type: object
                      description: ENIs is the list of ENIs on the node
                      type: object
                  type: object
                azure:
                  description: Azure is the Azure specific status of the node.
                  properties:
                    interfaces:
                      description: Interfaces is the list of interfaces on the node
                      items:
                        description: AzureInterface represents an Azure Interface
                        properties:
                          GatewayIP:
                            description: "GatewayIP is the interface's subnet's default
                              route \n OBSOLETE: This field is obsolete, please use
                              Gateway field instead."
                            type: string
                          addresses:
                            description: Addresses is the list of all IPs associated
                              with the interface, including all secondary addresses
                            items:
                              description: AzureAddress is an IP address assigned
                                to an AzureInterface
                              properties:
                                ip:
                                  description: IP is the ip address of the address
                                  type: string
                                state:
                                  description: State is the provisioning state of
                                    the address
                                  type: string
                                subnet:
                                  description: Subnet is the subnet the address belongs
                                    to
                                  type: string
                              type: object
                            type: array
                          gateway:
                            description: Gateway is the interface's subnet's default
                              route
                            type: string
                          id:
                            description: ID is the identifier
                            type: string
                          mac:
                            description: MAC is the mac address
                            type: string
                          name:
                            description: Name is the name of the interface
                            type: string
                          security-group:
                            description: SecurityGroup is the security group associated
                              with the interface
                            type: string
                          state:
                            description: State is the provisioning state
                            type: string
                        type: object
                      type: array
                  type: object
                eni:
                  description: ENI is the AWS ENI specific status of the node.
                  properties:
                    enis:
                      additionalProperties:
                        description: "ENI represents an AWS Elastic Network Interface
                          \n More details: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html"
                        properties:
                          addresses:
                            description: Addresses is the list of all secondary IPs
                              associated with the ENI
                            items:
                              type: string
                            type: array
                          availability-zone:
                            description: AvailabilityZone is the availability zone
                              of the ENI
                            type: string
                          description:
                            description: Description is the description field of the
                              ENI
                            type: string
                          id:
                            description: ID is the ENI ID
                            type: string
                          ip:
                            description: IP is the primary IP of the ENI
                            type: string
                          mac:
                            description: MAC is the mac address of the ENI
                            type: string
                          number:
                            description: Number is the interface index, it used in
                              combination with FirstInterfaceIndex
                            type: integer
                          security-groups:
                            description: SecurityGroups are the security groups associated
                              with the ENI
                            items:
                              type: string
                            type: array
                          subnet:
                            description: Subnet is the subnet the ENI is associated
                              with
                            properties:
                              cidr:
                                description: CIDR is the CIDR range associated with
                                  the subnet
                                type: string
                              id:
                                description: ID is the ID of the subnet
                                type: string
                            type: object
                          vpc:
                            description: VPC is the VPC information to which the ENI
                              is attached to
                            properties:
                              cidrs:
                                description: CIDRs is the list of CIDR ranges associated
                                  with the VPC
                                items:
                                  type: string
                                type: array
                              id:
                                description: / ID is the ID of a VPC
                                type: string
                              primary-cidr:
                                description: PrimaryCIDR is the primary CIDR of the
                                  VPC
                                type: string
                            type: object
                        type: object
                      description: ENIs is the list of ENIs on the node
                      type: object
                  type: object
                ipam:
                  description: IPAM is the IPAM status of the node.
                  properties:
                    operator-status:
                      description: Operator is the Operator status of the node
                      properties:
                        error:
                          description: Error is the error message set by cilium-operator.
                          type: string
                      type: object
                    used:
                      additionalProperties:
                        description: AllocationIP is an IP which is available for
                          allocation, or already has been allocated
                        properties:
                          owner:
                            description: "Owner is the owner of the IP. This field
                              is set if the IP has been allocated. It will be set
                              to the pod name or another identifier representing the
                              usage of the IP \n The owner field is left blank for
                              an entry in Spec.IPAM.Pool and filled out as the IP
                              is used and also added to Status.IPAM.Used."
                            type: string
                          resource:
                            description: Resource is set for both available and allocated
                              IPs, it represents what resource the IP is associated
                              with, e.g. in combination with AWS ENI, this will refer
                              to the ID of the ENI
                            type: string
                        type: object
                      description: Used lists all IPs out of Spec.IPAM.Pool which
                        have been allocated and are in use.
                      type: object
                  type: object
              type: object
          required:
          - metadata
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: CiliumNode
      listKind: CiliumNodeList
      plural: ciliumnodes
      shortNames:
      - cn
      - ciliumn
      singular: ciliumnode
    conditions:
    - lastTransitionTime: "2021-12-04T16:58:55Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-04T16:58:55Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v2
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2021-12-16T17:27:05Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-triggers
      kustomize.toolkit.fluxcd.io/name: tekton
      kustomize.toolkit.fluxcd.io/namespace: flux-system
      triggers.tekton.dev/release: v0.17.1
      version: v0.17.1
    name: clusterinterceptors.triggers.tekton.dev
    resourceVersion: "10150255"
    uid: 98d3a9c5-e263-4a19-a484-34f82ebb2812
  spec:
    conversion:
      strategy: None
    group: triggers.tekton.dev
    names:
      categories:
      - tekton
      - tekton-triggers
      kind: ClusterInterceptor
      listKind: ClusterInterceptorList
      plural: clusterinterceptors
      shortNames:
      - ci
      singular: clusterinterceptor
    scope: Cluster
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - tekton
      - tekton-triggers
      kind: ClusterInterceptor
      listKind: ClusterInterceptorList
      plural: clusterinterceptors
      shortNames:
      - ci
      singular: clusterinterceptor
    conditions:
    - lastTransitionTime: "2021-12-16T17:27:05Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-16T17:27:05Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from-secret: cert-manager/cert-manager-cert-manager-webhook-ca
      meta.helm.sh/release-name: cert-manager-cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2021-12-04T17:04:19Z"
    generation: 2
    labels:
      app: cert-manager
      app.kubernetes.io/instance: cert-manager-cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.6.1
      helm.sh/chart: cert-manager-v1.6.1
      helm.toolkit.fluxcd.io/name: cert-manager
      helm.toolkit.fluxcd.io/namespace: flux-system
    name: clusterissuers.cert-manager.io
    resourceVersion: "2493"
    uid: 6ca73145-2140-4de7-9e92-202afc1bb234
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJ3ekNDQVVpZ0F3SUJBZ0lSQUp1UTVrL2dQcjIxSmxZcm9PRlhWdnd3Q2dZSUtvWkl6ajBFQXdNd0lqRWcKTUI0R0ExVUVBeE1YWTJWeWRDMXRZVzVoWjJWeUxYZGxZbWh2YjJzdFkyRXdIaGNOTWpFeE1qQTBNVGN3TkRJNQpXaGNOTWpJeE1qQTBNVGN3TkRJNVdqQWlNU0F3SGdZRFZRUURFeGRqWlhKMExXMWhibUZuWlhJdGQyVmlhRzl2CmF5MWpZVEIyTUJBR0J5cUdTTTQ5QWdFR0JTdUJCQUFpQTJJQUJNeXNkL090dkRqYVZ6ZXBvMXhabks5aVRsOVAKeHZ3L3ljZkg0UU80VHozSFhPT3A3U1p4WjhsWlA4WHFuZGpWdnl6dm9ka0hxMFUrbjdySjQ5aEt2aEtWRS81SQphdjRtM2NBZ1NFUVh4aXh0NmFaWDc2cXkydmNMMmZQTnpWK1NFNk5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trCk1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZOQ014dTNWSmJTV1VNbzJXYUg2SEV2a0prTjkKTUFvR0NDcUdTTTQ5QkFNREEya0FNR1lDTVFDZ2JkUVBiZ2s1K2J2UjEyZ1l6VVQwSlJLeG1WRHRBeXRwWVN2ZQpjQXc0TVBXNFNjN0ptbjEyNHg5cG0rUTJvTE1DTVFDUnc4RDBpWnVCV1RnVE5OT2htVEh1MklRVXBJaFNtR3REClg4ZW5aZ1FmdEVBTVJzaHQwVUl6bXVlWmVSTlhUd0E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
          service:
            name: cert-manager-cert-manager-webhook
            namespace: cert-manager
            path: /convert
            port: 443
        conversionReviewVersions:
        - v1
        - v1beta1
    group: cert-manager.io
    names:
      categories:
      - cert-manager
      kind: ClusterIssuer
      listKind: ClusterIssuerList
      plural: clusterissuers
      singular: clusterissuer
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: A ClusterIssuer represents a certificate issuing authority
            which can be referenced as part of `issuerRef` fields. It is similar to
            an Issuer, however it is cluster-scoped and therefore can be referenced
            by resources that exist in *any* namespace, not just the same namespace
            as the referent.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the ClusterIssuer resource.
              properties:
                acme:
                  description: ACME configures this issuer to communicate with a RFC8555
                    (ACME) server to obtain signed x509 certificates.
                  properties:
                    disableAccountKeyGeneration:
                      description: Enables or disables generating a new ACME account
                        key. If true, the Issuer resource will *not* request a new
                        account but will expect the account key to be supplied via
                        an existing secret. If false, the cert-manager system will
                        generate a new ACME account key for the Issuer. Defaults to
                        false.
                      type: boolean
                    email:
                      description: Email is the email address to be associated with
                        the ACME account. This field is optional, but it is strongly
                        recommended to be set. It will be used to contact you in case
                        of issues with your account or certificates, including expiry
                        notification emails. This field may be updated after the account
                        is initially registered.
                      type: string
                    enableDurationFeature:
                      description: Enables requesting a Not After date on certificates
                        that matches the duration of the certificate. This is not
                        supported by all ACME servers like Let's Encrypt. If set to
                        true when the ACME server does not support it it will create
                        an error on the Order. Defaults to false.
                      type: boolean
                    externalAccountBinding:
                      description: ExternalAccountBinding is a reference to a CA external
                        account of the ACME server. If set, upon registration cert-manager
                        will attempt to associate the given external account credentials
                        with the registered ACME account.
                      properties:
                        keyAlgorithm:
                          description: 'Deprecated: keyAlgorithm field exists for
                            historical compatibility reasons and should not be used.
                            The algorithm is now hardcoded to HS256 in golang/x/crypto/acme.'
                          enum:
                          - HS256
                          - HS384
                          - HS512
                          type: string
                        keyID:
                          description: keyID is the ID of the CA key that the External
                            Account is bound to.
                          type: string
                        keySecretRef:
                          description: keySecretRef is a Secret Key Selector referencing
                            a data item in a Kubernetes Secret which holds the symmetric
                            MAC key of the External Account Binding. The `key` is
                            the index string that is paired with the key data in the
                            Secret and should not be confused with the key data itself,
                            or indeed with the External Account Binding keyID above.
                            The secret key stored in the Secret **must** be un-padded,
                            base64 URL encoded data.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - keyID
                      - keySecretRef
                      type: object
                    preferredChain:
                      description: 'PreferredChain is the chain to use if the ACME
                        server outputs multiple. PreferredChain is no guarantee that
                        this one gets delivered by the ACME endpoint. For example,
                        for Let''s Encrypt''s DST crosssign you would use: "DST Root
                        CA X3" or "ISRG Root X1" for the newer Let''s Encrypt root
                        CA. This value picks the first certificate bundle in the ACME
                        alternative chains that has a certificate with this value
                        as its issuer''s CN'
                      maxLength: 64
                      type: string
                    privateKeySecretRef:
                      description: PrivateKey is the name of a Kubernetes Secret resource
                        that will be used to store the automatically generated ACME
                        account private key. Optionally, a `key` may be specified
                        to select a specific entry within the named Secret resource.
                        If `key` is not specified, a default of `tls.key` will be
                        used.
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                      required:
                      - name
                      type: object
                    server:
                      description: 'Server is the URL used to access the ACME server''s
                        ''directory'' endpoint. For example, for Let''s Encrypt''s
                        staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory".
                        Only ACME v2 endpoints (i.e. RFC 8555) are supported.'
                      type: string
                    skipTLSVerify:
                      description: Enables or disables validation of the ACME server
                        TLS certificate. If true, requests to the ACME server will
                        not have their TLS certificate validated (i.e. insecure connections
                        will be allowed). Only enable this option in development environments.
                        The cert-manager system installed roots will be used to verify
                        connections to the ACME server if this is false. Defaults
                        to false.
                      type: boolean
                    solvers:
                      description: 'Solvers is a list of challenge solvers that will
                        be used to solve ACME challenges for the matching domains.
                        Solver configurations must be provided in order to obtain
                        certificates from an ACME server. For more information, see:
                        https://cert-manager.io/docs/configuration/acme/'
                      items:
                        description: Configures an issuer to solve challenges using
                          the specified options. Only one of HTTP01 or DNS01 may be
                          provided.
                        properties:
                          dns01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the DNS01 challenge flow.
                            properties:
                              acmedns:
                                description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                                  API to manage DNS01 challenge records.
                                properties:
                                  accountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  host:
                                    type: string
                                required:
                                - accountSecretRef
                                - host
                                type: object
                              akamai:
                                description: Use the Akamai DNS zone management API
                                  to manage DNS01 challenge records.
                                properties:
                                  accessTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientSecretSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  serviceConsumerDomain:
                                    type: string
                                required:
                                - accessTokenSecretRef
                                - clientSecretSecretRef
                                - clientTokenSecretRef
                                - serviceConsumerDomain
                                type: object
                              azuredns:
                                description: Use the Microsoft Azure DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  clientID:
                                    description: if both this and ClientSecret are
                                      left unset MSI will be used
                                    type: string
                                  clientSecretSecretRef:
                                    description: if both this and ClientID are left
                                      unset MSI will be used
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  environment:
                                    description: name of the Azure environment (default
                                      AzurePublicCloud)
                                    enum:
                                    - AzurePublicCloud
                                    - AzureChinaCloud
                                    - AzureGermanCloud
                                    - AzureUSGovernmentCloud
                                    type: string
                                  hostedZoneName:
                                    description: name of the DNS zone that should
                                      be used
                                    type: string
                                  managedIdentity:
                                    description: managed identity configuration, can
                                      not be used at the same time as clientID, clientSecretSecretRef
                                      or tenantID
                                    properties:
                                      clientID:
                                        description: client ID of the managed identity,
                                          can not be used at the same time as resourceID
                                        type: string
                                      resourceID:
                                        description: resource ID of the managed identity,
                                          can not be used at the same time as clientID
                                        type: string
                                    type: object
                                  resourceGroupName:
                                    description: resource group the DNS zone is located
                                      in
                                    type: string
                                  subscriptionID:
                                    description: ID of the Azure subscription
                                    type: string
                                  tenantID:
                                    description: when specifying ClientID and ClientSecret
                                      then this field is also needed
                                    type: string
                                required:
                                - resourceGroupName
                                - subscriptionID
                                type: object
                              clouddns:
                                description: Use the Google Cloud DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  hostedZoneName:
                                    description: HostedZoneName is an optional field
                                      that tells cert-manager in which Cloud DNS zone
                                      the challenge record has to be created. If left
                                      empty cert-manager will automatically choose
                                      a zone.
                                    type: string
                                  project:
                                    type: string
                                  serviceAccountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - project
                                type: object
                              cloudflare:
                                description: Use the Cloudflare API to manage DNS01
                                  challenge records.
                                properties:
                                  apiKeySecretRef:
                                    description: 'API key to use to authenticate with
                                      Cloudflare. Note: using an API token to authenticate
                                      is now the recommended method as it allows greater
                                      control of permissions.'
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  apiTokenSecretRef:
                                    description: API token used to authenticate with
                                      Cloudflare.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  email:
                                    description: Email of the account, only required
                                      when using API key based authentication.
                                    type: string
                                type: object
                              cnameStrategy:
                                description: CNAMEStrategy configures how the DNS01
                                  provider should handle CNAME records when found
                                  in DNS zones.
                                enum:
                                - None
                                - Follow
                                type: string
                              digitalocean:
                                description: Use the DigitalOcean DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  tokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - tokenSecretRef
                                type: object
                              rfc2136:
                                description: Use RFC2136 ("Dynamic Updates in the
                                  Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                                  to manage DNS01 challenge records.
                                properties:
                                  nameserver:
                                    description: The IP address or hostname of an
                                      authoritative DNS server supporting RFC2136
                                      in the form host:port. If the host is an IPv6
                                      address it must be enclosed in square brackets
                                      (e.g [2001:db8::1]) ; port is optional. This
                                      field is required.
                                    type: string
                                  tsigAlgorithm:
                                    description: 'The TSIG Algorithm configured in
                                      the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                      and ``tsigKeyName`` are defined. Supported values
                                      are (case-insensitive): ``HMACMD5`` (default),
                                      ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'
                                    type: string
                                  tsigKeyName:
                                    description: The TSIG Key name configured in the
                                      DNS. If ``tsigSecretSecretRef`` is defined,
                                      this field is required.
                                    type: string
                                  tsigSecretSecretRef:
                                    description: The name of the secret containing
                                      the TSIG value. If ``tsigKeyName`` is defined,
                                      this field is required.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - nameserver
                                type: object
                              route53:
                                description: Use the AWS Route53 API to manage DNS01
                                  challenge records.
                                properties:
                                  accessKeyID:
                                    description: 'The AccessKeyID is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata see:
                                      https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    type: string
                                  hostedZoneID:
                                    description: If set, the provider will manage
                                      only this zone in Route53 and will not do an
                                      lookup using the route53:ListHostedZonesByName
                                      api call.
                                    type: string
                                  region:
                                    description: Always set the region when using
                                      AccessKeyID and SecretAccessKey
                                    type: string
                                  role:
                                    description: Role is a Role ARN which the Route53
                                      provider will assume using either the explicit
                                      credentials AccessKeyID/SecretAccessKey or the
                                      inferred credentials from environment variables,
                                      shared credentials file or AWS Instance metadata
                                    type: string
                                  secretAccessKeySecretRef:
                                    description: The SecretAccessKey is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - region
                                type: object
                              webhook:
                                description: Configure an external webhook based DNS01
                                  challenge solver to manage DNS01 challenge records.
                                properties:
                                  config:
                                    description: Additional configuration that should
                                      be passed to the webhook apiserver when challenges
                                      are processed. This can contain arbitrary JSON
                                      data. Secret values should not be specified
                                      in this stanza. If secret values are needed
                                      (e.g. credentials for a DNS service), you should
                                      use a SecretKeySelector to reference a Secret
                                      resource. For details on the schema of this
                                      field, consult the webhook provider implementation's
                                      documentation.
                                    x-kubernetes-preserve-unknown-fields: true
                                  groupName:
                                    description: The API group name that should be
                                      used when POSTing ChallengePayload resources
                                      to the webhook apiserver. This should be the
                                      same as the GroupName specified in the webhook
                                      provider implementation.
                                    type: string
                                  solverName:
                                    description: The name of the solver to use, as
                                      defined in the webhook provider implementation.
                                      This will typically be the name of the provider,
                                      e.g. 'cloudflare'.
                                    type: string
                                required:
                                - groupName
                                - solverName
                                type: object
                            type: object
                          http01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the HTTP01 challenge flow.
                              It is not possible to obtain certificates for wildcard
                              domain names (e.g. `*.example.com`) using the HTTP01
                              challenge mechanism.
                            properties:
                              gatewayHTTPRoute:
                                description: The Gateway API is a sig-network community
                                  API that models service networking in Kubernetes
                                  (https://gateway-api.sigs.k8s.io/). The Gateway
                                  solver will create HTTPRoutes with the specified
                                  labels in the same namespace as the challenge. This
                                  solver is experimental, and fields / behaviour may
                                  change in the future.
                                properties:
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: The labels that cert-manager will
                                      use when creating the temporary HTTPRoute needed
                                      for solving the HTTP-01 challenge. These labels
                                      must match the label selector of at least one
                                      Gateway.
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                              ingress:
                                description: The ingress based HTTP01 challenge solver
                                  will solve challenges by creating or modifying Ingress
                                  resources in order to route requests for '/.well-known/acme-challenge/XYZ'
                                  to 'challenge solver' pods that are provisioned
                                  by cert-manager for each Challenge to be completed.
                                properties:
                                  class:
                                    description: The ingress class to use when creating
                                      Ingress resources to solve ACME challenges that
                                      use this challenge solver. Only one of 'class'
                                      or 'name' may be specified.
                                    type: string
                                  ingressTemplate:
                                    description: Optional ingress template used to
                                      configure the ACME challenge solver ingress
                                      used for HTTP01 challenges
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          ingress used to solve HTTP01 challenges.
                                          Only the 'labels' and 'annotations' fields
                                          may be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the created ACME HTTP01 solver
                                              ingress.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver ingress.
                                            type: object
                                        type: object
                                    type: object
                                  name:
                                    description: The name of the ingress resource
                                      that should have ACME challenge solving routes
                                      inserted into it in order to solve HTTP01 challenges.
                                      This is typically used in conjunction with ingress
                                      controllers like ingress-gce, which maintains
                                      a 1:1 mapping between external IPs and ingress
                                      resources.
                                    type: string
                                  podTemplate:
                                    description: Optional pod template used to configure
                                      the ACME challenge solver pods used for HTTP01
                                      challenges.
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          pod used to solve HTTP01 challenges. Only
                                          the 'labels' and 'annotations' fields may
                                          be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the create ACME HTTP01 solver
                                              pods.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver pods.
                                            type: object
                                        type: object
                                      spec:
                                        description: PodSpec defines overrides for
                                          the HTTP01 challenge solver pod. Only the
                                          'priorityClassName', 'nodeSelector', 'affinity',
                                          'serviceAccountName' and 'tolerations' fields
                                          are supported currently. All other fields
                                          will be ignored.
                                        properties:
                                          affinity:
                                            description: If specified, the pod's scheduling
                                              constraints
                                            properties:
                                              nodeAffinity:
                                                description: Describes node affinity
                                                  scheduling rules for the pod.
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      matches the corresponding matchExpressions;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: An empty preferred
                                                        scheduling term matches all
                                                        objects with implicit weight
                                                        0 (i.e. it's a no-op). A null
                                                        preferred scheduling term
                                                        matches no objects (i.e. is
                                                        also a no-op).
                                                      properties:
                                                        preference:
                                                          description: A node selector
                                                            term, associated with
                                                            the corresponding weight.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        weight:
                                                          description: Weight associated
                                                            with matching the corresponding
                                                            nodeSelectorTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - preference
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to an update), the system
                                                      may or may not try to eventually
                                                      evict the pod from its node.
                                                    properties:
                                                      nodeSelectorTerms:
                                                        description: Required. A list
                                                          of node selector terms.
                                                          The terms are ORed.
                                                        items:
                                                          description: A null or empty
                                                            node selector term matches
                                                            no objects. The requirements
                                                            of them are ANDed. The
                                                            TopologySelectorTerm type
                                                            implements a subset of
                                                            the NodeSelectorTerm.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        type: array
                                                    required:
                                                    - nodeSelectorTerms
                                                    type: object
                                                type: object
                                              podAffinity:
                                                description: Describes pod affinity
                                                  scheduling rules (e.g. co-locate
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      has pods which matches the corresponding
                                                      podAffinityTerm; the node(s)
                                                      with the highest sum are the
                                                      most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is beta-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is beta-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                              podAntiAffinity:
                                                description: Describes pod anti-affinity
                                                  scheduling rules (e.g. avoid putting
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the anti-affinity
                                                      expressions specified by this
                                                      field, but it may choose a node
                                                      that violates one or more of
                                                      the expressions. The node that
                                                      is most preferred is the one
                                                      with the greatest sum of weights,
                                                      i.e. for each node that meets
                                                      all of the scheduling requirements
                                                      (resource request, requiredDuringScheduling
                                                      anti-affinity expressions, etc.),
                                                      compute a sum by iterating through
                                                      the elements of this field and
                                                      adding "weight" to the sum if
                                                      the node has pods which matches
                                                      the corresponding podAffinityTerm;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is beta-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the anti-affinity
                                                      requirements specified by this
                                                      field are not met at scheduling
                                                      time, the pod will not be scheduled
                                                      onto the node. If the anti-affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is beta-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                            type: object
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: 'NodeSelector is a selector
                                              which must be true for the pod to fit
                                              on a node. Selector which must match
                                              a node''s labels for the pod to be scheduled
                                              on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                            type: object
                                          priorityClassName:
                                            description: If specified, the pod's priorityClassName.
                                            type: string
                                          serviceAccountName:
                                            description: If specified, the pod's service
                                              account
                                            type: string
                                          tolerations:
                                            description: If specified, the pod's tolerations.
                                            items:
                                              description: The pod this Toleration
                                                is attached to tolerates any taint
                                                that matches the triple <key,value,effect>
                                                using the matching operator <operator>.
                                              properties:
                                                effect:
                                                  description: Effect indicates the
                                                    taint effect to match. Empty means
                                                    match all taint effects. When
                                                    specified, allowed values are
                                                    NoSchedule, PreferNoSchedule and
                                                    NoExecute.
                                                  type: string
                                                key:
                                                  description: Key is the taint key
                                                    that the toleration applies to.
                                                    Empty means match all taint keys.
                                                    If the key is empty, operator
                                                    must be Exists; this combination
                                                    means to match all values and
                                                    all keys.
                                                  type: string
                                                operator:
                                                  description: Operator represents
                                                    a key's relationship to the value.
                                                    Valid operators are Exists and
                                                    Equal. Defaults to Equal. Exists
                                                    is equivalent to wildcard for
                                                    value, so that a pod can tolerate
                                                    all taints of a particular category.
                                                  type: string
                                                tolerationSeconds:
                                                  description: TolerationSeconds represents
                                                    the period of time the toleration
                                                    (which must be of effect NoExecute,
                                                    otherwise this field is ignored)
                                                    tolerates the taint. By default,
                                                    it is not set, which means tolerate
                                                    the taint forever (do not evict).
                                                    Zero and negative values will
                                                    be treated as 0 (evict immediately)
                                                    by the system.
                                                  format: int64
                                                  type: integer
                                                value:
                                                  description: Value is the taint
                                                    value the toleration matches to.
                                                    If the operator is Exists, the
                                                    value should be empty, otherwise
                                                    just a regular string.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                            type: object
                          selector:
                            description: Selector selects a set of DNSNames on the
                              Certificate resource that should be solved using this
                              challenge solver. If not specified, the solver will
                              be treated as the 'default' solver with the lowest priority,
                              i.e. if any other solver has a more specific match,
                              it will be used instead.
                            properties:
                              dnsNames:
                                description: List of DNSNames that this solver will
                                  be used to solve. If specified and a match is found,
                                  a dnsNames selector will take precedence over a
                                  dnsZones selector. If multiple solvers match with
                                  the same dnsNames value, the solver with the most
                                  matching labels in matchLabels will be selected.
                                  If neither has more matches, the solver defined
                                  earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              dnsZones:
                                description: List of DNSZones that this solver will
                                  be used to solve. The most specific DNS zone match
                                  specified here will take precedence over other DNS
                                  zone matches, so a solver specifying sys.example.com
                                  will be selected over one specifying example.com
                                  for the domain www.sys.example.com. If multiple
                                  solvers match with the same dnsZones value, the
                                  solver with the most matching labels in matchLabels
                                  will be selected. If neither has more matches, the
                                  solver defined earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: A label selector that is used to refine
                                  the set of certificate's that this challenge solver
                                  will apply to.
                                type: object
                            type: object
                        type: object
                      type: array
                  required:
                  - privateKeySecretRef
                  - server
                  type: object
                ca:
                  description: CA configures this issuer to sign certificates using
                    a signing CA keypair stored in a Secret resource. This is used
                    to build internal PKIs that are managed by cert-manager.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set, certificates will be issued without distribution points
                        set.
                      items:
                        type: string
                      type: array
                    ocspServers:
                      description: The OCSP server list is an X.509 v3 extension that
                        defines a list of URLs of OCSP responders. The OCSP responders
                        can be queried for the revocation status of an issued certificate.
                        If not set, the certificate will be issued with no OCSP servers
                        set. For example, an OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
                      items:
                        type: string
                      type: array
                    secretName:
                      description: SecretName is the name of the secret used to sign
                        Certificates issued by this Issuer.
                      type: string
                  required:
                  - secretName
                  type: object
                selfSigned:
                  description: SelfSigned configures this issuer to 'self sign' certificates
                    using the private key used to create the CertificateRequest object.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set certificate will be issued without CDP. Values are strings.
                      items:
                        type: string
                      type: array
                  type: object
                vault:
                  description: Vault configures this issuer to sign certificates using
                    a HashiCorp Vault PKI backend.
                  properties:
                    auth:
                      description: Auth configures how cert-manager authenticates
                        with the Vault server.
                      properties:
                        appRole:
                          description: AppRole authenticates with Vault using the
                            App Role auth mechanism, with the role and secret stored
                            in a Kubernetes Secret resource.
                          properties:
                            path:
                              description: 'Path where the App Role authentication
                                backend is mounted in Vault, e.g: "approle"'
                              type: string
                            roleId:
                              description: RoleID configured in the App Role authentication
                                backend when setting up the authentication backend
                                in Vault.
                              type: string
                            secretRef:
                              description: Reference to a key in a Secret that contains
                                the App Role secret used to authenticate with Vault.
                                The `key` field must be specified and denotes which
                                entry within the Secret resource is used as the app
                                role secret.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - path
                          - roleId
                          - secretRef
                          type: object
                        kubernetes:
                          description: Kubernetes authenticates with Vault by passing
                            the ServiceAccount token stored in the named Secret resource
                            to the Vault server.
                          properties:
                            mountPath:
                              description: The Vault mountPath here is the mount path
                                to use when authenticating with Vault. For example,
                                setting a value to `/v1/auth/foo`, will use the path
                                `/v1/auth/foo/login` to authenticate with Vault. If
                                unspecified, the default value "/v1/auth/kubernetes"
                                will be used.
                              type: string
                            role:
                              description: A required field containing the Vault Role
                                to assume. A Role binds a Kubernetes ServiceAccount
                                with a set of Vault policies.
                              type: string
                            secretRef:
                              description: The required Secret field containing a
                                Kubernetes ServiceAccount JWT used for authenticating
                                with Vault. Use of 'ambient credentials' is not supported.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - role
                          - secretRef
                          type: object
                        tokenSecretRef:
                          description: TokenSecretRef authenticates with Vault by
                            presenting a token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    caBundle:
                      description: PEM-encoded CA bundle (base64-encoded) used to
                        validate Vault server certificate. Only used if the Server
                        URL is using HTTPS protocol. This parameter is ignored for
                        plain HTTP protocol connection. If not set the system root
                        certificates are used to validate the TLS connection.
                      format: byte
                      type: string
                    namespace:
                      description: 'Name of the vault namespace. Namespaces is a set
                        of features within Vault Enterprise that allows Vault environments
                        to support Secure Multi-tenancy. e.g: "ns1" More about namespaces
                        can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                      type: string
                    path:
                      description: 'Path is the mount path of the Vault PKI backend''s
                        `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".'
                      type: string
                    server:
                      description: 'Server is the connection address for the Vault
                        server, e.g: "https://vault.example.com:8200".'
                      type: string
                  required:
                  - auth
                  - path
                  - server
                  type: object
                venafi:
                  description: Venafi configures this issuer to sign certificates
                    using a Venafi TPP or Venafi Cloud policy zone.
                  properties:
                    cloud:
                      description: Cloud specifies the Venafi cloud configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        apiTokenSecretRef:
                          description: APITokenSecretRef is a secret key selector
                            for the Venafi Cloud API token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: URL is the base URL for Venafi Cloud. Defaults
                            to "https://api.venafi.cloud/v1".
                          type: string
                      required:
                      - apiTokenSecretRef
                      type: object
                    tpp:
                      description: TPP specifies Trust Protection Platform configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        caBundle:
                          description: CABundle is a PEM encoded TLS certificate to
                            use to verify connections to the TPP instance. If specified,
                            system roots will not be used and the issuing CA for the
                            TPP instance must be verifiable using the provided root.
                            If not specified, the connection will be verified using
                            the cert-manager system root certificates.
                          format: byte
                          type: string
                        credentialsRef:
                          description: CredentialsRef is a reference to a Secret containing
                            the username and password for the TPP server. The secret
                            must contain two keys, 'username' and 'password'.
                          properties:
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: 'URL is the base URL for the vedsdk endpoint
                            of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".'
                          type: string
                      required:
                      - credentialsRef
                      - url
                      type: object
                    zone:
                      description: Zone is the Venafi Policy Zone to use for this
                        issuer. All requests made to the Venafi platform will be restricted
                        by the named zone policy. This field is required.
                      type: string
                  required:
                  - zone
                  type: object
              type: object
            status:
              description: Status of the ClusterIssuer. This is set and managed automatically.
              properties:
                acme:
                  description: ACME specific status options. This field should only
                    be set if the Issuer is configured to use an ACME server to issue
                    certificates.
                  properties:
                    lastRegisteredEmail:
                      description: LastRegisteredEmail is the email associated with
                        the latest registered ACME account, in order to track changes
                        made to registered account associated with the  Issuer
                      type: string
                    uri:
                      description: URI is the unique account identifier, which can
                        also be used to retrieve account details from the CA
                      type: string
                  type: object
                conditions:
                  description: List of status conditions to indicate the status of
                    a CertificateRequest. Known condition types are `Ready`.
                  items:
                    description: IssuerCondition contains condition information for
                      an Issuer.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.condition[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the Issuer.
                        format: int64
                        type: integer
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
              type: object
          type: object
      served: false
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha3
      schema:
        openAPIV3Schema:
          description: A ClusterIssuer represents a certificate issuing authority
            which can be referenced as part of `issuerRef` fields. It is similar to
            an Issuer, however it is cluster-scoped and therefore can be referenced
            by resources that exist in *any* namespace, not just the same namespace
            as the referent.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the ClusterIssuer resource.
              properties:
                acme:
                  description: ACME configures this issuer to communicate with a RFC8555
                    (ACME) server to obtain signed x509 certificates.
                  properties:
                    disableAccountKeyGeneration:
                      description: Enables or disables generating a new ACME account
                        key. If true, the Issuer resource will *not* request a new
                        account but will expect the account key to be supplied via
                        an existing secret. If false, the cert-manager system will
                        generate a new ACME account key for the Issuer. Defaults to
                        false.
                      type: boolean
                    email:
                      description: Email is the email address to be associated with
                        the ACME account. This field is optional, but it is strongly
                        recommended to be set. It will be used to contact you in case
                        of issues with your account or certificates, including expiry
                        notification emails. This field may be updated after the account
                        is initially registered.
                      type: string
                    enableDurationFeature:
                      description: Enables requesting a Not After date on certificates
                        that matches the duration of the certificate. This is not
                        supported by all ACME servers like Let's Encrypt. If set to
                        true when the ACME server does not support it it will create
                        an error on the Order. Defaults to false.
                      type: boolean
                    externalAccountBinding:
                      description: ExternalAccountBinding is a reference to a CA external
                        account of the ACME server. If set, upon registration cert-manager
                        will attempt to associate the given external account credentials
                        with the registered ACME account.
                      properties:
                        keyAlgorithm:
                          description: 'Deprecated: keyAlgorithm field exists for
                            historical compatibility reasons and should not be used.
                            The algorithm is now hardcoded to HS256 in golang/x/crypto/acme.'
                          enum:
                          - HS256
                          - HS384
                          - HS512
                          type: string
                        keyID:
                          description: keyID is the ID of the CA key that the External
                            Account is bound to.
                          type: string
                        keySecretRef:
                          description: keySecretRef is a Secret Key Selector referencing
                            a data item in a Kubernetes Secret which holds the symmetric
                            MAC key of the External Account Binding. The `key` is
                            the index string that is paired with the key data in the
                            Secret and should not be confused with the key data itself,
                            or indeed with the External Account Binding keyID above.
                            The secret key stored in the Secret **must** be un-padded,
                            base64 URL encoded data.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - keyID
                      - keySecretRef
                      type: object
                    preferredChain:
                      description: 'PreferredChain is the chain to use if the ACME
                        server outputs multiple. PreferredChain is no guarantee that
                        this one gets delivered by the ACME endpoint. For example,
                        for Let''s Encrypt''s DST crosssign you would use: "DST Root
                        CA X3" or "ISRG Root X1" for the newer Let''s Encrypt root
                        CA. This value picks the first certificate bundle in the ACME
                        alternative chains that has a certificate with this value
                        as its issuer''s CN'
                      maxLength: 64
                      type: string
                    privateKeySecretRef:
                      description: PrivateKey is the name of a Kubernetes Secret resource
                        that will be used to store the automatically generated ACME
                        account private key. Optionally, a `key` may be specified
                        to select a specific entry within the named Secret resource.
                        If `key` is not specified, a default of `tls.key` will be
                        used.
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                      required:
                      - name
                      type: object
                    server:
                      description: 'Server is the URL used to access the ACME server''s
                        ''directory'' endpoint. For example, for Let''s Encrypt''s
                        staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory".
                        Only ACME v2 endpoints (i.e. RFC 8555) are supported.'
                      type: string
                    skipTLSVerify:
                      description: Enables or disables validation of the ACME server
                        TLS certificate. If true, requests to the ACME server will
                        not have their TLS certificate validated (i.e. insecure connections
                        will be allowed). Only enable this option in development environments.
                        The cert-manager system installed roots will be used to verify
                        connections to the ACME server if this is false. Defaults
                        to false.
                      type: boolean
                    solvers:
                      description: 'Solvers is a list of challenge solvers that will
                        be used to solve ACME challenges for the matching domains.
                        Solver configurations must be provided in order to obtain
                        certificates from an ACME server. For more information, see:
                        https://cert-manager.io/docs/configuration/acme/'
                      items:
                        description: Configures an issuer to solve challenges using
                          the specified options. Only one of HTTP01 or DNS01 may be
                          provided.
                        properties:
                          dns01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the DNS01 challenge flow.
                            properties:
                              acmedns:
                                description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                                  API to manage DNS01 challenge records.
                                properties:
                                  accountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  host:
                                    type: string
                                required:
                                - accountSecretRef
                                - host
                                type: object
                              akamai:
                                description: Use the Akamai DNS zone management API
                                  to manage DNS01 challenge records.
                                properties:
                                  accessTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientSecretSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  serviceConsumerDomain:
                                    type: string
                                required:
                                - accessTokenSecretRef
                                - clientSecretSecretRef
                                - clientTokenSecretRef
                                - serviceConsumerDomain
                                type: object
                              azuredns:
                                description: Use the Microsoft Azure DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  clientID:
                                    description: if both this and ClientSecret are
                                      left unset MSI will be used
                                    type: string
                                  clientSecretSecretRef:
                                    description: if both this and ClientID are left
                                      unset MSI will be used
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  environment:
                                    description: name of the Azure environment (default
                                      AzurePublicCloud)
                                    enum:
                                    - AzurePublicCloud
                                    - AzureChinaCloud
                                    - AzureGermanCloud
                                    - AzureUSGovernmentCloud
                                    type: string
                                  hostedZoneName:
                                    description: name of the DNS zone that should
                                      be used
                                    type: string
                                  managedIdentity:
                                    description: managed identity configuration, can
                                      not be used at the same time as clientID, clientSecretSecretRef
                                      or tenantID
                                    properties:
                                      clientID:
                                        description: client ID of the managed identity,
                                          can not be used at the same time as resourceID
                                        type: string
                                      resourceID:
                                        description: resource ID of the managed identity,
                                          can not be used at the same time as clientID
                                        type: string
                                    type: object
                                  resourceGroupName:
                                    description: resource group the DNS zone is located
                                      in
                                    type: string
                                  subscriptionID:
                                    description: ID of the Azure subscription
                                    type: string
                                  tenantID:
                                    description: when specifying ClientID and ClientSecret
                                      then this field is also needed
                                    type: string
                                required:
                                - resourceGroupName
                                - subscriptionID
                                type: object
                              clouddns:
                                description: Use the Google Cloud DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  hostedZoneName:
                                    description: HostedZoneName is an optional field
                                      that tells cert-manager in which Cloud DNS zone
                                      the challenge record has to be created. If left
                                      empty cert-manager will automatically choose
                                      a zone.
                                    type: string
                                  project:
                                    type: string
                                  serviceAccountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - project
                                type: object
                              cloudflare:
                                description: Use the Cloudflare API to manage DNS01
                                  challenge records.
                                properties:
                                  apiKeySecretRef:
                                    description: 'API key to use to authenticate with
                                      Cloudflare. Note: using an API token to authenticate
                                      is now the recommended method as it allows greater
                                      control of permissions.'
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  apiTokenSecretRef:
                                    description: API token used to authenticate with
                                      Cloudflare.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  email:
                                    description: Email of the account, only required
                                      when using API key based authentication.
                                    type: string
                                type: object
                              cnameStrategy:
                                description: CNAMEStrategy configures how the DNS01
                                  provider should handle CNAME records when found
                                  in DNS zones.
                                enum:
                                - None
                                - Follow
                                type: string
                              digitalocean:
                                description: Use the DigitalOcean DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  tokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - tokenSecretRef
                                type: object
                              rfc2136:
                                description: Use RFC2136 ("Dynamic Updates in the
                                  Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                                  to manage DNS01 challenge records.
                                properties:
                                  nameserver:
                                    description: The IP address or hostname of an
                                      authoritative DNS server supporting RFC2136
                                      in the form host:port. If the host is an IPv6
                                      address it must be enclosed in square brackets
                                      (e.g [2001:db8::1]) ; port is optional. This
                                      field is required.
                                    type: string
                                  tsigAlgorithm:
                                    description: 'The TSIG Algorithm configured in
                                      the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                      and ``tsigKeyName`` are defined. Supported values
                                      are (case-insensitive): ``HMACMD5`` (default),
                                      ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'
                                    type: string
                                  tsigKeyName:
                                    description: The TSIG Key name configured in the
                                      DNS. If ``tsigSecretSecretRef`` is defined,
                                      this field is required.
                                    type: string
                                  tsigSecretSecretRef:
                                    description: The name of the secret containing
                                      the TSIG value. If ``tsigKeyName`` is defined,
                                      this field is required.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - nameserver
                                type: object
                              route53:
                                description: Use the AWS Route53 API to manage DNS01
                                  challenge records.
                                properties:
                                  accessKeyID:
                                    description: 'The AccessKeyID is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata see:
                                      https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    type: string
                                  hostedZoneID:
                                    description: If set, the provider will manage
                                      only this zone in Route53 and will not do an
                                      lookup using the route53:ListHostedZonesByName
                                      api call.
                                    type: string
                                  region:
                                    description: Always set the region when using
                                      AccessKeyID and SecretAccessKey
                                    type: string
                                  role:
                                    description: Role is a Role ARN which the Route53
                                      provider will assume using either the explicit
                                      credentials AccessKeyID/SecretAccessKey or the
                                      inferred credentials from environment variables,
                                      shared credentials file or AWS Instance metadata
                                    type: string
                                  secretAccessKeySecretRef:
                                    description: The SecretAccessKey is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - region
                                type: object
                              webhook:
                                description: Configure an external webhook based DNS01
                                  challenge solver to manage DNS01 challenge records.
                                properties:
                                  config:
                                    description: Additional configuration that should
                                      be passed to the webhook apiserver when challenges
                                      are processed. This can contain arbitrary JSON
                                      data. Secret values should not be specified
                                      in this stanza. If secret values are needed
                                      (e.g. credentials for a DNS service), you should
                                      use a SecretKeySelector to reference a Secret
                                      resource. For details on the schema of this
                                      field, consult the webhook provider implementation's
                                      documentation.
                                    x-kubernetes-preserve-unknown-fields: true
                                  groupName:
                                    description: The API group name that should be
                                      used when POSTing ChallengePayload resources
                                      to the webhook apiserver. This should be the
                                      same as the GroupName specified in the webhook
                                      provider implementation.
                                    type: string
                                  solverName:
                                    description: The name of the solver to use, as
                                      defined in the webhook provider implementation.
                                      This will typically be the name of the provider,
                                      e.g. 'cloudflare'.
                                    type: string
                                required:
                                - groupName
                                - solverName
                                type: object
                            type: object
                          http01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the HTTP01 challenge flow.
                              It is not possible to obtain certificates for wildcard
                              domain names (e.g. `*.example.com`) using the HTTP01
                              challenge mechanism.
                            properties:
                              gatewayHTTPRoute:
                                description: The Gateway API is a sig-network community
                                  API that models service networking in Kubernetes
                                  (https://gateway-api.sigs.k8s.io/). The Gateway
                                  solver will create HTTPRoutes with the specified
                                  labels in the same namespace as the challenge. This
                                  solver is experimental, and fields / behaviour may
                                  change in the future.
                                properties:
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: The labels that cert-manager will
                                      use when creating the temporary HTTPRoute needed
                                      for solving the HTTP-01 challenge. These labels
                                      must match the label selector of at least one
                                      Gateway.
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                              ingress:
                                description: The ingress based HTTP01 challenge solver
                                  will solve challenges by creating or modifying Ingress
                                  resources in order to route requests for '/.well-known/acme-challenge/XYZ'
                                  to 'challenge solver' pods that are provisioned
                                  by cert-manager for each Challenge to be completed.
                                properties:
                                  class:
                                    description: The ingress class to use when creating
                                      Ingress resources to solve ACME challenges that
                                      use this challenge solver. Only one of 'class'
                                      or 'name' may be specified.
                                    type: string
                                  ingressTemplate:
                                    description: Optional ingress template used to
                                      configure the ACME challenge solver ingress
                                      used for HTTP01 challenges
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          ingress used to solve HTTP01 challenges.
                                          Only the 'labels' and 'annotations' fields
                                          may be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the created ACME HTTP01 solver
                                              ingress.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver ingress.
                                            type: object
                                        type: object
                                    type: object
                                  name:
                                    description: The name of the ingress resource
                                      that should have ACME challenge solving routes
                                      inserted into it in order to solve HTTP01 challenges.
                                      This is typically used in conjunction with ingress
                                      controllers like ingress-gce, which maintains
                                      a 1:1 mapping between external IPs and ingress
                                      resources.
                                    type: string
                                  podTemplate:
                                    description: Optional pod template used to configure
                                      the ACME challenge solver pods used for HTTP01
                                      challenges.
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          pod used to solve HTTP01 challenges. Only
                                          the 'labels' and 'annotations' fields may
                                          be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the create ACME HTTP01 solver
                                              pods.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver pods.
                                            type: object
                                        type: object
                                      spec:
                                        description: PodSpec defines overrides for
                                          the HTTP01 challenge solver pod. Only the
                                          'priorityClassName', 'nodeSelector', 'affinity',
                                          'serviceAccountName' and 'tolerations' fields
                                          are supported currently. All other fields
                                          will be ignored.
                                        properties:
                                          affinity:
                                            description: If specified, the pod's scheduling
                                              constraints
                                            properties:
                                              nodeAffinity:
                                                description: Describes node affinity
                                                  scheduling rules for the pod.
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      matches the corresponding matchExpressions;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: An empty preferred
                                                        scheduling term matches all
                                                        objects with implicit weight
                                                        0 (i.e. it's a no-op). A null
                                                        preferred scheduling term
                                                        matches no objects (i.e. is
                                                        also a no-op).
                                                      properties:
                                                        preference:
                                                          description: A node selector
                                                            term, associated with
                                                            the corresponding weight.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        weight:
                                                          description: Weight associated
                                                            with matching the corresponding
                                                            nodeSelectorTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - preference
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to an update), the system
                                                      may or may not try to eventually
                                                      evict the pod from its node.
                                                    properties:
                                                      nodeSelectorTerms:
                                                        description: Required. A list
                                                          of node selector terms.
                                                          The terms are ORed.
                                                        items:
                                                          description: A null or empty
                                                            node selector term matches
                                                            no objects. The requirements
                                                            of them are ANDed. The
                                                            TopologySelectorTerm type
                                                            implements a subset of
                                                            the NodeSelectorTerm.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        type: array
                                                    required:
                                                    - nodeSelectorTerms
                                                    type: object
                                                type: object
                                              podAffinity:
                                                description: Describes pod affinity
                                                  scheduling rules (e.g. co-locate
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      has pods which matches the corresponding
                                                      podAffinityTerm; the node(s)
                                                      with the highest sum are the
                                                      most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is beta-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is beta-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                              podAntiAffinity:
                                                description: Describes pod anti-affinity
                                                  scheduling rules (e.g. avoid putting
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the anti-affinity
                                                      expressions specified by this
                                                      field, but it may choose a node
                                                      that violates one or more of
                                                      the expressions. The node that
                                                      is most preferred is the one
                                                      with the greatest sum of weights,
                                                      i.e. for each node that meets
                                                      all of the scheduling requirements
                                                      (resource request, requiredDuringScheduling
                                                      anti-affinity expressions, etc.),
                                                      compute a sum by iterating through
                                                      the elements of this field and
                                                      adding "weight" to the sum if
                                                      the node has pods which matches
                                                      the corresponding podAffinityTerm;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is beta-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the anti-affinity
                                                      requirements specified by this
                                                      field are not met at scheduling
                                                      time, the pod will not be scheduled
                                                      onto the node. If the anti-affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is beta-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                            type: object
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: 'NodeSelector is a selector
                                              which must be true for the pod to fit
                                              on a node. Selector which must match
                                              a node''s labels for the pod to be scheduled
                                              on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                            type: object
                                          priorityClassName:
                                            description: If specified, the pod's priorityClassName.
                                            type: string
                                          serviceAccountName:
                                            description: If specified, the pod's service
                                              account
                                            type: string
                                          tolerations:
                                            description: If specified, the pod's tolerations.
                                            items:
                                              description: The pod this Toleration
                                                is attached to tolerates any taint
                                                that matches the triple <key,value,effect>
                                                using the matching operator <operator>.
                                              properties:
                                                effect:
                                                  description: Effect indicates the
                                                    taint effect to match. Empty means
                                                    match all taint effects. When
                                                    specified, allowed values are
                                                    NoSchedule, PreferNoSchedule and
                                                    NoExecute.
                                                  type: string
                                                key:
                                                  description: Key is the taint key
                                                    that the toleration applies to.
                                                    Empty means match all taint keys.
                                                    If the key is empty, operator
                                                    must be Exists; this combination
                                                    means to match all values and
                                                    all keys.
                                                  type: string
                                                operator:
                                                  description: Operator represents
                                                    a key's relationship to the value.
                                                    Valid operators are Exists and
                                                    Equal. Defaults to Equal. Exists
                                                    is equivalent to wildcard for
                                                    value, so that a pod can tolerate
                                                    all taints of a particular category.
                                                  type: string
                                                tolerationSeconds:
                                                  description: TolerationSeconds represents
                                                    the period of time the toleration
                                                    (which must be of effect NoExecute,
                                                    otherwise this field is ignored)
                                                    tolerates the taint. By default,
                                                    it is not set, which means tolerate
                                                    the taint forever (do not evict).
                                                    Zero and negative values will
                                                    be treated as 0 (evict immediately)
                                                    by the system.
                                                  format: int64
                                                  type: integer
                                                value:
                                                  description: Value is the taint
                                                    value the toleration matches to.
                                                    If the operator is Exists, the
                                                    value should be empty, otherwise
                                                    just a regular string.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                            type: object
                          selector:
                            description: Selector selects a set of DNSNames on the
                              Certificate resource that should be solved using this
                              challenge solver. If not specified, the solver will
                              be treated as the 'default' solver with the lowest priority,
                              i.e. if any other solver has a more specific match,
                              it will be used instead.
                            properties:
                              dnsNames:
                                description: List of DNSNames that this solver will
                                  be used to solve. If specified and a match is found,
                                  a dnsNames selector will take precedence over a
                                  dnsZones selector. If multiple solvers match with
                                  the same dnsNames value, the solver with the most
                                  matching labels in matchLabels will be selected.
                                  If neither has more matches, the solver defined
                                  earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              dnsZones:
                                description: List of DNSZones that this solver will
                                  be used to solve. The most specific DNS zone match
                                  specified here will take precedence over other DNS
                                  zone matches, so a solver specifying sys.example.com
                                  will be selected over one specifying example.com
                                  for the domain www.sys.example.com. If multiple
                                  solvers match with the same dnsZones value, the
                                  solver with the most matching labels in matchLabels
                                  will be selected. If neither has more matches, the
                                  solver defined earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: A label selector that is used to refine
                                  the set of certificate's that this challenge solver
                                  will apply to.
                                type: object
                            type: object
                        type: object
                      type: array
                  required:
                  - privateKeySecretRef
                  - server
                  type: object
                ca:
                  description: CA configures this issuer to sign certificates using
                    a signing CA keypair stored in a Secret resource. This is used
                    to build internal PKIs that are managed by cert-manager.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set, certificates will be issued without distribution points
                        set.
                      items:
                        type: string
                      type: array
                    ocspServers:
                      description: The OCSP server list is an X.509 v3 extension that
                        defines a list of URLs of OCSP responders. The OCSP responders
                        can be queried for the revocation status of an issued certificate.
                        If not set, the certificate will be issued with no OCSP servers
                        set. For example, an OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
                      items:
                        type: string
                      type: array
                    secretName:
                      description: SecretName is the name of the secret used to sign
                        Certificates issued by this Issuer.
                      type: string
                  required:
                  - secretName
                  type: object
                selfSigned:
                  description: SelfSigned configures this issuer to 'self sign' certificates
                    using the private key used to create the CertificateRequest object.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set certificate will be issued without CDP. Values are strings.
                      items:
                        type: string
                      type: array
                  type: object
                vault:
                  description: Vault configures this issuer to sign certificates using
                    a HashiCorp Vault PKI backend.
                  properties:
                    auth:
                      description: Auth configures how cert-manager authenticates
                        with the Vault server.
                      properties:
                        appRole:
                          description: AppRole authenticates with Vault using the
                            App Role auth mechanism, with the role and secret stored
                            in a Kubernetes Secret resource.
                          properties:
                            path:
                              description: 'Path where the App Role authentication
                                backend is mounted in Vault, e.g: "approle"'
                              type: string
                            roleId:
                              description: RoleID configured in the App Role authentication
                                backend when setting up the authentication backend
                                in Vault.
                              type: string
                            secretRef:
                              description: Reference to a key in a Secret that contains
                                the App Role secret used to authenticate with Vault.
                                The `key` field must be specified and denotes which
                                entry within the Secret resource is used as the app
                                role secret.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - path
                          - roleId
                          - secretRef
                          type: object
                        kubernetes:
                          description: Kubernetes authenticates with Vault by passing
                            the ServiceAccount token stored in the named Secret resource
                            to the Vault server.
                          properties:
                            mountPath:
                              description: The Vault mountPath here is the mount path
                                to use when authenticating with Vault. For example,
                                setting a value to `/v1/auth/foo`, will use the path
                                `/v1/auth/foo/login` to authenticate with Vault. If
                                unspecified, the default value "/v1/auth/kubernetes"
                                will be used.
                              type: string
                            role:
                              description: A required field containing the Vault Role
                                to assume. A Role binds a Kubernetes ServiceAccount
                                with a set of Vault policies.
                              type: string
                            secretRef:
                              description: The required Secret field containing a
                                Kubernetes ServiceAccount JWT used for authenticating
                                with Vault. Use of 'ambient credentials' is not supported.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - role
                          - secretRef
                          type: object
                        tokenSecretRef:
                          description: TokenSecretRef authenticates with Vault by
                            presenting a token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    caBundle:
                      description: PEM-encoded CA bundle (base64-encoded) used to
                        validate Vault server certificate. Only used if the Server
                        URL is using HTTPS protocol. This parameter is ignored for
                        plain HTTP protocol connection. If not set the system root
                        certificates are used to validate the TLS connection.
                      format: byte
                      type: string
                    namespace:
                      description: 'Name of the vault namespace. Namespaces is a set
                        of features within Vault Enterprise that allows Vault environments
                        to support Secure Multi-tenancy. e.g: "ns1" More about namespaces
                        can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                      type: string
                    path:
                      description: 'Path is the mount path of the Vault PKI backend''s
                        `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".'
                      type: string
                    server:
                      description: 'Server is the connection address for the Vault
                        server, e.g: "https://vault.example.com:8200".'
                      type: string
                  required:
                  - auth
                  - path
                  - server
                  type: object
                venafi:
                  description: Venafi configures this issuer to sign certificates
                    using a Venafi TPP or Venafi Cloud policy zone.
                  properties:
                    cloud:
                      description: Cloud specifies the Venafi cloud configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        apiTokenSecretRef:
                          description: APITokenSecretRef is a secret key selector
                            for the Venafi Cloud API token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: URL is the base URL for Venafi Cloud. Defaults
                            to "https://api.venafi.cloud/v1".
                          type: string
                      required:
                      - apiTokenSecretRef
                      type: object
                    tpp:
                      description: TPP specifies Trust Protection Platform configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        caBundle:
                          description: CABundle is a PEM encoded TLS certificate to
                            use to verify connections to the TPP instance. If specified,
                            system roots will not be used and the issuing CA for the
                            TPP instance must be verifiable using the provided root.
                            If not specified, the connection will be verified using
                            the cert-manager system root certificates.
                          format: byte
                          type: string
                        credentialsRef:
                          description: CredentialsRef is a reference to a Secret containing
                            the username and password for the TPP server. The secret
                            must contain two keys, 'username' and 'password'.
                          properties:
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: 'URL is the base URL for the vedsdk endpoint
                            of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".'
                          type: string
                      required:
                      - credentialsRef
                      - url
                      type: object
                    zone:
                      description: Zone is the Venafi Policy Zone to use for this
                        issuer. All requests made to the Venafi platform will be restricted
                        by the named zone policy. This field is required.
                      type: string
                  required:
                  - zone
                  type: object
              type: object
            status:
              description: Status of the ClusterIssuer. This is set and managed automatically.
              properties:
                acme:
                  description: ACME specific status options. This field should only
                    be set if the Issuer is configured to use an ACME server to issue
                    certificates.
                  properties:
                    lastRegisteredEmail:
                      description: LastRegisteredEmail is the email associated with
                        the latest registered ACME account, in order to track changes
                        made to registered account associated with the  Issuer
                      type: string
                    uri:
                      description: URI is the unique account identifier, which can
                        also be used to retrieve account details from the CA
                      type: string
                  type: object
                conditions:
                  description: List of status conditions to indicate the status of
                    a CertificateRequest. Known condition types are `Ready`.
                  items:
                    description: IssuerCondition contains condition information for
                      an Issuer.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.condition[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the Issuer.
                        format: int64
                        type: integer
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
              type: object
          type: object
      served: false
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: A ClusterIssuer represents a certificate issuing authority
            which can be referenced as part of `issuerRef` fields. It is similar to
            an Issuer, however it is cluster-scoped and therefore can be referenced
            by resources that exist in *any* namespace, not just the same namespace
            as the referent.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the ClusterIssuer resource.
              properties:
                acme:
                  description: ACME configures this issuer to communicate with a RFC8555
                    (ACME) server to obtain signed x509 certificates.
                  properties:
                    disableAccountKeyGeneration:
                      description: Enables or disables generating a new ACME account
                        key. If true, the Issuer resource will *not* request a new
                        account but will expect the account key to be supplied via
                        an existing secret. If false, the cert-manager system will
                        generate a new ACME account key for the Issuer. Defaults to
                        false.
                      type: boolean
                    email:
                      description: Email is the email address to be associated with
                        the ACME account. This field is optional, but it is strongly
                        recommended to be set. It will be used to contact you in case
                        of issues with your account or certificates, including expiry
                        notification emails. This field may be updated after the account
                        is initially registered.
                      type: string
                    enableDurationFeature:
                      description: Enables requesting a Not After date on certificates
                        that matches the duration of the certificate. This is not
                        supported by all ACME servers like Let's Encrypt. If set to
                        true when the ACME server does not support it it will create
                        an error on the Order. Defaults to false.
                      type: boolean
                    externalAccountBinding:
                      description: ExternalAccountBinding is a reference to a CA external
                        account of the ACME server. If set, upon registration cert-manager
                        will attempt to associate the given external account credentials
                        with the registered ACME account.
                      properties:
                        keyAlgorithm:
                          description: 'Deprecated: keyAlgorithm field exists for
                            historical compatibility reasons and should not be used.
                            The algorithm is now hardcoded to HS256 in golang/x/crypto/acme.'
                          enum:
                          - HS256
                          - HS384
                          - HS512
                          type: string
                        keyID:
                          description: keyID is the ID of the CA key that the External
                            Account is bound to.
                          type: string
                        keySecretRef:
                          description: keySecretRef is a Secret Key Selector referencing
                            a data item in a Kubernetes Secret which holds the symmetric
                            MAC key of the External Account Binding. The `key` is
                            the index string that is paired with the key data in the
                            Secret and should not be confused with the key data itself,
                            or indeed with the External Account Binding keyID above.
                            The secret key stored in the Secret **must** be un-padded,
                            base64 URL encoded data.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - keyID
                      - keySecretRef
                      type: object
                    preferredChain:
                      description: 'PreferredChain is the chain to use if the ACME
                        server outputs multiple. PreferredChain is no guarantee that
                        this one gets delivered by the ACME endpoint. For example,
                        for Let''s Encrypt''s DST crosssign you would use: "DST Root
                        CA X3" or "ISRG Root X1" for the newer Let''s Encrypt root
                        CA. This value picks the first certificate bundle in the ACME
                        alternative chains that has a certificate with this value
                        as its issuer''s CN'
                      maxLength: 64
                      type: string
                    privateKeySecretRef:
                      description: PrivateKey is the name of a Kubernetes Secret resource
                        that will be used to store the automatically generated ACME
                        account private key. Optionally, a `key` may be specified
                        to select a specific entry within the named Secret resource.
                        If `key` is not specified, a default of `tls.key` will be
                        used.
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                      required:
                      - name
                      type: object
                    server:
                      description: 'Server is the URL used to access the ACME server''s
                        ''directory'' endpoint. For example, for Let''s Encrypt''s
                        staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory".
                        Only ACME v2 endpoints (i.e. RFC 8555) are supported.'
                      type: string
                    skipTLSVerify:
                      description: Enables or disables validation of the ACME server
                        TLS certificate. If true, requests to the ACME server will
                        not have their TLS certificate validated (i.e. insecure connections
                        will be allowed). Only enable this option in development environments.
                        The cert-manager system installed roots will be used to verify
                        connections to the ACME server if this is false. Defaults
                        to false.
                      type: boolean
                    solvers:
                      description: 'Solvers is a list of challenge solvers that will
                        be used to solve ACME challenges for the matching domains.
                        Solver configurations must be provided in order to obtain
                        certificates from an ACME server. For more information, see:
                        https://cert-manager.io/docs/configuration/acme/'
                      items:
                        description: Configures an issuer to solve challenges using
                          the specified options. Only one of HTTP01 or DNS01 may be
                          provided.
                        properties:
                          dns01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the DNS01 challenge flow.
                            properties:
                              acmeDNS:
                                description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                                  API to manage DNS01 challenge records.
                                properties:
                                  accountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  host:
                                    type: string
                                required:
                                - accountSecretRef
                                - host
                                type: object
                              akamai:
                                description: Use the Akamai DNS zone management API
                                  to manage DNS01 challenge records.
                                properties:
                                  accessTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientSecretSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  serviceConsumerDomain:
                                    type: string
                                required:
                                - accessTokenSecretRef
                                - clientSecretSecretRef
                                - clientTokenSecretRef
                                - serviceConsumerDomain
                                type: object
                              azureDNS:
                                description: Use the Microsoft Azure DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  clientID:
                                    description: if both this and ClientSecret are
                                      left unset MSI will be used
                                    type: string
                                  clientSecretSecretRef:
                                    description: if both this and ClientID are left
                                      unset MSI will be used
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  environment:
                                    description: name of the Azure environment (default
                                      AzurePublicCloud)
                                    enum:
                                    - AzurePublicCloud
                                    - AzureChinaCloud
                                    - AzureGermanCloud
                                    - AzureUSGovernmentCloud
                                    type: string
                                  hostedZoneName:
                                    description: name of the DNS zone that should
                                      be used
                                    type: string
                                  managedIdentity:
                                    description: managed identity configuration, can
                                      not be used at the same time as clientID, clientSecretSecretRef
                                      or tenantID
                                    properties:
                                      clientID:
                                        description: client ID of the managed identity,
                                          can not be used at the same time as resourceID
                                        type: string
                                      resourceID:
                                        description: resource ID of the managed identity,
                                          can not be used at the same time as clientID
                                        type: string
                                    type: object
                                  resourceGroupName:
                                    description: resource group the DNS zone is located
                                      in
                                    type: string
                                  subscriptionID:
                                    description: ID of the Azure subscription
                                    type: string
                                  tenantID:
                                    description: when specifying ClientID and ClientSecret
                                      then this field is also needed
                                    type: string
                                required:
                                - resourceGroupName
                                - subscriptionID
                                type: object
                              cloudDNS:
                                description: Use the Google Cloud DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  hostedZoneName:
                                    description: HostedZoneName is an optional field
                                      that tells cert-manager in which Cloud DNS zone
                                      the challenge record has to be created. If left
                                      empty cert-manager will automatically choose
                                      a zone.
                                    type: string
                                  project:
                                    type: string
                                  serviceAccountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - project
                                type: object
                              cloudflare:
                                description: Use the Cloudflare API to manage DNS01
                                  challenge records.
                                properties:
                                  apiKeySecretRef:
                                    description: 'API key to use to authenticate with
                                      Cloudflare. Note: using an API token to authenticate
                                      is now the recommended method as it allows greater
                                      control of permissions.'
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  apiTokenSecretRef:
                                    description: API token used to authenticate with
                                      Cloudflare.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  email:
                                    description: Email of the account, only required
                                      when using API key based authentication.
                                    type: string
                                type: object
                              cnameStrategy:
                                description: CNAMEStrategy configures how the DNS01
                                  provider should handle CNAME records when found
                                  in DNS zones.
                                enum:
                                - None
                                - Follow
                                type: string
                              digitalocean:
                                description: Use the DigitalOcean DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  tokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - tokenSecretRef
                                type: object
                              rfc2136:
                                description: Use RFC2136 ("Dynamic Updates in the
                                  Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                                  to manage DNS01 challenge records.
                                properties:
                                  nameserver:
                                    description: The IP address or hostname of an
                                      authoritative DNS server supporting RFC2136
                                      in the form host:port. If the host is an IPv6
                                      address it must be enclosed in square brackets
                                      (e.g [2001:db8::1]) ; port is optional. This
                                      field is required.
                                    type: string
                                  tsigAlgorithm:
                                    description: 'The TSIG Algorithm configured in
                                      the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                      and ``tsigKeyName`` are defined. Supported values
                                      are (case-insensitive): ``HMACMD5`` (default),
                                      ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'
                                    type: string
                                  tsigKeyName:
                                    description: The TSIG Key name configured in the
                                      DNS. If ``tsigSecretSecretRef`` is defined,
                                      this field is required.
                                    type: string
                                  tsigSecretSecretRef:
                                    description: The name of the secret containing
                                      the TSIG value. If ``tsigKeyName`` is defined,
                                      this field is required.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - nameserver
                                type: object
                              route53:
                                description: Use the AWS Route53 API to manage DNS01
                                  challenge records.
                                properties:
                                  accessKeyID:
                                    description: 'The AccessKeyID is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata see:
                                      https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    type: string
                                  hostedZoneID:
                                    description: If set, the provider will manage
                                      only this zone in Route53 and will not do an
                                      lookup using the route53:ListHostedZonesByName
                                      api call.
                                    type: string
                                  region:
                                    description: Always set the region when using
                                      AccessKeyID and SecretAccessKey
                                    type: string
                                  role:
                                    description: Role is a Role ARN which the Route53
                                      provider will assume using either the explicit
                                      credentials AccessKeyID/SecretAccessKey or the
                                      inferred credentials from environment variables,
                                      shared credentials file or AWS Instance metadata
                                    type: string
                                  secretAccessKeySecretRef:
                                    description: The SecretAccessKey is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - region
                                type: object
                              webhook:
                                description: Configure an external webhook based DNS01
                                  challenge solver to manage DNS01 challenge records.
                                properties:
                                  config:
                                    description: Additional configuration that should
                                      be passed to the webhook apiserver when challenges
                                      are processed. This can contain arbitrary JSON
                                      data. Secret values should not be specified
                                      in this stanza. If secret values are needed
                                      (e.g. credentials for a DNS service), you should
                                      use a SecretKeySelector to reference a Secret
                                      resource. For details on the schema of this
                                      field, consult the webhook provider implementation's
                                      documentation.
                                    x-kubernetes-preserve-unknown-fields: true
                                  groupName:
                                    description: The API group name that should be
                                      used when POSTing ChallengePayload resources
                                      to the webhook apiserver. This should be the
                                      same as the GroupName specified in the webhook
                                      provider implementation.
                                    type: string
                                  solverName:
                                    description: The name of the solver to use, as
                                      defined in the webhook provider implementation.
                                      This will typically be the name of the provider,
                                      e.g. 'cloudflare'.
                                    type: string
                                required:
                                - groupName
                                - solverName
                                type: object
                            type: object
                          http01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the HTTP01 challenge flow.
                              It is not possible to obtain certificates for wildcard
                              domain names (e.g. `*.example.com`) using the HTTP01
                              challenge mechanism.
                            properties:
                              gatewayHTTPRoute:
                                description: The Gateway API is a sig-network community
                                  API that models service networking in Kubernetes
                                  (https://gateway-api.sigs.k8s.io/). The Gateway
                                  solver will create HTTPRoutes with the specified
                                  labels in the same namespace as the challenge. This
                                  solver is experimental, and fields / behaviour may
                                  change in the future.
                                properties:
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: The labels that cert-manager will
                                      use when creating the temporary HTTPRoute needed
                                      for solving the HTTP-01 challenge. These labels
                                      must match the label selector of at least one
                                      Gateway.
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                              ingress:
                                description: The ingress based HTTP01 challenge solver
                                  will solve challenges by creating or modifying Ingress
                                  resources in order to route requests for '/.well-known/acme-challenge/XYZ'
                                  to 'challenge solver' pods that are provisioned
                                  by cert-manager for each Challenge to be completed.
                                properties:
                                  class:
                                    description: The ingress class to use when creating
                                      Ingress resources to solve ACME challenges that
                                      use this challenge solver. Only one of 'class'
                                      or 'name' may be specified.
                                    type: string
                                  ingressTemplate:
                                    description: Optional ingress template used to
                                      configure the ACME challenge solver ingress
                                      used for HTTP01 challenges.
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          ingress used to solve HTTP01 challenges.
                                          Only the 'labels' and 'annotations' fields
                                          may be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the created ACME HTTP01 solver
                                              ingress.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver ingress.
                                            type: object
                                        type: object
                                    type: object
                                  name:
                                    description: The name of the ingress resource
                                      that should have ACME challenge solving routes
                                      inserted into it in order to solve HTTP01 challenges.
                                      This is typically used in conjunction with ingress
                                      controllers like ingress-gce, which maintains
                                      a 1:1 mapping between external IPs and ingress
                                      resources.
                                    type: string
                                  podTemplate:
                                    description: Optional pod template used to configure
                                      the ACME challenge solver pods used for HTTP01
                                      challenges
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          pod used to solve HTTP01 challenges. Only
                                          the 'labels' and 'annotations' fields may
                                          be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the create ACME HTTP01 solver
                                              pods.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver pods.
                                            type: object
                                        type: object
                                      spec:
                                        description: PodSpec defines overrides for
                                          the HTTP01 challenge solver pod. Only the
                                          'priorityClassName', 'nodeSelector', 'affinity',
                                          'serviceAccountName' and 'tolerations' fields
                                          are supported currently. All other fields
                                          will be ignored.
                                        properties:
                                          affinity:
                                            description: If specified, the pod's scheduling
                                              constraints
                                            properties:
                                              nodeAffinity:
                                                description: Describes node affinity
                                                  scheduling rules for the pod.
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      matches the corresponding matchExpressions;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: An empty preferred
                                                        scheduling term matches all
                                                        objects with implicit weight
                                                        0 (i.e. it's a no-op). A null
                                                        preferred scheduling term
                                                        matches no objects (i.e. is
                                                        also a no-op).
                                                      properties:
                                                        preference:
                                                          description: A node selector
                                                            term, associated with
                                                            the corresponding weight.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        weight:
                                                          description: Weight associated
                                                            with matching the corresponding
                                                            nodeSelectorTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - preference
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to an update), the system
                                                      may or may not try to eventually
                                                      evict the pod from its node.
                                                    properties:
                                                      nodeSelectorTerms:
                                                        description: Required. A list
                                                          of node selector terms.
                                                          The terms are ORed.
                                                        items:
                                                          description: A null or empty
                                                            node selector term matches
                                                            no objects. The requirements
                                                            of them are ANDed. The
                                                            TopologySelectorTerm type
                                                            implements a subset of
                                                            the NodeSelectorTerm.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        type: array
                                                    required:
                                                    - nodeSelectorTerms
                                                    type: object
                                                type: object
                                              podAffinity:
                                                description: Describes pod affinity
                                                  scheduling rules (e.g. co-locate
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      has pods which matches the corresponding
                                                      podAffinityTerm; the node(s)
                                                      with the highest sum are the
                                                      most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is beta-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is beta-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                              podAntiAffinity:
                                                description: Describes pod anti-affinity
                                                  scheduling rules (e.g. avoid putting
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the anti-affinity
                                                      expressions specified by this
                                                      field, but it may choose a node
                                                      that violates one or more of
                                                      the expressions. The node that
                                                      is most preferred is the one
                                                      with the greatest sum of weights,
                                                      i.e. for each node that meets
                                                      all of the scheduling requirements
                                                      (resource request, requiredDuringScheduling
                                                      anti-affinity expressions, etc.),
                                                      compute a sum by iterating through
                                                      the elements of this field and
                                                      adding "weight" to the sum if
                                                      the node has pods which matches
                                                      the corresponding podAffinityTerm;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is beta-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the anti-affinity
                                                      requirements specified by this
                                                      field are not met at scheduling
                                                      time, the pod will not be scheduled
                                                      onto the node. If the anti-affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is beta-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                            type: object
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: 'NodeSelector is a selector
                                              which must be true for the pod to fit
                                              on a node. Selector which must match
                                              a node''s labels for the pod to be scheduled
                                              on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                            type: object
                                          priorityClassName:
                                            description: If specified, the pod's priorityClassName.
                                            type: string
                                          serviceAccountName:
                                            description: If specified, the pod's service
                                              account
                                            type: string
                                          tolerations:
                                            description: If specified, the pod's tolerations.
                                            items:
                                              description: The pod this Toleration
                                                is attached to tolerates any taint
                                                that matches the triple <key,value,effect>
                                                using the matching operator <operator>.
                                              properties:
                                                effect:
                                                  description: Effect indicates the
                                                    taint effect to match. Empty means
                                                    match all taint effects. When
                                                    specified, allowed values are
                                                    NoSchedule, PreferNoSchedule and
                                                    NoExecute.
                                                  type: string
                                                key:
                                                  description: Key is the taint key
                                                    that the toleration applies to.
                                                    Empty means match all taint keys.
                                                    If the key is empty, operator
                                                    must be Exists; this combination
                                                    means to match all values and
                                                    all keys.
                                                  type: string
                                                operator:
                                                  description: Operator represents
                                                    a key's relationship to the value.
                                                    Valid operators are Exists and
                                                    Equal. Defaults to Equal. Exists
                                                    is equivalent to wildcard for
                                                    value, so that a pod can tolerate
                                                    all taints of a particular category.
                                                  type: string
                                                tolerationSeconds:
                                                  description: TolerationSeconds represents
                                                    the period of time the toleration
                                                    (which must be of effect NoExecute,
                                                    otherwise this field is ignored)
                                                    tolerates the taint. By default,
                                                    it is not set, which means tolerate
                                                    the taint forever (do not evict).
                                                    Zero and negative values will
                                                    be treated as 0 (evict immediately)
                                                    by the system.
                                                  format: int64
                                                  type: integer
                                                value:
                                                  description: Value is the taint
                                                    value the toleration matches to.
                                                    If the operator is Exists, the
                                                    value should be empty, otherwise
                                                    just a regular string.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                            type: object
                          selector:
                            description: Selector selects a set of DNSNames on the
                              Certificate resource that should be solved using this
                              challenge solver. If not specified, the solver will
                              be treated as the 'default' solver with the lowest priority,
                              i.e. if any other solver has a more specific match,
                              it will be used instead.
                            properties:
                              dnsNames:
                                description: List of DNSNames that this solver will
                                  be used to solve. If specified and a match is found,
                                  a dnsNames selector will take precedence over a
                                  dnsZones selector. If multiple solvers match with
                                  the same dnsNames value, the solver with the most
                                  matching labels in matchLabels will be selected.
                                  If neither has more matches, the solver defined
                                  earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              dnsZones:
                                description: List of DNSZones that this solver will
                                  be used to solve. The most specific DNS zone match
                                  specified here will take precedence over other DNS
                                  zone matches, so a solver specifying sys.example.com
                                  will be selected over one specifying example.com
                                  for the domain www.sys.example.com. If multiple
                                  solvers match with the same dnsZones value, the
                                  solver with the most matching labels in matchLabels
                                  will be selected. If neither has more matches, the
                                  solver defined earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: A label selector that is used to refine
                                  the set of certificate's that this challenge solver
                                  will apply to.
                                type: object
                            type: object
                        type: object
                      type: array
                  required:
                  - privateKeySecretRef
                  - server
                  type: object
                ca:
                  description: CA configures this issuer to sign certificates using
                    a signing CA keypair stored in a Secret resource. This is used
                    to build internal PKIs that are managed by cert-manager.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set, certificates will be issued without distribution points
                        set.
                      items:
                        type: string
                      type: array
                    ocspServers:
                      description: The OCSP server list is an X.509 v3 extension that
                        defines a list of URLs of OCSP responders. The OCSP responders
                        can be queried for the revocation status of an issued certificate.
                        If not set, the certificate will be issued with no OCSP servers
                        set. For example, an OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
                      items:
                        type: string
                      type: array
                    secretName:
                      description: SecretName is the name of the secret used to sign
                        Certificates issued by this Issuer.
                      type: string
                  required:
                  - secretName
                  type: object
                selfSigned:
                  description: SelfSigned configures this issuer to 'self sign' certificates
                    using the private key used to create the CertificateRequest object.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set certificate will be issued without CDP. Values are strings.
                      items:
                        type: string
                      type: array
                  type: object
                vault:
                  description: Vault configures this issuer to sign certificates using
                    a HashiCorp Vault PKI backend.
                  properties:
                    auth:
                      description: Auth configures how cert-manager authenticates
                        with the Vault server.
                      properties:
                        appRole:
                          description: AppRole authenticates with Vault using the
                            App Role auth mechanism, with the role and secret stored
                            in a Kubernetes Secret resource.
                          properties:
                            path:
                              description: 'Path where the App Role authentication
                                backend is mounted in Vault, e.g: "approle"'
                              type: string
                            roleId:
                              description: RoleID configured in the App Role authentication
                                backend when setting up the authentication backend
                                in Vault.
                              type: string
                            secretRef:
                              description: Reference to a key in a Secret that contains
                                the App Role secret used to authenticate with Vault.
                                The `key` field must be specified and denotes which
                                entry within the Secret resource is used as the app
                                role secret.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - path
                          - roleId
                          - secretRef
                          type: object
                        kubernetes:
                          description: Kubernetes authenticates with Vault by passing
                            the ServiceAccount token stored in the named Secret resource
                            to the Vault server.
                          properties:
                            mountPath:
                              description: The Vault mountPath here is the mount path
                                to use when authenticating with Vault. For example,
                                setting a value to `/v1/auth/foo`, will use the path
                                `/v1/auth/foo/login` to authenticate with Vault. If
                                unspecified, the default value "/v1/auth/kubernetes"
                                will be used.
                              type: string
                            role:
                              description: A required field containing the Vault Role
                                to assume. A Role binds a Kubernetes ServiceAccount
                                with a set of Vault policies.
                              type: string
                            secretRef:
                              description: The required Secret field containing a
                                Kubernetes ServiceAccount JWT used for authenticating
                                with Vault. Use of 'ambient credentials' is not supported.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - role
                          - secretRef
                          type: object
                        tokenSecretRef:
                          description: TokenSecretRef authenticates with Vault by
                            presenting a token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    caBundle:
                      description: PEM-encoded CA bundle (base64-encoded) used to
                        validate Vault server certificate. Only used if the Server
                        URL is using HTTPS protocol. This parameter is ignored for
                        plain HTTP protocol connection. If not set the system root
                        certificates are used to validate the TLS connection.
                      format: byte
                      type: string
                    namespace:
                      description: 'Name of the vault namespace. Namespaces is a set
                        of features within Vault Enterprise that allows Vault environments
                        to support Secure Multi-tenancy. e.g: "ns1" More about namespaces
                        can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                      type: string
                    path:
                      description: 'Path is the mount path of the Vault PKI backend''s
                        `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".'
                      type: string
                    server:
                      description: 'Server is the connection address for the Vault
                        server, e.g: "https://vault.example.com:8200".'
                      type: string
                  required:
                  - auth
                  - path
                  - server
                  type: object
                venafi:
                  description: Venafi configures this issuer to sign certificates
                    using a Venafi TPP or Venafi Cloud policy zone.
                  properties:
                    cloud:
                      description: Cloud specifies the Venafi cloud configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        apiTokenSecretRef:
                          description: APITokenSecretRef is a secret key selector
                            for the Venafi Cloud API token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: URL is the base URL for Venafi Cloud. Defaults
                            to "https://api.venafi.cloud/v1".
                          type: string
                      required:
                      - apiTokenSecretRef
                      type: object
                    tpp:
                      description: TPP specifies Trust Protection Platform configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        caBundle:
                          description: CABundle is a PEM encoded TLS certificate to
                            use to verify connections to the TPP instance. If specified,
                            system roots will not be used and the issuing CA for the
                            TPP instance must be verifiable using the provided root.
                            If not specified, the connection will be verified using
                            the cert-manager system root certificates.
                          format: byte
                          type: string
                        credentialsRef:
                          description: CredentialsRef is a reference to a Secret containing
                            the username and password for the TPP server. The secret
                            must contain two keys, 'username' and 'password'.
                          properties:
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: 'URL is the base URL for the vedsdk endpoint
                            of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".'
                          type: string
                      required:
                      - credentialsRef
                      - url
                      type: object
                    zone:
                      description: Zone is the Venafi Policy Zone to use for this
                        issuer. All requests made to the Venafi platform will be restricted
                        by the named zone policy. This field is required.
                      type: string
                  required:
                  - zone
                  type: object
              type: object
            status:
              description: Status of the ClusterIssuer. This is set and managed automatically.
              properties:
                acme:
                  description: ACME specific status options. This field should only
                    be set if the Issuer is configured to use an ACME server to issue
                    certificates.
                  properties:
                    lastRegisteredEmail:
                      description: LastRegisteredEmail is the email associated with
                        the latest registered ACME account, in order to track changes
                        made to registered account associated with the  Issuer
                      type: string
                    uri:
                      description: URI is the unique account identifier, which can
                        also be used to retrieve account details from the CA
                      type: string
                  type: object
                conditions:
                  description: List of status conditions to indicate the status of
                    a CertificateRequest. Known condition types are `Ready`.
                  items:
                    description: IssuerCondition contains condition information for
                      an Issuer.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.condition[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the Issuer.
                        format: int64
                        type: integer
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
              type: object
          required:
          - spec
          type: object
      served: false
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: A ClusterIssuer represents a certificate issuing authority
            which can be referenced as part of `issuerRef` fields. It is similar to
            an Issuer, however it is cluster-scoped and therefore can be referenced
            by resources that exist in *any* namespace, not just the same namespace
            as the referent.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the ClusterIssuer resource.
              properties:
                acme:
                  description: ACME configures this issuer to communicate with a RFC8555
                    (ACME) server to obtain signed x509 certificates.
                  properties:
                    disableAccountKeyGeneration:
                      description: Enables or disables generating a new ACME account
                        key. If true, the Issuer resource will *not* request a new
                        account but will expect the account key to be supplied via
                        an existing secret. If false, the cert-manager system will
                        generate a new ACME account key for the Issuer. Defaults to
                        false.
                      type: boolean
                    email:
                      description: Email is the email address to be associated with
                        the ACME account. This field is optional, but it is strongly
                        recommended to be set. It will be used to contact you in case
                        of issues with your account or certificates, including expiry
                        notification emails. This field may be updated after the account
                        is initially registered.
                      type: string
                    enableDurationFeature:
                      description: Enables requesting a Not After date on certificates
                        that matches the duration of the certificate. This is not
                        supported by all ACME servers like Let's Encrypt. If set to
                        true when the ACME server does not support it it will create
                        an error on the Order. Defaults to false.
                      type: boolean
                    externalAccountBinding:
                      description: ExternalAccountBinding is a reference to a CA external
                        account of the ACME server. If set, upon registration cert-manager
                        will attempt to associate the given external account credentials
                        with the registered ACME account.
                      properties:
                        keyAlgorithm:
                          description: 'Deprecated: keyAlgorithm field exists for
                            historical compatibility reasons and should not be used.
                            The algorithm is now hardcoded to HS256 in golang/x/crypto/acme.'
                          enum:
                          - HS256
                          - HS384
                          - HS512
                          type: string
                        keyID:
                          description: keyID is the ID of the CA key that the External
                            Account is bound to.
                          type: string
                        keySecretRef:
                          description: keySecretRef is a Secret Key Selector referencing
                            a data item in a Kubernetes Secret which holds the symmetric
                            MAC key of the External Account Binding. The `key` is
                            the index string that is paired with the key data in the
                            Secret and should not be confused with the key data itself,
                            or indeed with the External Account Binding keyID above.
                            The secret key stored in the Secret **must** be un-padded,
                            base64 URL encoded data.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - keyID
                      - keySecretRef
                      type: object
                    preferredChain:
                      description: 'PreferredChain is the chain to use if the ACME
                        server outputs multiple. PreferredChain is no guarantee that
                        this one gets delivered by the ACME endpoint. For example,
                        for Let''s Encrypt''s DST crosssign you would use: "DST Root
                        CA X3" or "ISRG Root X1" for the newer Let''s Encrypt root
                        CA. This value picks the first certificate bundle in the ACME
                        alternative chains that has a certificate with this value
                        as its issuer''s CN'
                      maxLength: 64
                      type: string
                    privateKeySecretRef:
                      description: PrivateKey is the name of a Kubernetes Secret resource
                        that will be used to store the automatically generated ACME
                        account private key. Optionally, a `key` may be specified
                        to select a specific entry within the named Secret resource.
                        If `key` is not specified, a default of `tls.key` will be
                        used.
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                      required:
                      - name
                      type: object
                    server:
                      description: 'Server is the URL used to access the ACME server''s
                        ''directory'' endpoint. For example, for Let''s Encrypt''s
                        staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory".
                        Only ACME v2 endpoints (i.e. RFC 8555) are supported.'
                      type: string
                    skipTLSVerify:
                      description: Enables or disables validation of the ACME server
                        TLS certificate. If true, requests to the ACME server will
                        not have their TLS certificate validated (i.e. insecure connections
                        will be allowed). Only enable this option in development environments.
                        The cert-manager system installed roots will be used to verify
                        connections to the ACME server if this is false. Defaults
                        to false.
                      type: boolean
                    solvers:
                      description: 'Solvers is a list of challenge solvers that will
                        be used to solve ACME challenges for the matching domains.
                        Solver configurations must be provided in order to obtain
                        certificates from an ACME server. For more information, see:
                        https://cert-manager.io/docs/configuration/acme/'
                      items:
                        description: An ACMEChallengeSolver describes how to solve
                          ACME challenges for the issuer it is part of. A selector
                          may be provided to use different solving strategies for
                          different DNS names. Only one of HTTP01 or DNS01 must be
                          provided.
                        properties:
                          dns01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the DNS01 challenge flow.
                            properties:
                              acmeDNS:
                                description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                                  API to manage DNS01 challenge records.
                                properties:
                                  accountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  host:
                                    type: string
                                required:
                                - accountSecretRef
                                - host
                                type: object
                              akamai:
                                description: Use the Akamai DNS zone management API
                                  to manage DNS01 challenge records.
                                properties:
                                  accessTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientSecretSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  serviceConsumerDomain:
                                    type: string
                                required:
                                - accessTokenSecretRef
                                - clientSecretSecretRef
                                - clientTokenSecretRef
                                - serviceConsumerDomain
                                type: object
                              azureDNS:
                                description: Use the Microsoft Azure DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  clientID:
                                    description: if both this and ClientSecret are
                                      left unset MSI will be used
                                    type: string
                                  clientSecretSecretRef:
                                    description: if both this and ClientID are left
                                      unset MSI will be used
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  environment:
                                    description: name of the Azure environment (default
                                      AzurePublicCloud)
                                    enum:
                                    - AzurePublicCloud
                                    - AzureChinaCloud
                                    - AzureGermanCloud
                                    - AzureUSGovernmentCloud
                                    type: string
                                  hostedZoneName:
                                    description: name of the DNS zone that should
                                      be used
                                    type: string
                                  managedIdentity:
                                    description: managed identity configuration, can
                                      not be used at the same time as clientID, clientSecretSecretRef
                                      or tenantID
                                    properties:
                                      clientID:
                                        description: client ID of the managed identity,
                                          can not be used at the same time as resourceID
                                        type: string
                                      resourceID:
                                        description: resource ID of the managed identity,
                                          can not be used at the same time as clientID
                                        type: string
                                    type: object
                                  resourceGroupName:
                                    description: resource group the DNS zone is located
                                      in
                                    type: string
                                  subscriptionID:
                                    description: ID of the Azure subscription
                                    type: string
                                  tenantID:
                                    description: when specifying ClientID and ClientSecret
                                      then this field is also needed
                                    type: string
                                required:
                                - resourceGroupName
                                - subscriptionID
                                type: object
                              cloudDNS:
                                description: Use the Google Cloud DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  hostedZoneName:
                                    description: HostedZoneName is an optional field
                                      that tells cert-manager in which Cloud DNS zone
                                      the challenge record has to be created. If left
                                      empty cert-manager will automatically choose
                                      a zone.
                                    type: string
                                  project:
                                    type: string
                                  serviceAccountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - project
                                type: object
                              cloudflare:
                                description: Use the Cloudflare API to manage DNS01
                                  challenge records.
                                properties:
                                  apiKeySecretRef:
                                    description: 'API key to use to authenticate with
                                      Cloudflare. Note: using an API token to authenticate
                                      is now the recommended method as it allows greater
                                      control of permissions.'
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  apiTokenSecretRef:
                                    description: API token used to authenticate with
                                      Cloudflare.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  email:
                                    description: Email of the account, only required
                                      when using API key based authentication.
                                    type: string
                                type: object
                              cnameStrategy:
                                description: CNAMEStrategy configures how the DNS01
                                  provider should handle CNAME records when found
                                  in DNS zones.
                                enum:
                                - None
                                - Follow
                                type: string
                              digitalocean:
                                description: Use the DigitalOcean DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  tokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - tokenSecretRef
                                type: object
                              rfc2136:
                                description: Use RFC2136 ("Dynamic Updates in the
                                  Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                                  to manage DNS01 challenge records.
                                properties:
                                  nameserver:
                                    description: The IP address or hostname of an
                                      authoritative DNS server supporting RFC2136
                                      in the form host:port. If the host is an IPv6
                                      address it must be enclosed in square brackets
                                      (e.g [2001:db8::1]) ; port is optional. This
                                      field is required.
                                    type: string
                                  tsigAlgorithm:
                                    description: 'The TSIG Algorithm configured in
                                      the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                      and ``tsigKeyName`` are defined. Supported values
                                      are (case-insensitive): ``HMACMD5`` (default),
                                      ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'
                                    type: string
                                  tsigKeyName:
                                    description: The TSIG Key name configured in the
                                      DNS. If ``tsigSecretSecretRef`` is defined,
                                      this field is required.
                                    type: string
                                  tsigSecretSecretRef:
                                    description: The name of the secret containing
                                      the TSIG value. If ``tsigKeyName`` is defined,
                                      this field is required.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - nameserver
                                type: object
                              route53:
                                description: Use the AWS Route53 API to manage DNS01
                                  challenge records.
                                properties:
                                  accessKeyID:
                                    description: 'The AccessKeyID is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata see:
                                      https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    type: string
                                  hostedZoneID:
                                    description: If set, the provider will manage
                                      only this zone in Route53 and will not do an
                                      lookup using the route53:ListHostedZonesByName
                                      api call.
                                    type: string
                                  region:
                                    description: Always set the region when using
                                      AccessKeyID and SecretAccessKey
                                    type: string
                                  role:
                                    description: Role is a Role ARN which the Route53
                                      provider will assume using either the explicit
                                      credentials AccessKeyID/SecretAccessKey or the
                                      inferred credentials from environment variables,
                                      shared credentials file or AWS Instance metadata
                                    type: string
                                  secretAccessKeySecretRef:
                                    description: The SecretAccessKey is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - region
                                type: object
                              webhook:
                                description: Configure an external webhook based DNS01
                                  challenge solver to manage DNS01 challenge records.
                                properties:
                                  config:
                                    description: Additional configuration that should
                                      be passed to the webhook apiserver when challenges
                                      are processed. This can contain arbitrary JSON
                                      data. Secret values should not be specified
                                      in this stanza. If secret values are needed
                                      (e.g. credentials for a DNS service), you should
                                      use a SecretKeySelector to reference a Secret
                                      resource. For details on the schema of this
                                      field, consult the webhook provider implementation's
                                      documentation.
                                    x-kubernetes-preserve-unknown-fields: true
                                  groupName:
                                    description: The API group name that should be
                                      used when POSTing ChallengePayload resources
                                      to the webhook apiserver. This should be the
                                      same as the GroupName specified in the webhook
                                      provider implementation.
                                    type: string
                                  solverName:
                                    description: The name of the solver to use, as
                                      defined in the webhook provider implementation.
                                      This will typically be the name of the provider,
                                      e.g. 'cloudflare'.
                                    type: string
                                required:
                                - groupName
                                - solverName
                                type: object
                            type: object
                          http01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the HTTP01 challenge flow.
                              It is not possible to obtain certificates for wildcard
                              domain names (e.g. `*.example.com`) using the HTTP01
                              challenge mechanism.
                            properties:
                              gatewayHTTPRoute:
                                description: The Gateway API is a sig-network community
                                  API that models service networking in Kubernetes
                                  (https://gateway-api.sigs.k8s.io/). The Gateway
                                  solver will create HTTPRoutes with the specified
                                  labels in the same namespace as the challenge. This
                                  solver is experimental, and fields / behaviour may
                                  change in the future.
                                properties:
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: The labels that cert-manager will
                                      use when creating the temporary HTTPRoute needed
                                      for solving the HTTP-01 challenge. These labels
                                      must match the label selector of at least one
                                      Gateway.
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                              ingress:
                                description: The ingress based HTTP01 challenge solver
                                  will solve challenges by creating or modifying Ingress
                                  resources in order to route requests for '/.well-known/acme-challenge/XYZ'
                                  to 'challenge solver' pods that are provisioned
                                  by cert-manager for each Challenge to be completed.
                                properties:
                                  class:
                                    description: The ingress class to use when creating
                                      Ingress resources to solve ACME challenges that
                                      use this challenge solver. Only one of 'class'
                                      or 'name' may be specified.
                                    type: string
                                  ingressTemplate:
                                    description: Optional ingress template used to
                                      configure the ACME challenge solver ingress
                                      used for HTTP01 challenges.
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          ingress used to solve HTTP01 challenges.
                                          Only the 'labels' and 'annotations' fields
                                          may be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the created ACME HTTP01 solver
                                              ingress.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver ingress.
                                            type: object
                                        type: object
                                    type: object
                                  name:
                                    description: The name of the ingress resource
                                      that should have ACME challenge solving routes
                                      inserted into it in order to solve HTTP01 challenges.
                                      This is typically used in conjunction with ingress
                                      controllers like ingress-gce, which maintains
                                      a 1:1 mapping between external IPs and ingress
                                      resources.
                                    type: string
                                  podTemplate:
                                    description: Optional pod template used to configure
                                      the ACME challenge solver pods used for HTTP01
                                      challenges.
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          pod used to solve HTTP01 challenges. Only
                                          the 'labels' and 'annotations' fields may
                                          be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the create ACME HTTP01 solver
                                              pods.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver pods.
                                            type: object
                                        type: object
                                      spec:
                                        description: PodSpec defines overrides for
                                          the HTTP01 challenge solver pod. Only the
                                          'priorityClassName', 'nodeSelector', 'affinity',
                                          'serviceAccountName' and 'tolerations' fields
                                          are supported currently. All other fields
                                          will be ignored.
                                        properties:
                                          affinity:
                                            description: If specified, the pod's scheduling
                                              constraints
                                            properties:
                                              nodeAffinity:
                                                description: Describes node affinity
                                                  scheduling rules for the pod.
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      matches the corresponding matchExpressions;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: An empty preferred
                                                        scheduling term matches all
                                                        objects with implicit weight
                                                        0 (i.e. it's a no-op). A null
                                                        preferred scheduling term
                                                        matches no objects (i.e. is
                                                        also a no-op).
                                                      properties:
                                                        preference:
                                                          description: A node selector
                                                            term, associated with
                                                            the corresponding weight.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        weight:
                                                          description: Weight associated
                                                            with matching the corresponding
                                                            nodeSelectorTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - preference
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to an update), the system
                                                      may or may not try to eventually
                                                      evict the pod from its node.
                                                    properties:
                                                      nodeSelectorTerms:
                                                        description: Required. A list
                                                          of node selector terms.
                                                          The terms are ORed.
                                                        items:
                                                          description: A null or empty
                                                            node selector term matches
                                                            no objects. The requirements
                                                            of them are ANDed. The
                                                            TopologySelectorTerm type
                                                            implements a subset of
                                                            the NodeSelectorTerm.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        type: array
                                                    required:
                                                    - nodeSelectorTerms
                                                    type: object
                                                type: object
                                              podAffinity:
                                                description: Describes pod affinity
                                                  scheduling rules (e.g. co-locate
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      has pods which matches the corresponding
                                                      podAffinityTerm; the node(s)
                                                      with the highest sum are the
                                                      most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is beta-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is beta-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                              podAntiAffinity:
                                                description: Describes pod anti-affinity
                                                  scheduling rules (e.g. avoid putting
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the anti-affinity
                                                      expressions specified by this
                                                      field, but it may choose a node
                                                      that violates one or more of
                                                      the expressions. The node that
                                                      is most preferred is the one
                                                      with the greatest sum of weights,
                                                      i.e. for each node that meets
                                                      all of the scheduling requirements
                                                      (resource request, requiredDuringScheduling
                                                      anti-affinity expressions, etc.),
                                                      compute a sum by iterating through
                                                      the elements of this field and
                                                      adding "weight" to the sum if
                                                      the node has pods which matches
                                                      the corresponding podAffinityTerm;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is beta-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the anti-affinity
                                                      requirements specified by this
                                                      field are not met at scheduling
                                                      time, the pod will not be scheduled
                                                      onto the node. If the anti-affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is beta-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                            type: object
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: 'NodeSelector is a selector
                                              which must be true for the pod to fit
                                              on a node. Selector which must match
                                              a node''s labels for the pod to be scheduled
                                              on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                            type: object
                                          priorityClassName:
                                            description: If specified, the pod's priorityClassName.
                                            type: string
                                          serviceAccountName:
                                            description: If specified, the pod's service
                                              account
                                            type: string
                                          tolerations:
                                            description: If specified, the pod's tolerations.
                                            items:
                                              description: The pod this Toleration
                                                is attached to tolerates any taint
                                                that matches the triple <key,value,effect>
                                                using the matching operator <operator>.
                                              properties:
                                                effect:
                                                  description: Effect indicates the
                                                    taint effect to match. Empty means
                                                    match all taint effects. When
                                                    specified, allowed values are
                                                    NoSchedule, PreferNoSchedule and
                                                    NoExecute.
                                                  type: string
                                                key:
                                                  description: Key is the taint key
                                                    that the toleration applies to.
                                                    Empty means match all taint keys.
                                                    If the key is empty, operator
                                                    must be Exists; this combination
                                                    means to match all values and
                                                    all keys.
                                                  type: string
                                                operator:
                                                  description: Operator represents
                                                    a key's relationship to the value.
                                                    Valid operators are Exists and
                                                    Equal. Defaults to Equal. Exists
                                                    is equivalent to wildcard for
                                                    value, so that a pod can tolerate
                                                    all taints of a particular category.
                                                  type: string
                                                tolerationSeconds:
                                                  description: TolerationSeconds represents
                                                    the period of time the toleration
                                                    (which must be of effect NoExecute,
                                                    otherwise this field is ignored)
                                                    tolerates the taint. By default,
                                                    it is not set, which means tolerate
                                                    the taint forever (do not evict).
                                                    Zero and negative values will
                                                    be treated as 0 (evict immediately)
                                                    by the system.
                                                  format: int64
                                                  type: integer
                                                value:
                                                  description: Value is the taint
                                                    value the toleration matches to.
                                                    If the operator is Exists, the
                                                    value should be empty, otherwise
                                                    just a regular string.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                            type: object
                          selector:
                            description: Selector selects a set of DNSNames on the
                              Certificate resource that should be solved using this
                              challenge solver. If not specified, the solver will
                              be treated as the 'default' solver with the lowest priority,
                              i.e. if any other solver has a more specific match,
                              it will be used instead.
                            properties:
                              dnsNames:
                                description: List of DNSNames that this solver will
                                  be used to solve. If specified and a match is found,
                                  a dnsNames selector will take precedence over a
                                  dnsZones selector. If multiple solvers match with
                                  the same dnsNames value, the solver with the most
                                  matching labels in matchLabels will be selected.
                                  If neither has more matches, the solver defined
                                  earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              dnsZones:
                                description: List of DNSZones that this solver will
                                  be used to solve. The most specific DNS zone match
                                  specified here will take precedence over other DNS
                                  zone matches, so a solver specifying sys.example.com
                                  will be selected over one specifying example.com
                                  for the domain www.sys.example.com. If multiple
                                  solvers match with the same dnsZones value, the
                                  solver with the most matching labels in matchLabels
                                  will be selected. If neither has more matches, the
                                  solver defined earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: A label selector that is used to refine
                                  the set of certificate's that this challenge solver
                                  will apply to.
                                type: object
                            type: object
                        type: object
                      type: array
                  required:
                  - privateKeySecretRef
                  - server
                  type: object
                ca:
                  description: CA configures this issuer to sign certificates using
                    a signing CA keypair stored in a Secret resource. This is used
                    to build internal PKIs that are managed by cert-manager.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set, certificates will be issued without distribution points
                        set.
                      items:
                        type: string
                      type: array
                    ocspServers:
                      description: The OCSP server list is an X.509 v3 extension that
                        defines a list of URLs of OCSP responders. The OCSP responders
                        can be queried for the revocation status of an issued certificate.
                        If not set, the certificate will be issued with no OCSP servers
                        set. For example, an OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
                      items:
                        type: string
                      type: array
                    secretName:
                      description: SecretName is the name of the secret used to sign
                        Certificates issued by this Issuer.
                      type: string
                  required:
                  - secretName
                  type: object
                selfSigned:
                  description: SelfSigned configures this issuer to 'self sign' certificates
                    using the private key used to create the CertificateRequest object.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set certificate will be issued without CDP. Values are strings.
                      items:
                        type: string
                      type: array
                  type: object
                vault:
                  description: Vault configures this issuer to sign certificates using
                    a HashiCorp Vault PKI backend.
                  properties:
                    auth:
                      description: Auth configures how cert-manager authenticates
                        with the Vault server.
                      properties:
                        appRole:
                          description: AppRole authenticates with Vault using the
                            App Role auth mechanism, with the role and secret stored
                            in a Kubernetes Secret resource.
                          properties:
                            path:
                              description: 'Path where the App Role authentication
                                backend is mounted in Vault, e.g: "approle"'
                              type: string
                            roleId:
                              description: RoleID configured in the App Role authentication
                                backend when setting up the authentication backend
                                in Vault.
                              type: string
                            secretRef:
                              description: Reference to a key in a Secret that contains
                                the App Role secret used to authenticate with Vault.
                                The `key` field must be specified and denotes which
                                entry within the Secret resource is used as the app
                                role secret.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - path
                          - roleId
                          - secretRef
                          type: object
                        kubernetes:
                          description: Kubernetes authenticates with Vault by passing
                            the ServiceAccount token stored in the named Secret resource
                            to the Vault server.
                          properties:
                            mountPath:
                              description: The Vault mountPath here is the mount path
                                to use when authenticating with Vault. For example,
                                setting a value to `/v1/auth/foo`, will use the path
                                `/v1/auth/foo/login` to authenticate with Vault. If
                                unspecified, the default value "/v1/auth/kubernetes"
                                will be used.
                              type: string
                            role:
                              description: A required field containing the Vault Role
                                to assume. A Role binds a Kubernetes ServiceAccount
                                with a set of Vault policies.
                              type: string
                            secretRef:
                              description: The required Secret field containing a
                                Kubernetes ServiceAccount JWT used for authenticating
                                with Vault. Use of 'ambient credentials' is not supported.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - role
                          - secretRef
                          type: object
                        tokenSecretRef:
                          description: TokenSecretRef authenticates with Vault by
                            presenting a token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    caBundle:
                      description: PEM-encoded CA bundle (base64-encoded) used to
                        validate Vault server certificate. Only used if the Server
                        URL is using HTTPS protocol. This parameter is ignored for
                        plain HTTP protocol connection. If not set the system root
                        certificates are used to validate the TLS connection.
                      format: byte
                      type: string
                    namespace:
                      description: 'Name of the vault namespace. Namespaces is a set
                        of features within Vault Enterprise that allows Vault environments
                        to support Secure Multi-tenancy. e.g: "ns1" More about namespaces
                        can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                      type: string
                    path:
                      description: 'Path is the mount path of the Vault PKI backend''s
                        `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".'
                      type: string
                    server:
                      description: 'Server is the connection address for the Vault
                        server, e.g: "https://vault.example.com:8200".'
                      type: string
                  required:
                  - auth
                  - path
                  - server
                  type: object
                venafi:
                  description: Venafi configures this issuer to sign certificates
                    using a Venafi TPP or Venafi Cloud policy zone.
                  properties:
                    cloud:
                      description: Cloud specifies the Venafi cloud configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        apiTokenSecretRef:
                          description: APITokenSecretRef is a secret key selector
                            for the Venafi Cloud API token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: URL is the base URL for Venafi Cloud. Defaults
                            to "https://api.venafi.cloud/v1".
                          type: string
                      required:
                      - apiTokenSecretRef
                      type: object
                    tpp:
                      description: TPP specifies Trust Protection Platform configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        caBundle:
                          description: CABundle is a PEM encoded TLS certificate to
                            use to verify connections to the TPP instance. If specified,
                            system roots will not be used and the issuing CA for the
                            TPP instance must be verifiable using the provided root.
                            If not specified, the connection will be verified using
                            the cert-manager system root certificates.
                          format: byte
                          type: string
                        credentialsRef:
                          description: CredentialsRef is a reference to a Secret containing
                            the username and password for the TPP server. The secret
                            must contain two keys, 'username' and 'password'.
                          properties:
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: 'URL is the base URL for the vedsdk endpoint
                            of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".'
                          type: string
                      required:
                      - credentialsRef
                      - url
                      type: object
                    zone:
                      description: Zone is the Venafi Policy Zone to use for this
                        issuer. All requests made to the Venafi platform will be restricted
                        by the named zone policy. This field is required.
                      type: string
                  required:
                  - zone
                  type: object
              type: object
            status:
              description: Status of the ClusterIssuer. This is set and managed automatically.
              properties:
                acme:
                  description: ACME specific status options. This field should only
                    be set if the Issuer is configured to use an ACME server to issue
                    certificates.
                  properties:
                    lastRegisteredEmail:
                      description: LastRegisteredEmail is the email associated with
                        the latest registered ACME account, in order to track changes
                        made to registered account associated with the  Issuer
                      type: string
                    uri:
                      description: URI is the unique account identifier, which can
                        also be used to retrieve account details from the CA
                      type: string
                  type: object
                conditions:
                  description: List of status conditions to indicate the status of
                    a CertificateRequest. Known condition types are `Ready`.
                  items:
                    description: IssuerCondition contains condition information for
                      an Issuer.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.condition[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the Issuer.
                        format: int64
                        type: integer
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - cert-manager
      kind: ClusterIssuer
      listKind: ClusterIssuerList
      plural: clusterissuers
      singular: clusterissuer
    conditions:
    - lastTransitionTime: "2021-12-04T17:04:21Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-04T17:04:22Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2021-12-16T17:27:05Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-pipelines
      kustomize.toolkit.fluxcd.io/name: tekton
      kustomize.toolkit.fluxcd.io/namespace: flux-system
      pipeline.tekton.dev/release: v0.31.0
      version: v0.31.0
    name: clustertasks.tekton.dev
    resourceVersion: "10150593"
    uid: d48ef529-c2d9-4834-9940-3bc54019217b
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN2akNDQW1TZ0F3SUJBZ0lRUHpDT3RaZjF1dk1VcmUwTnhmd0lMREFLQmdncWhrak9QUVFEQWpCT01SUXcKRWdZRFZRUUtFd3RyYm1GMGFYWmxMbVJsZGpFMk1EUUdBMVVFQXhNdGRHVnJkRzl1TFhCcGNHVnNhVzVsY3kxMwpaV0pvYjI5ckxuUmxhM1J2Ymkxd2FYQmxiR2x1WlhNdWMzWmpNQjRYRFRJeE1USXhOakUzTWpjeE9Gb1hEVEl4Ck1USXlNekUzTWpjeE9Gb3dUakVVTUJJR0ExVUVDaE1MYTI1aGRHbDJaUzVrWlhZeE5qQTBCZ05WQkFNVExYUmwKYTNSdmJpMXdhWEJsYkdsdVpYTXRkMlZpYUc5dmF5NTBaV3QwYjI0dGNHbHdaV3hwYm1WekxuTjJZekJaTUJNRwpCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkpiOGV4WnJ6ZUFNeFJvRzhvV2RlWVRSb0g1K0l6L2NITFpNClJ0M0d4MlE3VlU0ZXpKc01sZCtwQ2tiQWhlb09naW5pV2daWU51Q3lGTThNdG51Y3YrYWpnZ0VpTUlJQkhqQU8KQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUE4RwpBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZMRENaRHU1V08xaisyY0FYaE1KRWJmdENMd3pNSUc4CkJnTlZIUkVFZ2JRd2diR0NHSFJsYTNSdmJpMXdhWEJsYkdsdVpYTXRkMlZpYUc5dmE0SXBkR1ZyZEc5dUxYQnAKY0dWc2FXNWxjeTEzWldKb2IyOXJMblJsYTNSdmJpMXdhWEJsYkdsdVpYT0NMWFJsYTNSdmJpMXdhWEJsYkdsdQpaWE10ZDJWaWFHOXZheTUwWld0MGIyNHRjR2x3Wld4cGJtVnpMbk4yWTRJN2RHVnJkRzl1TFhCcGNHVnNhVzVsCmN5MTNaV0pvYjI5ckxuUmxhM1J2Ymkxd2FYQmxiR2x1WlhNdWMzWmpMbU5zZFhOMFpYSXViRzlqWVd3d0NnWUkKS29aSXpqMEVBd0lEU0FBd1JRSWhBUGsyUXppMFowM2RJaFlXS2VNSTE5c1RkVzRNb2t1UU82dDFCZjZnYm5HeQpBaUFmWlN4VytuOGtvdE9SMjRJWVlDZEdhSi9wMTRRdWg5Vld2QUllaDZnb3FBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          service:
            name: tekton-pipelines-webhook
            namespace: tekton-pipelines
            path: /resource-conversion
            port: 443
        conversionReviewVersions:
        - v1beta1
    group: tekton.dev
    names:
      categories:
      - tekton
      - tekton-pipelines
      kind: ClusterTask
      listKind: ClusterTaskList
      plural: clustertasks
      singular: clustertask
    scope: Cluster
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: false
      subresources:
        status: {}
    - name: v1beta1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - tekton
      - tekton-pipelines
      kind: ClusterTask
      listKind: ClusterTaskList
      plural: clustertasks
      singular: clustertask
    conditions:
    - lastTransitionTime: "2021-12-16T17:27:05Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-16T17:27:05Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2021-12-16T17:27:05Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-triggers
      kustomize.toolkit.fluxcd.io/name: tekton
      kustomize.toolkit.fluxcd.io/namespace: flux-system
      triggers.tekton.dev/release: v0.17.1
      version: v0.17.1
    name: clustertriggerbindings.triggers.tekton.dev
    resourceVersion: "10150263"
    uid: e6e40505-ed6e-41c2-b39b-e40551613d3d
  spec:
    conversion:
      strategy: None
    group: triggers.tekton.dev
    names:
      categories:
      - tekton
      - tekton-triggers
      kind: ClusterTriggerBinding
      listKind: ClusterTriggerBindingList
      plural: clustertriggerbindings
      shortNames:
      - ctb
      singular: clustertriggerbinding
    scope: Cluster
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: false
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - tekton
      - tekton-triggers
      kind: ClusterTriggerBinding
      listKind: ClusterTriggerBindingList
      plural: clustertriggerbindings
      shortNames:
      - ctb
      singular: clustertriggerbinding
    conditions:
    - lastTransitionTime: "2021-12-16T17:27:05Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-16T17:27:05Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2021-12-16T17:27:05Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-pipelines
      kustomize.toolkit.fluxcd.io/name: tekton
      kustomize.toolkit.fluxcd.io/namespace: flux-system
      pipeline.tekton.dev/release: v0.31.0
      version: v0.31.0
    name: conditions.tekton.dev
    resourceVersion: "10150267"
    uid: 822cedc1-184f-4850-88fa-c77b0f6f3402
  spec:
    conversion:
      strategy: None
    group: tekton.dev
    names:
      categories:
      - tekton
      - tekton-pipelines
      kind: Condition
      listKind: ConditionList
      plural: conditions
      singular: condition
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - tekton
      - tekton-pipelines
      kind: Condition
      listKind: ConditionList
      plural: conditions
      singular: condition
    conditions:
    - lastTransitionTime: "2021-12-16T17:27:05Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-16T17:27:05Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2021-12-16T17:27:05Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-triggers
      kustomize.toolkit.fluxcd.io/name: tekton
      kustomize.toolkit.fluxcd.io/namespace: flux-system
      triggers.tekton.dev/release: v0.17.1
      version: v0.17.1
    name: eventlisteners.triggers.tekton.dev
    resourceVersion: "10150270"
    uid: 8d128f0a-ffc9-409e-b7c5-e5993ae10756
  spec:
    conversion:
      strategy: None
    group: triggers.tekton.dev
    names:
      categories:
      - tekton
      - tekton-triggers
      kind: EventListener
      listKind: EventListenerList
      plural: eventlisteners
      shortNames:
      - el
      singular: eventlistener
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.address.url
        name: Address
        type: string
      - jsonPath: .status.conditions[?(@.type=='Available')].status
        name: Available
        type: string
      - jsonPath: .status.conditions[?(@.type=='Available')].reason
        name: Reason
        type: string
      - jsonPath: .status.conditions[?(@.type=='Ready')].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=='Ready')].reason
        name: Reason
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.address.url
        name: Address
        type: string
      - jsonPath: .status.conditions[?(@.type=='Available')].status
        name: Available
        type: string
      - jsonPath: .status.conditions[?(@.type=='Available')].reason
        name: Reason
        type: string
      - jsonPath: .status.conditions[?(@.type=='Ready')].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=='Ready')].reason
        name: Reason
        type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: false
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - tekton
      - tekton-triggers
      kind: EventListener
      listKind: EventListenerList
      plural: eventlisteners
      shortNames:
      - el
      singular: eventlistener
    conditions:
    - lastTransitionTime: "2021-12-16T17:27:05Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-16T17:27:05Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2021-12-16T17:27:04Z"
    generation: 1
    labels:
      app.kubernetes.io/component: dashboard
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-dashboard
      kustomize.toolkit.fluxcd.io/name: tekton-dashboard
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: extensions.dashboard.tekton.dev
    resourceVersion: "10150246"
    uid: 08efde89-35eb-4f2c-9618-009cfcf23e7f
  spec:
    conversion:
      strategy: None
    group: dashboard.tekton.dev
    names:
      categories:
      - tekton
      - tekton-dashboard
      kind: Extension
      listKind: ExtensionList
      plural: extensions
      shortNames:
      - ext
      - exts
      singular: extension
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .spec.apiVersion
        name: API version
        type: string
      - jsonPath: .spec.name
        name: Kind
        type: string
      - jsonPath: .spec.displayname
        name: Display name
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - tekton
      - tekton-dashboard
      kind: Extension
      listKind: ExtensionList
      plural: extensions
      shortNames:
      - ext
      - exts
      singular: extension
    conditions:
    - lastTransitionTime: "2021-12-16T17:27:04Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-16T17:27:04Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: "2021-12-04T17:03:56Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v0.24.0
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: gitrepositories.source.toolkit.fluxcd.io
    resourceVersion: "1782"
    uid: 5248bd50-d515-4f1b-870a-2c6cef133ac0
  spec:
    conversion:
      strategy: None
    group: source.toolkit.fluxcd.io
    names:
      kind: GitRepository
      listKind: GitRepositoryList
      plural: gitrepositories
      shortNames:
      - gitrepo
      singular: gitrepository
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .spec.url
        name: URL
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: GitRepository is the Schema for the gitrepositories API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: GitRepositorySpec defines the desired state of a Git repository.
              properties:
                accessFrom:
                  description: AccessFrom defines an Access Control List for allowing
                    cross-namespace references to this object.
                  properties:
                    namespaceSelectors:
                      description: NamespaceSelectors is the list of namespace selectors
                        to which this ACL applies. Items in this list are evaluated
                        using a logical OR operation.
                      items:
                        description: NamespaceSelector selects the namespaces to which
                          this ACL applies. An empty map of MatchLabels matches all
                          namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                  - namespaceSelectors
                  type: object
                gitImplementation:
                  default: go-git
                  description: Determines which git client library to use. Defaults
                    to go-git, valid values are ('go-git', 'libgit2').
                  enum:
                  - go-git
                  - libgit2
                  type: string
                ignore:
                  description: Ignore overrides the set of excluded patterns in the
                    .sourceignore format (which is the same as .gitignore). If not
                    provided, a default will be used, consult the documentation for
                    your version to find out what those are.
                  type: string
                include:
                  description: Extra git repositories to map into the repository
                  items:
                    description: GitRepositoryInclude defines a source with a from
                      and to path.
                    properties:
                      fromPath:
                        description: The path to copy contents from, defaults to the
                          root directory.
                        type: string
                      repository:
                        description: Reference to a GitRepository to include.
                        properties:
                          name:
                            description: Name of the referent
                            type: string
                        required:
                        - name
                        type: object
                      toPath:
                        description: The path to copy contents to, defaults to the
                          name of the source ref.
                        type: string
                    required:
                    - repository
                    type: object
                  type: array
                interval:
                  description: The interval at which to check for repository updates.
                  type: string
                recurseSubmodules:
                  description: When enabled, after the clone is created, initializes
                    all submodules within, using their default settings. This option
                    is available only when using the 'go-git' GitImplementation.
                  type: boolean
                ref:
                  description: The Git reference to checkout and monitor for changes,
                    defaults to master branch.
                  properties:
                    branch:
                      description: The Git branch to checkout, defaults to master.
                      type: string
                    commit:
                      description: The Git commit SHA to checkout, if specified Tag
                        filters will be ignored.
                      type: string
                    semver:
                      description: The Git tag semver expression, takes precedence
                        over Tag.
                      type: string
                    tag:
                      description: The Git tag to checkout, takes precedence over
                        Branch.
                      type: string
                  type: object
                secretRef:
                  description: The secret name containing the Git credentials. For
                    HTTPS repositories the secret must contain username and password
                    fields. For SSH repositories the secret must contain identity,
                    identity.pub and known_hosts fields.
                  properties:
                    name:
                      description: Name of the referent
                      type: string
                  required:
                  - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend the reconciliation
                    of this source.
                  type: boolean
                timeout:
                  default: 20s
                  description: The timeout for remote Git operations like cloning,
                    defaults to 20s.
                  type: string
                url:
                  description: The repository URL, can be a HTTP/S or SSH address.
                  pattern: ^(http|https|ssh)://
                  type: string
                verify:
                  description: Verify OpenPGP signature for the Git commit HEAD points
                    to.
                  properties:
                    mode:
                      description: Mode describes what git object should be verified,
                        currently ('head').
                      enum:
                      - head
                      type: string
                    secretRef:
                      description: The secret name containing the public keys of all
                        trusted Git authors.
                      properties:
                        name:
                          description: Name of the referent
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - mode
                  type: object
              required:
              - interval
              - url
              type: object
            status:
              description: GitRepositoryStatus defines the observed state of a Git
                repository.
              properties:
                artifact:
                  description: Artifact represents the output of the last successful
                    repository sync.
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the artifact.
                      type: string
                    lastUpdateTime:
                      description: LastUpdateTime is the timestamp corresponding to
                        the last update of this artifact.
                      format: date-time
                      type: string
                    path:
                      description: Path is the relative file path of this artifact.
                      type: string
                    revision:
                      description: Revision is a human readable identifier traceable
                        in the origin source system. It can be a Git commit SHA, Git
                        tag, a Helm index timestamp, a Helm chart version, etc.
                      type: string
                    url:
                      description: URL is the HTTP address of this artifact.
                      type: string
                  required:
                  - path
                  - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the GitRepository.
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                includedArtifacts:
                  description: IncludedArtifacts represents the included artifacts
                    from the last successful repository sync.
                  items:
                    description: Artifact represents the output of a source synchronisation.
                    properties:
                      checksum:
                        description: Checksum is the SHA256 checksum of the artifact.
                        type: string
                      lastUpdateTime:
                        description: LastUpdateTime is the timestamp corresponding
                          to the last update of this artifact.
                        format: date-time
                        type: string
                      path:
                        description: Path is the relative file path of this artifact.
                        type: string
                      revision:
                        description: Revision is a human readable identifier traceable
                          in the origin source system. It can be a Git commit SHA,
                          Git tag, a Helm index timestamp, a Helm chart version, etc.
                        type: string
                      url:
                        description: URL is the HTTP address of this artifact.
                        type: string
                    required:
                    - path
                    - url
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most
                    recent reconcile request value, so a change can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                url:
                  description: URL is the download link for the artifact output of
                    the last repository sync.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: GitRepository
      listKind: GitRepositoryList
      plural: gitrepositories
      shortNames:
      - gitrepo
      singular: gitrepository
    conditions:
    - lastTransitionTime: "2021-12-04T17:03:56Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-04T17:03:56Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: "2021-12-04T17:03:56Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v0.24.0
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: helmcharts.source.toolkit.fluxcd.io
    resourceVersion: "1783"
    uid: c7a67119-dbfc-4be7-a290-052e5e394fef
  spec:
    conversion:
      strategy: None
    group: source.toolkit.fluxcd.io
    names:
      kind: HelmChart
      listKind: HelmChartList
      plural: helmcharts
      shortNames:
      - hc
      singular: helmchart
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .spec.chart
        name: Chart
        type: string
      - jsonPath: .spec.version
        name: Version
        type: string
      - jsonPath: .spec.sourceRef.kind
        name: Source Kind
        type: string
      - jsonPath: .spec.sourceRef.name
        name: Source Name
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: HelmChart is the Schema for the helmcharts API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: HelmChartSpec defines the desired state of a Helm chart.
              properties:
                accessFrom:
                  description: AccessFrom defines an Access Control List for allowing
                    cross-namespace references to this object.
                  properties:
                    namespaceSelectors:
                      description: NamespaceSelectors is the list of namespace selectors
                        to which this ACL applies. Items in this list are evaluated
                        using a logical OR operation.
                      items:
                        description: NamespaceSelector selects the namespaces to which
                          this ACL applies. An empty map of MatchLabels matches all
                          namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                  - namespaceSelectors
                  type: object
                chart:
                  description: The name or path the Helm chart is available at in
                    the SourceRef.
                  type: string
                interval:
                  description: The interval at which to check the Source for updates.
                  type: string
                reconcileStrategy:
                  default: ChartVersion
                  description: Determines what enables the creation of a new artifact.
                    Valid values are ('ChartVersion', 'Revision'). See the documentation
                    of the values for an explanation on their behavior. Defaults to
                    ChartVersion when omitted.
                  enum:
                  - ChartVersion
                  - Revision
                  type: string
                sourceRef:
                  description: The reference to the Source the chart is available
                    at.
                  properties:
                    apiVersion:
                      description: APIVersion of the referent.
                      type: string
                    kind:
                      description: Kind of the referent, valid values are ('HelmRepository',
                        'GitRepository', 'Bucket').
                      enum:
                      - HelmRepository
                      - GitRepository
                      - Bucket
                      type: string
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend the reconciliation
                    of this source.
                  type: boolean
                valuesFile:
                  description: Alternative values file to use as the default chart
                    values, expected to be a relative path in the SourceRef. Deprecated
                    in favor of ValuesFiles, for backwards compatibility the file
                    defined here is merged before the ValuesFiles items. Ignored when
                    omitted.
                  type: string
                valuesFiles:
                  description: Alternative list of values files to use as the chart
                    values (values.yaml is not included by default), expected to be
                    a relative path in the SourceRef. Values files are merged in the
                    order of this list with the last file overriding the first. Ignored
                    when omitted.
                  items:
                    type: string
                  type: array
                version:
                  default: '*'
                  description: The chart version semver expression, ignored for charts
                    from GitRepository and Bucket sources. Defaults to latest when
                    omitted.
                  type: string
              required:
              - chart
              - interval
              - sourceRef
              type: object
            status:
              description: HelmChartStatus defines the observed state of the HelmChart.
              properties:
                artifact:
                  description: Artifact represents the output of the last successful
                    chart sync.
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the artifact.
                      type: string
                    lastUpdateTime:
                      description: LastUpdateTime is the timestamp corresponding to
                        the last update of this artifact.
                      format: date-time
                      type: string
                    path:
                      description: Path is the relative file path of this artifact.
                      type: string
                    revision:
                      description: Revision is a human readable identifier traceable
                        in the origin source system. It can be a Git commit SHA, Git
                        tag, a Helm index timestamp, a Helm chart version, etc.
                      type: string
                    url:
                      description: URL is the HTTP address of this artifact.
                      type: string
                  required:
                  - path
                  - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the HelmChart.
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most
                    recent reconcile request value, so a change can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                url:
                  description: URL is the download link for the last chart pulled.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: HelmChart
      listKind: HelmChartList
      plural: helmcharts
      shortNames:
      - hc
      singular: helmchart
    conditions:
    - lastTransitionTime: "2021-12-04T17:03:56Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-04T17:03:56Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: "2021-12-04T17:03:56Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v0.24.0
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: helmreleases.helm.toolkit.fluxcd.io
    resourceVersion: "1784"
    uid: 9805baff-1e83-4923-a66e-15007a02207c
  spec:
    conversion:
      strategy: None
    group: helm.toolkit.fluxcd.io
    names:
      kind: HelmRelease
      listKind: HelmReleaseList
      plural: helmreleases
      shortNames:
      - hr
      singular: helmrelease
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v2beta1
      schema:
        openAPIV3Schema:
          description: HelmRelease is the Schema for the helmreleases API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: HelmReleaseSpec defines the desired state of a Helm release.
              properties:
                chart:
                  description: Chart defines the template of the v1beta1.HelmChart
                    that should be created for this HelmRelease.
                  properties:
                    spec:
                      description: Spec holds the template for the v1beta1.HelmChartSpec
                        for this HelmRelease.
                      properties:
                        chart:
                          description: The name or path the Helm chart is available
                            at in the SourceRef.
                          type: string
                        interval:
                          description: Interval at which to check the v1beta1.Source
                            for updates. Defaults to 'HelmReleaseSpec.Interval'.
                          type: string
                        reconcileStrategy:
                          default: ChartVersion
                          description: Determines what enables the creation of a new
                            artifact. Valid values are ('ChartVersion', 'Revision').
                            See the documentation of the values for an explanation
                            on their behavior. Defaults to ChartVersion when omitted.
                          enum:
                          - ChartVersion
                          - Revision
                          type: string
                        sourceRef:
                          description: The name and namespace of the v1beta1.Source
                            the chart is available at.
                          properties:
                            apiVersion:
                              description: APIVersion of the referent.
                              type: string
                            kind:
                              description: Kind of the referent.
                              enum:
                              - HelmRepository
                              - GitRepository
                              - Bucket
                              type: string
                            name:
                              description: Name of the referent.
                              maxLength: 253
                              minLength: 1
                              type: string
                            namespace:
                              description: Namespace of the referent.
                              maxLength: 63
                              minLength: 1
                              type: string
                          required:
                          - name
                          type: object
                        valuesFile:
                          description: Alternative values file to use as the default
                            chart values, expected to be a relative path in the SourceRef.
                            Deprecated in favor of ValuesFiles, for backwards compatibility
                            the file defined here is merged before the ValuesFiles
                            items. Ignored when omitted.
                          type: string
                        valuesFiles:
                          description: Alternative list of values files to use as
                            the chart values (values.yaml is not included by default),
                            expected to be a relative path in the SourceRef. Values
                            files are merged in the order of this list with the last
                            file overriding the first. Ignored when omitted.
                          items:
                            type: string
                          type: array
                        version:
                          default: '*'
                          description: Version semver expression, ignored for charts
                            from v1beta1.GitRepository and v1beta1.Bucket sources.
                            Defaults to latest when omitted.
                          type: string
                      required:
                      - chart
                      - sourceRef
                      type: object
                  required:
                  - spec
                  type: object
                dependsOn:
                  description: DependsOn may contain a dependency.CrossNamespaceDependencyReference
                    slice with references to HelmRelease resources that must be ready
                    before this HelmRelease can be reconciled.
                  items:
                    description: CrossNamespaceDependencyReference holds the reference
                      to a dependency.
                    properties:
                      name:
                        description: Name holds the name reference of a dependency.
                        type: string
                      namespace:
                        description: Namespace holds the namespace reference of a
                          dependency.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                install:
                  description: Install holds the configuration for Helm install actions
                    for this HelmRelease.
                  properties:
                    crds:
                      description: "CRDs upgrade CRDs from the Helm Chart's crds directory
                        according to the CRD upgrade policy provided here. Valid values
                        are `Skip`, `Create` or `CreateReplace`. Default is `Create`
                        and if omitted CRDs are installed but not updated. \n Skip:
                        do neither install nor replace (update) any CRDs. \n Create:
                        new CRDs are created, existing CRDs are neither updated nor
                        deleted. \n CreateReplace: new CRDs are created, existing
                        CRDs are updated (replaced) but not deleted. \n By default,
                        CRDs are applied (installed) during Helm install action. With
                        this option users can opt-in to CRD replace existing CRDs
                        on Helm install actions, which is not (yet) natively supported
                        by Helm. https://helm.sh/docs/chart_best_practices/custom_resource_definitions."
                      enum:
                      - Skip
                      - Create
                      - CreateReplace
                      type: string
                    createNamespace:
                      description: CreateNamespace tells the Helm install action to
                        create the HelmReleaseSpec.TargetNamespace if it does not
                        exist yet. On uninstall, the namespace will not be garbage
                        collected.
                      type: boolean
                    disableHooks:
                      description: DisableHooks prevents hooks from running during
                        the Helm install action.
                      type: boolean
                    disableOpenAPIValidation:
                      description: DisableOpenAPIValidation prevents the Helm install
                        action from validating rendered templates against the Kubernetes
                        OpenAPI Schema.
                      type: boolean
                    disableWait:
                      description: DisableWait disables the waiting for resources
                        to be ready after a Helm install has been performed.
                      type: boolean
                    disableWaitForJobs:
                      description: DisableWaitForJobs disables waiting for jobs to
                        complete after a Helm install has been performed.
                      type: boolean
                    remediation:
                      description: Remediation holds the remediation configuration
                        for when the Helm install action for the HelmRelease fails.
                        The default is to not perform any action.
                      properties:
                        ignoreTestFailures:
                          description: IgnoreTestFailures tells the controller to
                            skip remediation when the Helm tests are run after an
                            install action but fail. Defaults to 'Test.IgnoreFailures'.
                          type: boolean
                        remediateLastFailure:
                          description: RemediateLastFailure tells the controller to
                            remediate the last failure, when no retries remain. Defaults
                            to 'false'.
                          type: boolean
                        retries:
                          description: Retries is the number of retries that should
                            be attempted on failures before bailing. Remediation,
                            using an uninstall, is performed between each attempt.
                            Defaults to '0', a negative integer equals to unlimited
                            retries.
                          type: integer
                      type: object
                    replace:
                      description: Replace tells the Helm install action to re-use
                        the 'ReleaseName', but only if that name is a deleted release
                        which remains in the history.
                      type: boolean
                    skipCRDs:
                      description: "SkipCRDs tells the Helm install action to not
                        install any CRDs. By default, CRDs are installed if not already
                        present. \n Deprecated use CRD policy (`crds`) attribute with
                        value `Skip` instead."
                      type: boolean
                    timeout:
                      description: Timeout is the time to wait for any individual
                        Kubernetes operation (like Jobs for hooks) during the performance
                        of a Helm install action. Defaults to 'HelmReleaseSpec.Timeout'.
                      type: string
                  type: object
                interval:
                  description: Interval at which to reconcile the Helm release.
                  type: string
                kubeConfig:
                  description: KubeConfig for reconciling the HelmRelease on a remote
                    cluster. When specified, KubeConfig takes precedence over ServiceAccountName.
                  properties:
                    secretRef:
                      description: SecretRef holds the name to a secret that contains
                        a 'value' key with the kubeconfig file as the value. It must
                        be in the same namespace as the HelmRelease. It is recommended
                        that the kubeconfig is self-contained, and the secret is regularly
                        updated if credentials such as a cloud-access-token expire.
                        Cloud specific `cmd-path` auth helpers will not function without
                        adding binaries and credentials to the Pod that is responsible
                        for reconciling the HelmRelease.
                      properties:
                        name:
                          description: Name of the referent
                          type: string
                      required:
                      - name
                      type: object
                  type: object
                maxHistory:
                  description: MaxHistory is the number of revisions saved by Helm
                    for this HelmRelease. Use '0' for an unlimited number of revisions;
                    defaults to '10'.
                  type: integer
                postRenderers:
                  description: PostRenderers holds an array of Helm PostRenderers,
                    which will be applied in order of their definition.
                  items:
                    description: PostRenderer contains a Helm PostRenderer specification.
                    properties:
                      kustomize:
                        description: Kustomization to apply as PostRenderer.
                        properties:
                          images:
                            description: Images is a list of (image name, new name,
                              new tag or digest) for changing image names, tags or
                              digests. This can also be achieved with a patch, but
                              this operator is simpler to specify.
                            items:
                              description: Image contains an image name, a new name,
                                a new tag or digest, which will replace the original
                                name and tag.
                              properties:
                                digest:
                                  description: Digest is the value used to replace
                                    the original image tag. If digest is present NewTag
                                    value is ignored.
                                  type: string
                                name:
                                  description: Name is a tag-less image name.
                                  type: string
                                newName:
                                  description: NewName is the value used to replace
                                    the original name.
                                  type: string
                                newTag:
                                  description: NewTag is the value used to replace
                                    the original tag.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                          patchesJson6902:
                            description: JSON 6902 patches, defined as inline YAML
                              objects.
                            items:
                              description: JSON6902Patch contains a JSON6902 patch
                                and the target the patch should be applied to.
                              properties:
                                patch:
                                  description: Patch contains the JSON6902 patch document
                                    with an array of operation objects.
                                  items:
                                    description: JSON6902 is a JSON6902 operation
                                      object. https://tools.ietf.org/html/rfc6902#section-4
                                    properties:
                                      from:
                                        type: string
                                      op:
                                        enum:
                                        - test
                                        - remove
                                        - add
                                        - replace
                                        - move
                                        - copy
                                        type: string
                                      path:
                                        type: string
                                      value:
                                        x-kubernetes-preserve-unknown-fields: true
                                    required:
                                    - op
                                    - path
                                    type: object
                                  type: array
                                target:
                                  description: Target points to the resources that
                                    the patch document should be applied to.
                                  properties:
                                    annotationSelector:
                                      description: AnnotationSelector is a string
                                        that follows the label selection expression
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                        It matches with the resource annotations.
                                      type: string
                                    group:
                                      description: Group is the API group to select
                                        resources from. Together with Version and
                                        Kind it is capable of unambiguously identifying
                                        and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    kind:
                                      description: Kind of the API Group to select
                                        resources from. Together with Group and Version
                                        it is capable of unambiguously identifying
                                        and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    labelSelector:
                                      description: LabelSelector is a string that
                                        follows the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                        It matches with the resource labels.
                                      type: string
                                    name:
                                      description: Name to match resources with.
                                      type: string
                                    namespace:
                                      description: Namespace to select resources from.
                                      type: string
                                    version:
                                      description: Version of the API Group to select
                                        resources from. Together with Group and Kind
                                        it is capable of unambiguously identifying
                                        and/or selecting resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                  type: object
                              required:
                              - patch
                              - target
                              type: object
                            type: array
                          patchesStrategicMerge:
                            description: Strategic merge patches, defined as inline
                              YAML objects.
                            items:
                              x-kubernetes-preserve-unknown-fields: true
                            type: array
                        type: object
                    type: object
                  type: array
                releaseName:
                  description: ReleaseName used for the Helm release. Defaults to
                    a composition of '[TargetNamespace-]Name'.
                  maxLength: 53
                  minLength: 1
                  type: string
                rollback:
                  description: Rollback holds the configuration for Helm rollback
                    actions for this HelmRelease.
                  properties:
                    cleanupOnFail:
                      description: CleanupOnFail allows deletion of new resources
                        created during the Helm rollback action when it fails.
                      type: boolean
                    disableHooks:
                      description: DisableHooks prevents hooks from running during
                        the Helm rollback action.
                      type: boolean
                    disableWait:
                      description: DisableWait disables the waiting for resources
                        to be ready after a Helm rollback has been performed.
                      type: boolean
                    disableWaitForJobs:
                      description: DisableWaitForJobs disables waiting for jobs to
                        complete after a Helm rollback has been performed.
                      type: boolean
                    force:
                      description: Force forces resource updates through a replacement
                        strategy.
                      type: boolean
                    recreate:
                      description: Recreate performs pod restarts for the resource
                        if applicable.
                      type: boolean
                    timeout:
                      description: Timeout is the time to wait for any individual
                        Kubernetes operation (like Jobs for hooks) during the performance
                        of a Helm rollback action. Defaults to 'HelmReleaseSpec.Timeout'.
                      type: string
                  type: object
                serviceAccountName:
                  description: The name of the Kubernetes service account to impersonate
                    when reconciling this HelmRelease.
                  type: string
                storageNamespace:
                  description: StorageNamespace used for the Helm storage. Defaults
                    to the namespace of the HelmRelease.
                  maxLength: 63
                  minLength: 1
                  type: string
                suspend:
                  description: Suspend tells the controller to suspend reconciliation
                    for this HelmRelease, it does not apply to already started reconciliations.
                    Defaults to false.
                  type: boolean
                targetNamespace:
                  description: TargetNamespace to target when performing operations
                    for the HelmRelease. Defaults to the namespace of the HelmRelease.
                  maxLength: 63
                  minLength: 1
                  type: string
                test:
                  description: Test holds the configuration for Helm test actions
                    for this HelmRelease.
                  properties:
                    enable:
                      description: Enable enables Helm test actions for this HelmRelease
                        after an Helm install or upgrade action has been performed.
                      type: boolean
                    ignoreFailures:
                      description: IgnoreFailures tells the controller to skip remediation
                        when the Helm tests are run but fail. Can be overwritten for
                        tests run after install or upgrade actions in 'Install.IgnoreTestFailures'
                        and 'Upgrade.IgnoreTestFailures'.
                      type: boolean
                    timeout:
                      description: Timeout is the time to wait for any individual
                        Kubernetes operation during the performance of a Helm test
                        action. Defaults to 'HelmReleaseSpec.Timeout'.
                      type: string
                  type: object
                timeout:
                  description: Timeout is the time to wait for any individual Kubernetes
                    operation (like Jobs for hooks) during the performance of a Helm
                    action. Defaults to '5m0s'.
                  type: string
                uninstall:
                  description: Uninstall holds the configuration for Helm uninstall
                    actions for this HelmRelease.
                  properties:
                    disableHooks:
                      description: DisableHooks prevents hooks from running during
                        the Helm rollback action.
                      type: boolean
                    keepHistory:
                      description: KeepHistory tells Helm to remove all associated
                        resources and mark the release as deleted, but retain the
                        release history.
                      type: boolean
                    timeout:
                      description: Timeout is the time to wait for any individual
                        Kubernetes operation (like Jobs for hooks) during the performance
                        of a Helm uninstall action. Defaults to 'HelmReleaseSpec.Timeout'.
                      type: string
                  type: object
                upgrade:
                  description: Upgrade holds the configuration for Helm upgrade actions
                    for this HelmRelease.
                  properties:
                    cleanupOnFail:
                      description: CleanupOnFail allows deletion of new resources
                        created during the Helm upgrade action when it fails.
                      type: boolean
                    crds:
                      description: "CRDs upgrade CRDs from the Helm Chart's crds directory
                        according to the CRD upgrade policy provided here. Valid values
                        are `Skip`, `Create` or `CreateReplace`. Default is `Skip`
                        and if omitted CRDs are neither installed nor upgraded. \n
                        Skip: do neither install nor replace (update) any CRDs. \n
                        Create: new CRDs are created, existing CRDs are neither updated
                        nor deleted. \n CreateReplace: new CRDs are created, existing
                        CRDs are updated (replaced) but not deleted. \n By default,
                        CRDs are not applied during Helm upgrade action. With this
                        option users can opt-in to CRD upgrade, which is not (yet)
                        natively supported by Helm. https://helm.sh/docs/chart_best_practices/custom_resource_definitions."
                      enum:
                      - Skip
                      - Create
                      - CreateReplace
                      type: string
                    disableHooks:
                      description: DisableHooks prevents hooks from running during
                        the Helm upgrade action.
                      type: boolean
                    disableOpenAPIValidation:
                      description: DisableOpenAPIValidation prevents the Helm upgrade
                        action from validating rendered templates against the Kubernetes
                        OpenAPI Schema.
                      type: boolean
                    disableWait:
                      description: DisableWait disables the waiting for resources
                        to be ready after a Helm upgrade has been performed.
                      type: boolean
                    disableWaitForJobs:
                      description: DisableWaitForJobs disables waiting for jobs to
                        complete after a Helm upgrade has been performed.
                      type: boolean
                    force:
                      description: Force forces resource updates through a replacement
                        strategy.
                      type: boolean
                    preserveValues:
                      description: PreserveValues will make Helm reuse the last release's
                        values and merge in overrides from 'Values'. Setting this
                        flag makes the HelmRelease non-declarative.
                      type: boolean
                    remediation:
                      description: Remediation holds the remediation configuration
                        for when the Helm upgrade action for the HelmRelease fails.
                        The default is to not perform any action.
                      properties:
                        ignoreTestFailures:
                          description: IgnoreTestFailures tells the controller to
                            skip remediation when the Helm tests are run after an
                            upgrade action but fail. Defaults to 'Test.IgnoreFailures'.
                          type: boolean
                        remediateLastFailure:
                          description: RemediateLastFailure tells the controller to
                            remediate the last failure, when no retries remain. Defaults
                            to 'false' unless 'Retries' is greater than 0.
                          type: boolean
                        retries:
                          description: Retries is the number of retries that should
                            be attempted on failures before bailing. Remediation,
                            using 'Strategy', is performed between each attempt. Defaults
                            to '0', a negative integer equals to unlimited retries.
                          type: integer
                        strategy:
                          description: Strategy to use for failure remediation. Defaults
                            to 'rollback'.
                          enum:
                          - rollback
                          - uninstall
                          type: string
                      type: object
                    timeout:
                      description: Timeout is the time to wait for any individual
                        Kubernetes operation (like Jobs for hooks) during the performance
                        of a Helm upgrade action. Defaults to 'HelmReleaseSpec.Timeout'.
                      type: string
                  type: object
                values:
                  description: Values holds the values for this Helm release.
                  x-kubernetes-preserve-unknown-fields: true
                valuesFrom:
                  description: ValuesFrom holds references to resources containing
                    Helm values for this HelmRelease, and information about how they
                    should be merged.
                  items:
                    description: ValuesReference contains a reference to a resource
                      containing Helm values, and optionally the key they can be found
                      at.
                    properties:
                      kind:
                        description: Kind of the values referent, valid values are
                          ('Secret', 'ConfigMap').
                        enum:
                        - Secret
                        - ConfigMap
                        type: string
                      name:
                        description: Name of the values referent. Should reside in
                          the same namespace as the referring resource.
                        maxLength: 253
                        minLength: 1
                        type: string
                      optional:
                        description: Optional marks this ValuesReference as optional.
                          When set, a not found error for the values reference is
                          ignored, but any ValuesKey, TargetPath or transient error
                          will still result in a reconciliation failure.
                        type: boolean
                      targetPath:
                        description: TargetPath is the YAML dot notation path the
                          value should be merged at. When set, the ValuesKey is expected
                          to be a single flat value. Defaults to 'None', which results
                          in the values getting merged at the root.
                        type: string
                      valuesKey:
                        description: ValuesKey is the data key where the values.yaml
                          or a specific value can be found at. Defaults to 'values.yaml'.
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                  type: array
              required:
              - chart
              - interval
              type: object
            status:
              default:
                observedGeneration: -1
              description: HelmReleaseStatus defines the observed state of a HelmRelease.
              properties:
                conditions:
                  description: Conditions holds the conditions for the HelmRelease.
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                failures:
                  description: Failures is the reconciliation failure count against
                    the latest desired state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
                helmChart:
                  description: HelmChart is the namespaced name of the HelmChart resource
                    created by the controller for the HelmRelease.
                  type: string
                installFailures:
                  description: InstallFailures is the install failure count against
                    the latest desired state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
                lastAppliedRevision:
                  description: LastAppliedRevision is the revision of the last successfully
                    applied source.
                  type: string
                lastAttemptedRevision:
                  description: LastAttemptedRevision is the revision of the last reconciliation
                    attempt.
                  type: string
                lastAttemptedValuesChecksum:
                  description: LastAttemptedValuesChecksum is the SHA1 checksum of
                    the values of the last reconciliation attempt.
                  type: string
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most
                    recent reconcile request value, so a change can be detected.
                  type: string
                lastReleaseRevision:
                  description: LastReleaseRevision is the revision of the last successful
                    Helm release.
                  type: integer
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                upgradeFailures:
                  description: UpgradeFailures is the upgrade failure count against
                    the latest desired state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: HelmRelease
      listKind: HelmReleaseList
      plural: helmreleases
      shortNames:
      - hr
      singular: helmrelease
    conditions:
    - lastTransitionTime: "2021-12-04T17:03:56Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-04T17:03:56Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v2beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: "2021-12-04T17:03:56Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v0.24.0
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: helmrepositories.source.toolkit.fluxcd.io
    resourceVersion: "1785"
    uid: fb89b789-66a8-4678-9a3f-fda7c2a68d49
  spec:
    conversion:
      strategy: None
    group: source.toolkit.fluxcd.io
    names:
      kind: HelmRepository
      listKind: HelmRepositoryList
      plural: helmrepositories
      shortNames:
      - helmrepo
      singular: helmrepository
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .spec.url
        name: URL
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: HelmRepository is the Schema for the helmrepositories API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: HelmRepositorySpec defines the reference to a Helm repository.
              properties:
                accessFrom:
                  description: AccessFrom defines an Access Control List for allowing
                    cross-namespace references to this object.
                  properties:
                    namespaceSelectors:
                      description: NamespaceSelectors is the list of namespace selectors
                        to which this ACL applies. Items in this list are evaluated
                        using a logical OR operation.
                      items:
                        description: NamespaceSelector selects the namespaces to which
                          this ACL applies. An empty map of MatchLabels matches all
                          namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                  - namespaceSelectors
                  type: object
                interval:
                  description: The interval at which to check the upstream for updates.
                  type: string
                passCredentials:
                  description: PassCredentials allows the credentials from the SecretRef
                    to be passed on to a host that does not match the host as defined
                    in URL. This may be required if the host of the advertised chart
                    URLs in the index differ from the defined URL. Enabling this should
                    be done with caution, as it can potentially result in credentials
                    getting stolen in a MITM-attack.
                  type: boolean
                secretRef:
                  description: The name of the secret containing authentication credentials
                    for the Helm repository. For HTTP/S basic auth the secret must
                    contain username and password fields. For TLS the secret must
                    contain a certFile and keyFile, and/or caCert fields.
                  properties:
                    name:
                      description: Name of the referent
                      type: string
                  required:
                  - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend the reconciliation
                    of this source.
                  type: boolean
                timeout:
                  default: 60s
                  description: The timeout of index downloading, defaults to 60s.
                  type: string
                url:
                  description: The Helm repository URL, a valid URL contains at least
                    a protocol and host.
                  type: string
              required:
              - interval
              - url
              type: object
            status:
              description: HelmRepositoryStatus defines the observed state of the
                HelmRepository.
              properties:
                artifact:
                  description: Artifact represents the output of the last successful
                    repository sync.
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the artifact.
                      type: string
                    lastUpdateTime:
                      description: LastUpdateTime is the timestamp corresponding to
                        the last update of this artifact.
                      format: date-time
                      type: string
                    path:
                      description: Path is the relative file path of this artifact.
                      type: string
                    revision:
                      description: Revision is a human readable identifier traceable
                        in the origin source system. It can be a Git commit SHA, Git
                        tag, a Helm index timestamp, a Helm chart version, etc.
                      type: string
                    url:
                      description: URL is the HTTP address of this artifact.
                      type: string
                  required:
                  - path
                  - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the HelmRepository.
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most
                    recent reconcile request value, so a change can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                url:
                  description: URL is the download link for the last index fetched.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: HelmRepository
      listKind: HelmRepositoryList
      plural: helmrepositories
      shortNames:
      - helmrepo
      singular: helmrepository
    conditions:
    - lastTransitionTime: "2021-12-04T17:03:56Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-04T17:03:56Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.4.1
    creationTimestamp: "2021-12-07T18:20:13Z"
    generation: 1
    name: ingressroutes.traefik.containo.us
    resourceVersion: "2639720"
    uid: b392fb31-3e32-42ff-ae56-407f68dce444
  spec:
    conversion:
      strategy: None
    group: traefik.containo.us
    names:
      kind: IngressRoute
      listKind: IngressRouteList
      plural: ingressroutes
      singular: ingressroute
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: IngressRoute is an Ingress CRD specification.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: IngressRouteSpec is a specification for a IngressRouteSpec
                resource.
              properties:
                entryPoints:
                  items:
                    type: string
                  type: array
                routes:
                  items:
                    description: Route contains the set of routes.
                    properties:
                      kind:
                        enum:
                        - Rule
                        type: string
                      match:
                        type: string
                      middlewares:
                        items:
                          description: MiddlewareRef is a ref to the Middleware resources.
                          properties:
                            name:
                              type: string
                            namespace:
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                      priority:
                        type: integer
                      services:
                        items:
                          description: Service defines an upstream to proxy traffic.
                          properties:
                            kind:
                              enum:
                              - Service
                              - TraefikService
                              type: string
                            name:
                              description: Name is a reference to a Kubernetes Service
                                object (for a load-balancer of servers), or to a TraefikService
                                object (service load-balancer, mirroring, etc). The
                                differentiation between the two is specified in the
                                Kind field.
                              type: string
                            namespace:
                              type: string
                            passHostHeader:
                              type: boolean
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              x-kubernetes-int-or-string: true
                            responseForwarding:
                              description: ResponseForwarding holds configuration
                                for the forward of the response.
                              properties:
                                flushInterval:
                                  type: string
                              type: object
                            scheme:
                              type: string
                            serversTransport:
                              type: string
                            sticky:
                              description: Sticky holds the sticky configuration.
                              properties:
                                cookie:
                                  description: Cookie holds the sticky configuration
                                    based on cookie.
                                  properties:
                                    httpOnly:
                                      type: boolean
                                    name:
                                      type: string
                                    sameSite:
                                      type: string
                                    secure:
                                      type: boolean
                                  type: object
                              type: object
                            strategy:
                              type: string
                            weight:
                              description: Weight should only be specified when Name
                                references a TraefikService object (and to be precise,
                                one that embeds a Weighted Round Robin).
                              type: integer
                          required:
                          - name
                          type: object
                        type: array
                    required:
                    - kind
                    - match
                    type: object
                  type: array
                tls:
                  description: "TLS contains the TLS certificates configuration of
                    the routes. To enable Let's Encrypt, use an empty TLS struct,
                    e.g. in YAML: \n \t tls: {} # inline format \n \t tls: \t   secretName:
                    # block format"
                  properties:
                    certResolver:
                      type: string
                    domains:
                      items:
                        description: Domain holds a domain name with SANs.
                        properties:
                          main:
                            type: string
                          sans:
                            items:
                              type: string
                            type: array
                        type: object
                      type: array
                    options:
                      description: Options is a reference to a TLSOption, that specifies
                        the parameters of the TLS connection.
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                      - name
                      type: object
                    secretName:
                      description: SecretName is the name of the referenced Kubernetes
                        Secret to specify the certificate details.
                      type: string
                    store:
                      description: Store is a reference to a TLSStore, that specifies
                        the parameters of the TLS store.
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                      - name
                      type: object
                  type: object
              required:
              - routes
              type: object
          required:
          - metadata
          - spec
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: IngressRoute
      listKind: IngressRouteList
      plural: ingressroutes
      singular: ingressroute
    conditions:
    - lastTransitionTime: "2021-12-07T18:20:13Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-07T18:20:13Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.4.1
    creationTimestamp: "2021-12-07T18:20:13Z"
    generation: 1
    name: ingressroutetcps.traefik.containo.us
    resourceVersion: "2639725"
    uid: 22a92247-3e45-4840-a979-328e9fdc2ccf
  spec:
    conversion:
      strategy: None
    group: traefik.containo.us
    names:
      kind: IngressRouteTCP
      listKind: IngressRouteTCPList
      plural: ingressroutetcps
      singular: ingressroutetcp
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: IngressRouteTCP is an Ingress CRD specification.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: IngressRouteTCPSpec is a specification for a IngressRouteTCPSpec
                resource.
              properties:
                entryPoints:
                  items:
                    type: string
                  type: array
                routes:
                  items:
                    description: RouteTCP contains the set of routes.
                    properties:
                      match:
                        type: string
                      middlewares:
                        description: Middlewares contains references to MiddlewareTCP
                          resources.
                        items:
                          description: ObjectReference is a generic reference to a
                            Traefik resource.
                          properties:
                            name:
                              type: string
                            namespace:
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                      services:
                        items:
                          description: ServiceTCP defines an upstream to proxy traffic.
                          properties:
                            name:
                              type: string
                            namespace:
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              x-kubernetes-int-or-string: true
                            proxyProtocol:
                              description: ProxyProtocol holds the ProxyProtocol configuration.
                              properties:
                                version:
                                  type: integer
                              type: object
                            terminationDelay:
                              type: integer
                            weight:
                              type: integer
                          required:
                          - name
                          - port
                          type: object
                        type: array
                    required:
                    - match
                    type: object
                  type: array
                tls:
                  description: "TLSTCP contains the TLS certificates configuration
                    of the routes. To enable Let's Encrypt, use an empty TLS struct,
                    e.g. in YAML: \n \t tls: {} # inline format \n \t tls: \t   secretName:
                    # block format"
                  properties:
                    certResolver:
                      type: string
                    domains:
                      items:
                        description: Domain holds a domain name with SANs.
                        properties:
                          main:
                            type: string
                          sans:
                            items:
                              type: string
                            type: array
                        type: object
                      type: array
                    options:
                      description: Options is a reference to a TLSOption, that specifies
                        the parameters of the TLS connection.
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                      - name
                      type: object
                    passthrough:
                      type: boolean
                    secretName:
                      description: SecretName is the name of the referenced Kubernetes
                        Secret to specify the certificate details.
                      type: string
                    store:
                      description: Store is a reference to a TLSStore, that specifies
                        the parameters of the TLS store.
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                      - name
                      type: object
                  type: object
              required:
              - routes
              type: object
          required:
          - metadata
          - spec
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: IngressRouteTCP
      listKind: IngressRouteTCPList
      plural: ingressroutetcps
      singular: ingressroutetcp
    conditions:
    - lastTransitionTime: "2021-12-07T18:20:13Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-07T18:20:13Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.4.1
    creationTimestamp: "2021-12-07T18:20:13Z"
    generation: 1
    name: ingressrouteudps.traefik.containo.us
    resourceVersion: "2639728"
    uid: faec1747-604e-4050-b864-7be65b1d674e
  spec:
    conversion:
      strategy: None
    group: traefik.containo.us
    names:
      kind: IngressRouteUDP
      listKind: IngressRouteUDPList
      plural: ingressrouteudps
      singular: ingressrouteudp
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: IngressRouteUDP is an Ingress CRD specification.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: IngressRouteUDPSpec is a specification for a IngressRouteUDPSpec
                resource.
              properties:
                entryPoints:
                  items:
                    type: string
                  type: array
                routes:
                  items:
                    description: RouteUDP contains the set of routes.
                    properties:
                      services:
                        items:
                          description: ServiceUDP defines an upstream to proxy traffic.
                          properties:
                            name:
                              type: string
                            namespace:
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              x-kubernetes-int-or-string: true
                            weight:
                              type: integer
                          required:
                          - name
                          - port
                          type: object
                        type: array
                    type: object
                  type: array
              required:
              - routes
              type: object
          required:
          - metadata
          - spec
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: IngressRouteUDP
      listKind: IngressRouteUDPList
      plural: ingressrouteudps
      singular: ingressrouteudp
    conditions:
    - lastTransitionTime: "2021-12-07T18:20:13Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-07T18:20:13Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from-secret: cert-manager/cert-manager-cert-manager-webhook-ca
      meta.helm.sh/release-name: cert-manager-cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2021-12-04T17:04:19Z"
    generation: 2
    labels:
      app: cert-manager
      app.kubernetes.io/instance: cert-manager-cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.6.1
      helm.sh/chart: cert-manager-v1.6.1
      helm.toolkit.fluxcd.io/name: cert-manager
      helm.toolkit.fluxcd.io/namespace: flux-system
    name: issuers.cert-manager.io
    resourceVersion: "2479"
    uid: 2cbefbb8-ebf3-4916-81ec-ce7d6d39a699
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJ3ekNDQVVpZ0F3SUJBZ0lSQUp1UTVrL2dQcjIxSmxZcm9PRlhWdnd3Q2dZSUtvWkl6ajBFQXdNd0lqRWcKTUI0R0ExVUVBeE1YWTJWeWRDMXRZVzVoWjJWeUxYZGxZbWh2YjJzdFkyRXdIaGNOTWpFeE1qQTBNVGN3TkRJNQpXaGNOTWpJeE1qQTBNVGN3TkRJNVdqQWlNU0F3SGdZRFZRUURFeGRqWlhKMExXMWhibUZuWlhJdGQyVmlhRzl2CmF5MWpZVEIyTUJBR0J5cUdTTTQ5QWdFR0JTdUJCQUFpQTJJQUJNeXNkL090dkRqYVZ6ZXBvMXhabks5aVRsOVAKeHZ3L3ljZkg0UU80VHozSFhPT3A3U1p4WjhsWlA4WHFuZGpWdnl6dm9ka0hxMFUrbjdySjQ5aEt2aEtWRS81SQphdjRtM2NBZ1NFUVh4aXh0NmFaWDc2cXkydmNMMmZQTnpWK1NFNk5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trCk1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZOQ014dTNWSmJTV1VNbzJXYUg2SEV2a0prTjkKTUFvR0NDcUdTTTQ5QkFNREEya0FNR1lDTVFDZ2JkUVBiZ2s1K2J2UjEyZ1l6VVQwSlJLeG1WRHRBeXRwWVN2ZQpjQXc0TVBXNFNjN0ptbjEyNHg5cG0rUTJvTE1DTVFDUnc4RDBpWnVCV1RnVE5OT2htVEh1MklRVXBJaFNtR3REClg4ZW5aZ1FmdEVBTVJzaHQwVUl6bXVlWmVSTlhUd0E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
          service:
            name: cert-manager-cert-manager-webhook
            namespace: cert-manager
            path: /convert
            port: 443
        conversionReviewVersions:
        - v1
        - v1beta1
    group: cert-manager.io
    names:
      categories:
      - cert-manager
      kind: Issuer
      listKind: IssuerList
      plural: issuers
      singular: issuer
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: An Issuer represents a certificate issuing authority which
            can be referenced as part of `issuerRef` fields. It is scoped to a single
            namespace and can therefore only be referenced by resources within the
            same namespace.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the Issuer resource.
              properties:
                acme:
                  description: ACME configures this issuer to communicate with a RFC8555
                    (ACME) server to obtain signed x509 certificates.
                  properties:
                    disableAccountKeyGeneration:
                      description: Enables or disables generating a new ACME account
                        key. If true, the Issuer resource will *not* request a new
                        account but will expect the account key to be supplied via
                        an existing secret. If false, the cert-manager system will
                        generate a new ACME account key for the Issuer. Defaults to
                        false.
                      type: boolean
                    email:
                      description: Email is the email address to be associated with
                        the ACME account. This field is optional, but it is strongly
                        recommended to be set. It will be used to contact you in case
                        of issues with your account or certificates, including expiry
                        notification emails. This field may be updated after the account
                        is initially registered.
                      type: string
                    enableDurationFeature:
                      description: Enables requesting a Not After date on certificates
                        that matches the duration of the certificate. This is not
                        supported by all ACME servers like Let's Encrypt. If set to
                        true when the ACME server does not support it it will create
                        an error on the Order. Defaults to false.
                      type: boolean
                    externalAccountBinding:
                      description: ExternalAccountBinding is a reference to a CA external
                        account of the ACME server. If set, upon registration cert-manager
                        will attempt to associate the given external account credentials
                        with the registered ACME account.
                      properties:
                        keyAlgorithm:
                          description: 'Deprecated: keyAlgorithm field exists for
                            historical compatibility reasons and should not be used.
                            The algorithm is now hardcoded to HS256 in golang/x/crypto/acme.'
                          enum:
                          - HS256
                          - HS384
                          - HS512
                          type: string
                        keyID:
                          description: keyID is the ID of the CA key that the External
                            Account is bound to.
                          type: string
                        keySecretRef:
                          description: keySecretRef is a Secret Key Selector referencing
                            a data item in a Kubernetes Secret which holds the symmetric
                            MAC key of the External Account Binding. The `key` is
                            the index string that is paired with the key data in the
                            Secret and should not be confused with the key data itself,
                            or indeed with the External Account Binding keyID above.
                            The secret key stored in the Secret **must** be un-padded,
                            base64 URL encoded data.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - keyID
                      - keySecretRef
                      type: object
                    preferredChain:
                      description: 'PreferredChain is the chain to use if the ACME
                        server outputs multiple. PreferredChain is no guarantee that
                        this one gets delivered by the ACME endpoint. For example,
                        for Let''s Encrypt''s DST crosssign you would use: "DST Root
                        CA X3" or "ISRG Root X1" for the newer Let''s Encrypt root
                        CA. This value picks the first certificate bundle in the ACME
                        alternative chains that has a certificate with this value
                        as its issuer''s CN'
                      maxLength: 64
                      type: string
                    privateKeySecretRef:
                      description: PrivateKey is the name of a Kubernetes Secret resource
                        that will be used to store the automatically generated ACME
                        account private key. Optionally, a `key` may be specified
                        to select a specific entry within the named Secret resource.
                        If `key` is not specified, a default of `tls.key` will be
                        used.
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                      required:
                      - name
                      type: object
                    server:
                      description: 'Server is the URL used to access the ACME server''s
                        ''directory'' endpoint. For example, for Let''s Encrypt''s
                        staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory".
                        Only ACME v2 endpoints (i.e. RFC 8555) are supported.'
                      type: string
                    skipTLSVerify:
                      description: Enables or disables validation of the ACME server
                        TLS certificate. If true, requests to the ACME server will
                        not have their TLS certificate validated (i.e. insecure connections
                        will be allowed). Only enable this option in development environments.
                        The cert-manager system installed roots will be used to verify
                        connections to the ACME server if this is false. Defaults
                        to false.
                      type: boolean
                    solvers:
                      description: 'Solvers is a list of challenge solvers that will
                        be used to solve ACME challenges for the matching domains.
                        Solver configurations must be provided in order to obtain
                        certificates from an ACME server. For more information, see:
                        https://cert-manager.io/docs/configuration/acme/'
                      items:
                        description: Configures an issuer to solve challenges using
                          the specified options. Only one of HTTP01 or DNS01 may be
                          provided.
                        properties:
                          dns01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the DNS01 challenge flow.
                            properties:
                              acmedns:
                                description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                                  API to manage DNS01 challenge records.
                                properties:
                                  accountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  host:
                                    type: string
                                required:
                                - accountSecretRef
                                - host
                                type: object
                              akamai:
                                description: Use the Akamai DNS zone management API
                                  to manage DNS01 challenge records.
                                properties:
                                  accessTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientSecretSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  serviceConsumerDomain:
                                    type: string
                                required:
                                - accessTokenSecretRef
                                - clientSecretSecretRef
                                - clientTokenSecretRef
                                - serviceConsumerDomain
                                type: object
                              azuredns:
                                description: Use the Microsoft Azure DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  clientID:
                                    description: if both this and ClientSecret are
                                      left unset MSI will be used
                                    type: string
                                  clientSecretSecretRef:
                                    description: if both this and ClientID are left
                                      unset MSI will be used
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  environment:
                                    description: name of the Azure environment (default
                                      AzurePublicCloud)
                                    enum:
                                    - AzurePublicCloud
                                    - AzureChinaCloud
                                    - AzureGermanCloud
                                    - AzureUSGovernmentCloud
                                    type: string
                                  hostedZoneName:
                                    description: name of the DNS zone that should
                                      be used
                                    type: string
                                  managedIdentity:
                                    description: managed identity configuration, can
                                      not be used at the same time as clientID, clientSecretSecretRef
                                      or tenantID
                                    properties:
                                      clientID:
                                        description: client ID of the managed identity,
                                          can not be used at the same time as resourceID
                                        type: string
                                      resourceID:
                                        description: resource ID of the managed identity,
                                          can not be used at the same time as clientID
                                        type: string
                                    type: object
                                  resourceGroupName:
                                    description: resource group the DNS zone is located
                                      in
                                    type: string
                                  subscriptionID:
                                    description: ID of the Azure subscription
                                    type: string
                                  tenantID:
                                    description: when specifying ClientID and ClientSecret
                                      then this field is also needed
                                    type: string
                                required:
                                - resourceGroupName
                                - subscriptionID
                                type: object
                              clouddns:
                                description: Use the Google Cloud DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  hostedZoneName:
                                    description: HostedZoneName is an optional field
                                      that tells cert-manager in which Cloud DNS zone
                                      the challenge record has to be created. If left
                                      empty cert-manager will automatically choose
                                      a zone.
                                    type: string
                                  project:
                                    type: string
                                  serviceAccountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - project
                                type: object
                              cloudflare:
                                description: Use the Cloudflare API to manage DNS01
                                  challenge records.
                                properties:
                                  apiKeySecretRef:
                                    description: 'API key to use to authenticate with
                                      Cloudflare. Note: using an API token to authenticate
                                      is now the recommended method as it allows greater
                                      control of permissions.'
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  apiTokenSecretRef:
                                    description: API token used to authenticate with
                                      Cloudflare.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  email:
                                    description: Email of the account, only required
                                      when using API key based authentication.
                                    type: string
                                type: object
                              cnameStrategy:
                                description: CNAMEStrategy configures how the DNS01
                                  provider should handle CNAME records when found
                                  in DNS zones.
                                enum:
                                - None
                                - Follow
                                type: string
                              digitalocean:
                                description: Use the DigitalOcean DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  tokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - tokenSecretRef
                                type: object
                              rfc2136:
                                description: Use RFC2136 ("Dynamic Updates in the
                                  Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                                  to manage DNS01 challenge records.
                                properties:
                                  nameserver:
                                    description: The IP address or hostname of an
                                      authoritative DNS server supporting RFC2136
                                      in the form host:port. If the host is an IPv6
                                      address it must be enclosed in square brackets
                                      (e.g [2001:db8::1]) ; port is optional. This
                                      field is required.
                                    type: string
                                  tsigAlgorithm:
                                    description: 'The TSIG Algorithm configured in
                                      the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                      and ``tsigKeyName`` are defined. Supported values
                                      are (case-insensitive): ``HMACMD5`` (default),
                                      ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'
                                    type: string
                                  tsigKeyName:
                                    description: The TSIG Key name configured in the
                                      DNS. If ``tsigSecretSecretRef`` is defined,
                                      this field is required.
                                    type: string
                                  tsigSecretSecretRef:
                                    description: The name of the secret containing
                                      the TSIG value. If ``tsigKeyName`` is defined,
                                      this field is required.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - nameserver
                                type: object
                              route53:
                                description: Use the AWS Route53 API to manage DNS01
                                  challenge records.
                                properties:
                                  accessKeyID:
                                    description: 'The AccessKeyID is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata see:
                                      https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    type: string
                                  hostedZoneID:
                                    description: If set, the provider will manage
                                      only this zone in Route53 and will not do an
                                      lookup using the route53:ListHostedZonesByName
                                      api call.
                                    type: string
                                  region:
                                    description: Always set the region when using
                                      AccessKeyID and SecretAccessKey
                                    type: string
                                  role:
                                    description: Role is a Role ARN which the Route53
                                      provider will assume using either the explicit
                                      credentials AccessKeyID/SecretAccessKey or the
                                      inferred credentials from environment variables,
                                      shared credentials file or AWS Instance metadata
                                    type: string
                                  secretAccessKeySecretRef:
                                    description: The SecretAccessKey is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - region
                                type: object
                              webhook:
                                description: Configure an external webhook based DNS01
                                  challenge solver to manage DNS01 challenge records.
                                properties:
                                  config:
                                    description: Additional configuration that should
                                      be passed to the webhook apiserver when challenges
                                      are processed. This can contain arbitrary JSON
                                      data. Secret values should not be specified
                                      in this stanza. If secret values are needed
                                      (e.g. credentials for a DNS service), you should
                                      use a SecretKeySelector to reference a Secret
                                      resource. For details on the schema of this
                                      field, consult the webhook provider implementation's
                                      documentation.
                                    x-kubernetes-preserve-unknown-fields: true
                                  groupName:
                                    description: The API group name that should be
                                      used when POSTing ChallengePayload resources
                                      to the webhook apiserver. This should be the
                                      same as the GroupName specified in the webhook
                                      provider implementation.
                                    type: string
                                  solverName:
                                    description: The name of the solver to use, as
                                      defined in the webhook provider implementation.
                                      This will typically be the name of the provider,
                                      e.g. 'cloudflare'.
                                    type: string
                                required:
                                - groupName
                                - solverName
                                type: object
                            type: object
                          http01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the HTTP01 challenge flow.
                              It is not possible to obtain certificates for wildcard
                              domain names (e.g. `*.example.com`) using the HTTP01
                              challenge mechanism.
                            properties:
                              gatewayHTTPRoute:
                                description: The Gateway API is a sig-network community
                                  API that models service networking in Kubernetes
                                  (https://gateway-api.sigs.k8s.io/). The Gateway
                                  solver will create HTTPRoutes with the specified
                                  labels in the same namespace as the challenge. This
                                  solver is experimental, and fields / behaviour may
                                  change in the future.
                                properties:
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: The labels that cert-manager will
                                      use when creating the temporary HTTPRoute needed
                                      for solving the HTTP-01 challenge. These labels
                                      must match the label selector of at least one
                                      Gateway.
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                              ingress:
                                description: The ingress based HTTP01 challenge solver
                                  will solve challenges by creating or modifying Ingress
                                  resources in order to route requests for '/.well-known/acme-challenge/XYZ'
                                  to 'challenge solver' pods that are provisioned
                                  by cert-manager for each Challenge to be completed.
                                properties:
                                  class:
                                    description: The ingress class to use when creating
                                      Ingress resources to solve ACME challenges that
                                      use this challenge solver. Only one of 'class'
                                      or 'name' may be specified.
                                    type: string
                                  ingressTemplate:
                                    description: Optional ingress template used to
                                      configure the ACME challenge solver ingress
                                      used for HTTP01 challenges
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          ingress used to solve HTTP01 challenges.
                                          Only the 'labels' and 'annotations' fields
                                          may be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the created ACME HTTP01 solver
                                              ingress.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver ingress.
                                            type: object
                                        type: object
                                    type: object
                                  name:
                                    description: The name of the ingress resource
                                      that should have ACME challenge solving routes
                                      inserted into it in order to solve HTTP01 challenges.
                                      This is typically used in conjunction with ingress
                                      controllers like ingress-gce, which maintains
                                      a 1:1 mapping between external IPs and ingress
                                      resources.
                                    type: string
                                  podTemplate:
                                    description: Optional pod template used to configure
                                      the ACME challenge solver pods used for HTTP01
                                      challenges.
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          pod used to solve HTTP01 challenges. Only
                                          the 'labels' and 'annotations' fields may
                                          be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the create ACME HTTP01 solver
                                              pods.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver pods.
                                            type: object
                                        type: object
                                      spec:
                                        description: PodSpec defines overrides for
                                          the HTTP01 challenge solver pod. Only the
                                          'priorityClassName', 'nodeSelector', 'affinity',
                                          'serviceAccountName' and 'tolerations' fields
                                          are supported currently. All other fields
                                          will be ignored.
                                        properties:
                                          affinity:
                                            description: If specified, the pod's scheduling
                                              constraints
                                            properties:
                                              nodeAffinity:
                                                description: Describes node affinity
                                                  scheduling rules for the pod.
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      matches the corresponding matchExpressions;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: An empty preferred
                                                        scheduling term matches all
                                                        objects with implicit weight
                                                        0 (i.e. it's a no-op). A null
                                                        preferred scheduling term
                                                        matches no objects (i.e. is
                                                        also a no-op).
                                                      properties:
                                                        preference:
                                                          description: A node selector
                                                            term, associated with
                                                            the corresponding weight.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        weight:
                                                          description: Weight associated
                                                            with matching the corresponding
                                                            nodeSelectorTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - preference
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to an update), the system
                                                      may or may not try to eventually
                                                      evict the pod from its node.
                                                    properties:
                                                      nodeSelectorTerms:
                                                        description: Required. A list
                                                          of node selector terms.
                                                          The terms are ORed.
                                                        items:
                                                          description: A null or empty
                                                            node selector term matches
                                                            no objects. The requirements
                                                            of them are ANDed. The
                                                            TopologySelectorTerm type
                                                            implements a subset of
                                                            the NodeSelectorTerm.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        type: array
                                                    required:
                                                    - nodeSelectorTerms
                                                    type: object
                                                type: object
                                              podAffinity:
                                                description: Describes pod affinity
                                                  scheduling rules (e.g. co-locate
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      has pods which matches the corresponding
                                                      podAffinityTerm; the node(s)
                                                      with the highest sum are the
                                                      most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is beta-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is beta-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                              podAntiAffinity:
                                                description: Describes pod anti-affinity
                                                  scheduling rules (e.g. avoid putting
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the anti-affinity
                                                      expressions specified by this
                                                      field, but it may choose a node
                                                      that violates one or more of
                                                      the expressions. The node that
                                                      is most preferred is the one
                                                      with the greatest sum of weights,
                                                      i.e. for each node that meets
                                                      all of the scheduling requirements
                                                      (resource request, requiredDuringScheduling
                                                      anti-affinity expressions, etc.),
                                                      compute a sum by iterating through
                                                      the elements of this field and
                                                      adding "weight" to the sum if
                                                      the node has pods which matches
                                                      the corresponding podAffinityTerm;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is beta-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the anti-affinity
                                                      requirements specified by this
                                                      field are not met at scheduling
                                                      time, the pod will not be scheduled
                                                      onto the node. If the anti-affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is beta-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                            type: object
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: 'NodeSelector is a selector
                                              which must be true for the pod to fit
                                              on a node. Selector which must match
                                              a node''s labels for the pod to be scheduled
                                              on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                            type: object
                                          priorityClassName:
                                            description: If specified, the pod's priorityClassName.
                                            type: string
                                          serviceAccountName:
                                            description: If specified, the pod's service
                                              account
                                            type: string
                                          tolerations:
                                            description: If specified, the pod's tolerations.
                                            items:
                                              description: The pod this Toleration
                                                is attached to tolerates any taint
                                                that matches the triple <key,value,effect>
                                                using the matching operator <operator>.
                                              properties:
                                                effect:
                                                  description: Effect indicates the
                                                    taint effect to match. Empty means
                                                    match all taint effects. When
                                                    specified, allowed values are
                                                    NoSchedule, PreferNoSchedule and
                                                    NoExecute.
                                                  type: string
                                                key:
                                                  description: Key is the taint key
                                                    that the toleration applies to.
                                                    Empty means match all taint keys.
                                                    If the key is empty, operator
                                                    must be Exists; this combination
                                                    means to match all values and
                                                    all keys.
                                                  type: string
                                                operator:
                                                  description: Operator represents
                                                    a key's relationship to the value.
                                                    Valid operators are Exists and
                                                    Equal. Defaults to Equal. Exists
                                                    is equivalent to wildcard for
                                                    value, so that a pod can tolerate
                                                    all taints of a particular category.
                                                  type: string
                                                tolerationSeconds:
                                                  description: TolerationSeconds represents
                                                    the period of time the toleration
                                                    (which must be of effect NoExecute,
                                                    otherwise this field is ignored)
                                                    tolerates the taint. By default,
                                                    it is not set, which means tolerate
                                                    the taint forever (do not evict).
                                                    Zero and negative values will
                                                    be treated as 0 (evict immediately)
                                                    by the system.
                                                  format: int64
                                                  type: integer
                                                value:
                                                  description: Value is the taint
                                                    value the toleration matches to.
                                                    If the operator is Exists, the
                                                    value should be empty, otherwise
                                                    just a regular string.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                            type: object
                          selector:
                            description: Selector selects a set of DNSNames on the
                              Certificate resource that should be solved using this
                              challenge solver. If not specified, the solver will
                              be treated as the 'default' solver with the lowest priority,
                              i.e. if any other solver has a more specific match,
                              it will be used instead.
                            properties:
                              dnsNames:
                                description: List of DNSNames that this solver will
                                  be used to solve. If specified and a match is found,
                                  a dnsNames selector will take precedence over a
                                  dnsZones selector. If multiple solvers match with
                                  the same dnsNames value, the solver with the most
                                  matching labels in matchLabels will be selected.
                                  If neither has more matches, the solver defined
                                  earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              dnsZones:
                                description: List of DNSZones that this solver will
                                  be used to solve. The most specific DNS zone match
                                  specified here will take precedence over other DNS
                                  zone matches, so a solver specifying sys.example.com
                                  will be selected over one specifying example.com
                                  for the domain www.sys.example.com. If multiple
                                  solvers match with the same dnsZones value, the
                                  solver with the most matching labels in matchLabels
                                  will be selected. If neither has more matches, the
                                  solver defined earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: A label selector that is used to refine
                                  the set of certificate's that this challenge solver
                                  will apply to.
                                type: object
                            type: object
                        type: object
                      type: array
                  required:
                  - privateKeySecretRef
                  - server
                  type: object
                ca:
                  description: CA configures this issuer to sign certificates using
                    a signing CA keypair stored in a Secret resource. This is used
                    to build internal PKIs that are managed by cert-manager.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set, certificates will be issued without distribution points
                        set.
                      items:
                        type: string
                      type: array
                    ocspServers:
                      description: The OCSP server list is an X.509 v3 extension that
                        defines a list of URLs of OCSP responders. The OCSP responders
                        can be queried for the revocation status of an issued certificate.
                        If not set, the certificate will be issued with no OCSP servers
                        set. For example, an OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
                      items:
                        type: string
                      type: array
                    secretName:
                      description: SecretName is the name of the secret used to sign
                        Certificates issued by this Issuer.
                      type: string
                  required:
                  - secretName
                  type: object
                selfSigned:
                  description: SelfSigned configures this issuer to 'self sign' certificates
                    using the private key used to create the CertificateRequest object.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set certificate will be issued without CDP. Values are strings.
                      items:
                        type: string
                      type: array
                  type: object
                vault:
                  description: Vault configures this issuer to sign certificates using
                    a HashiCorp Vault PKI backend.
                  properties:
                    auth:
                      description: Auth configures how cert-manager authenticates
                        with the Vault server.
                      properties:
                        appRole:
                          description: AppRole authenticates with Vault using the
                            App Role auth mechanism, with the role and secret stored
                            in a Kubernetes Secret resource.
                          properties:
                            path:
                              description: 'Path where the App Role authentication
                                backend is mounted in Vault, e.g: "approle"'
                              type: string
                            roleId:
                              description: RoleID configured in the App Role authentication
                                backend when setting up the authentication backend
                                in Vault.
                              type: string
                            secretRef:
                              description: Reference to a key in a Secret that contains
                                the App Role secret used to authenticate with Vault.
                                The `key` field must be specified and denotes which
                                entry within the Secret resource is used as the app
                                role secret.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - path
                          - roleId
                          - secretRef
                          type: object
                        kubernetes:
                          description: Kubernetes authenticates with Vault by passing
                            the ServiceAccount token stored in the named Secret resource
                            to the Vault server.
                          properties:
                            mountPath:
                              description: The Vault mountPath here is the mount path
                                to use when authenticating with Vault. For example,
                                setting a value to `/v1/auth/foo`, will use the path
                                `/v1/auth/foo/login` to authenticate with Vault. If
                                unspecified, the default value "/v1/auth/kubernetes"
                                will be used.
                              type: string
                            role:
                              description: A required field containing the Vault Role
                                to assume. A Role binds a Kubernetes ServiceAccount
                                with a set of Vault policies.
                              type: string
                            secretRef:
                              description: The required Secret field containing a
                                Kubernetes ServiceAccount JWT used for authenticating
                                with Vault. Use of 'ambient credentials' is not supported.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - role
                          - secretRef
                          type: object
                        tokenSecretRef:
                          description: TokenSecretRef authenticates with Vault by
                            presenting a token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    caBundle:
                      description: PEM-encoded CA bundle (base64-encoded) used to
                        validate Vault server certificate. Only used if the Server
                        URL is using HTTPS protocol. This parameter is ignored for
                        plain HTTP protocol connection. If not set the system root
                        certificates are used to validate the TLS connection.
                      format: byte
                      type: string
                    namespace:
                      description: 'Name of the vault namespace. Namespaces is a set
                        of features within Vault Enterprise that allows Vault environments
                        to support Secure Multi-tenancy. e.g: "ns1" More about namespaces
                        can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                      type: string
                    path:
                      description: 'Path is the mount path of the Vault PKI backend''s
                        `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".'
                      type: string
                    server:
                      description: 'Server is the connection address for the Vault
                        server, e.g: "https://vault.example.com:8200".'
                      type: string
                  required:
                  - auth
                  - path
                  - server
                  type: object
                venafi:
                  description: Venafi configures this issuer to sign certificates
                    using a Venafi TPP or Venafi Cloud policy zone.
                  properties:
                    cloud:
                      description: Cloud specifies the Venafi cloud configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        apiTokenSecretRef:
                          description: APITokenSecretRef is a secret key selector
                            for the Venafi Cloud API token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: URL is the base URL for Venafi Cloud. Defaults
                            to "https://api.venafi.cloud/v1".
                          type: string
                      required:
                      - apiTokenSecretRef
                      type: object
                    tpp:
                      description: TPP specifies Trust Protection Platform configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        caBundle:
                          description: CABundle is a PEM encoded TLS certificate to
                            use to verify connections to the TPP instance. If specified,
                            system roots will not be used and the issuing CA for the
                            TPP instance must be verifiable using the provided root.
                            If not specified, the connection will be verified using
                            the cert-manager system root certificates.
                          format: byte
                          type: string
                        credentialsRef:
                          description: CredentialsRef is a reference to a Secret containing
                            the username and password for the TPP server. The secret
                            must contain two keys, 'username' and 'password'.
                          properties:
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: 'URL is the base URL for the vedsdk endpoint
                            of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".'
                          type: string
                      required:
                      - credentialsRef
                      - url
                      type: object
                    zone:
                      description: Zone is the Venafi Policy Zone to use for this
                        issuer. All requests made to the Venafi platform will be restricted
                        by the named zone policy. This field is required.
                      type: string
                  required:
                  - zone
                  type: object
              type: object
            status:
              description: Status of the Issuer. This is set and managed automatically.
              properties:
                acme:
                  description: ACME specific status options. This field should only
                    be set if the Issuer is configured to use an ACME server to issue
                    certificates.
                  properties:
                    lastRegisteredEmail:
                      description: LastRegisteredEmail is the email associated with
                        the latest registered ACME account, in order to track changes
                        made to registered account associated with the  Issuer
                      type: string
                    uri:
                      description: URI is the unique account identifier, which can
                        also be used to retrieve account details from the CA
                      type: string
                  type: object
                conditions:
                  description: List of status conditions to indicate the status of
                    a CertificateRequest. Known condition types are `Ready`.
                  items:
                    description: IssuerCondition contains condition information for
                      an Issuer.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.condition[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the Issuer.
                        format: int64
                        type: integer
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
              type: object
          type: object
      served: false
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha3
      schema:
        openAPIV3Schema:
          description: An Issuer represents a certificate issuing authority which
            can be referenced as part of `issuerRef` fields. It is scoped to a single
            namespace and can therefore only be referenced by resources within the
            same namespace.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the Issuer resource.
              properties:
                acme:
                  description: ACME configures this issuer to communicate with a RFC8555
                    (ACME) server to obtain signed x509 certificates.
                  properties:
                    disableAccountKeyGeneration:
                      description: Enables or disables generating a new ACME account
                        key. If true, the Issuer resource will *not* request a new
                        account but will expect the account key to be supplied via
                        an existing secret. If false, the cert-manager system will
                        generate a new ACME account key for the Issuer. Defaults to
                        false.
                      type: boolean
                    email:
                      description: Email is the email address to be associated with
                        the ACME account. This field is optional, but it is strongly
                        recommended to be set. It will be used to contact you in case
                        of issues with your account or certificates, including expiry
                        notification emails. This field may be updated after the account
                        is initially registered.
                      type: string
                    enableDurationFeature:
                      description: Enables requesting a Not After date on certificates
                        that matches the duration of the certificate. This is not
                        supported by all ACME servers like Let's Encrypt. If set to
                        true when the ACME server does not support it it will create
                        an error on the Order. Defaults to false.
                      type: boolean
                    externalAccountBinding:
                      description: ExternalAccountBinding is a reference to a CA external
                        account of the ACME server. If set, upon registration cert-manager
                        will attempt to associate the given external account credentials
                        with the registered ACME account.
                      properties:
                        keyAlgorithm:
                          description: 'Deprecated: keyAlgorithm field exists for
                            historical compatibility reasons and should not be used.
                            The algorithm is now hardcoded to HS256 in golang/x/crypto/acme.'
                          enum:
                          - HS256
                          - HS384
                          - HS512
                          type: string
                        keyID:
                          description: keyID is the ID of the CA key that the External
                            Account is bound to.
                          type: string
                        keySecretRef:
                          description: keySecretRef is a Secret Key Selector referencing
                            a data item in a Kubernetes Secret which holds the symmetric
                            MAC key of the External Account Binding. The `key` is
                            the index string that is paired with the key data in the
                            Secret and should not be confused with the key data itself,
                            or indeed with the External Account Binding keyID above.
                            The secret key stored in the Secret **must** be un-padded,
                            base64 URL encoded data.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - keyID
                      - keySecretRef
                      type: object
                    preferredChain:
                      description: 'PreferredChain is the chain to use if the ACME
                        server outputs multiple. PreferredChain is no guarantee that
                        this one gets delivered by the ACME endpoint. For example,
                        for Let''s Encrypt''s DST crosssign you would use: "DST Root
                        CA X3" or "ISRG Root X1" for the newer Let''s Encrypt root
                        CA. This value picks the first certificate bundle in the ACME
                        alternative chains that has a certificate with this value
                        as its issuer''s CN'
                      maxLength: 64
                      type: string
                    privateKeySecretRef:
                      description: PrivateKey is the name of a Kubernetes Secret resource
                        that will be used to store the automatically generated ACME
                        account private key. Optionally, a `key` may be specified
                        to select a specific entry within the named Secret resource.
                        If `key` is not specified, a default of `tls.key` will be
                        used.
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                      required:
                      - name
                      type: object
                    server:
                      description: 'Server is the URL used to access the ACME server''s
                        ''directory'' endpoint. For example, for Let''s Encrypt''s
                        staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory".
                        Only ACME v2 endpoints (i.e. RFC 8555) are supported.'
                      type: string
                    skipTLSVerify:
                      description: Enables or disables validation of the ACME server
                        TLS certificate. If true, requests to the ACME server will
                        not have their TLS certificate validated (i.e. insecure connections
                        will be allowed). Only enable this option in development environments.
                        The cert-manager system installed roots will be used to verify
                        connections to the ACME server if this is false. Defaults
                        to false.
                      type: boolean
                    solvers:
                      description: 'Solvers is a list of challenge solvers that will
                        be used to solve ACME challenges for the matching domains.
                        Solver configurations must be provided in order to obtain
                        certificates from an ACME server. For more information, see:
                        https://cert-manager.io/docs/configuration/acme/'
                      items:
                        description: Configures an issuer to solve challenges using
                          the specified options. Only one of HTTP01 or DNS01 may be
                          provided.
                        properties:
                          dns01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the DNS01 challenge flow.
                            properties:
                              acmedns:
                                description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                                  API to manage DNS01 challenge records.
                                properties:
                                  accountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  host:
                                    type: string
                                required:
                                - accountSecretRef
                                - host
                                type: object
                              akamai:
                                description: Use the Akamai DNS zone management API
                                  to manage DNS01 challenge records.
                                properties:
                                  accessTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientSecretSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  serviceConsumerDomain:
                                    type: string
                                required:
                                - accessTokenSecretRef
                                - clientSecretSecretRef
                                - clientTokenSecretRef
                                - serviceConsumerDomain
                                type: object
                              azuredns:
                                description: Use the Microsoft Azure DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  clientID:
                                    description: if both this and ClientSecret are
                                      left unset MSI will be used
                                    type: string
                                  clientSecretSecretRef:
                                    description: if both this and ClientID are left
                                      unset MSI will be used
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  environment:
                                    description: name of the Azure environment (default
                                      AzurePublicCloud)
                                    enum:
                                    - AzurePublicCloud
                                    - AzureChinaCloud
                                    - AzureGermanCloud
                                    - AzureUSGovernmentCloud
                                    type: string
                                  hostedZoneName:
                                    description: name of the DNS zone that should
                                      be used
                                    type: string
                                  managedIdentity:
                                    description: managed identity configuration, can
                                      not be used at the same time as clientID, clientSecretSecretRef
                                      or tenantID
                                    properties:
                                      clientID:
                                        description: client ID of the managed identity,
                                          can not be used at the same time as resourceID
                                        type: string
                                      resourceID:
                                        description: resource ID of the managed identity,
                                          can not be used at the same time as clientID
                                        type: string
                                    type: object
                                  resourceGroupName:
                                    description: resource group the DNS zone is located
                                      in
                                    type: string
                                  subscriptionID:
                                    description: ID of the Azure subscription
                                    type: string
                                  tenantID:
                                    description: when specifying ClientID and ClientSecret
                                      then this field is also needed
                                    type: string
                                required:
                                - resourceGroupName
                                - subscriptionID
                                type: object
                              clouddns:
                                description: Use the Google Cloud DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  hostedZoneName:
                                    description: HostedZoneName is an optional field
                                      that tells cert-manager in which Cloud DNS zone
                                      the challenge record has to be created. If left
                                      empty cert-manager will automatically choose
                                      a zone.
                                    type: string
                                  project:
                                    type: string
                                  serviceAccountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - project
                                type: object
                              cloudflare:
                                description: Use the Cloudflare API to manage DNS01
                                  challenge records.
                                properties:
                                  apiKeySecretRef:
                                    description: 'API key to use to authenticate with
                                      Cloudflare. Note: using an API token to authenticate
                                      is now the recommended method as it allows greater
                                      control of permissions.'
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  apiTokenSecretRef:
                                    description: API token used to authenticate with
                                      Cloudflare.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  email:
                                    description: Email of the account, only required
                                      when using API key based authentication.
                                    type: string
                                type: object
                              cnameStrategy:
                                description: CNAMEStrategy configures how the DNS01
                                  provider should handle CNAME records when found
                                  in DNS zones.
                                enum:
                                - None
                                - Follow
                                type: string
                              digitalocean:
                                description: Use the DigitalOcean DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  tokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - tokenSecretRef
                                type: object
                              rfc2136:
                                description: Use RFC2136 ("Dynamic Updates in the
                                  Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                                  to manage DNS01 challenge records.
                                properties:
                                  nameserver:
                                    description: The IP address or hostname of an
                                      authoritative DNS server supporting RFC2136
                                      in the form host:port. If the host is an IPv6
                                      address it must be enclosed in square brackets
                                      (e.g [2001:db8::1]) ; port is optional. This
                                      field is required.
                                    type: string
                                  tsigAlgorithm:
                                    description: 'The TSIG Algorithm configured in
                                      the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                      and ``tsigKeyName`` are defined. Supported values
                                      are (case-insensitive): ``HMACMD5`` (default),
                                      ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'
                                    type: string
                                  tsigKeyName:
                                    description: The TSIG Key name configured in the
                                      DNS. If ``tsigSecretSecretRef`` is defined,
                                      this field is required.
                                    type: string
                                  tsigSecretSecretRef:
                                    description: The name of the secret containing
                                      the TSIG value. If ``tsigKeyName`` is defined,
                                      this field is required.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - nameserver
                                type: object
                              route53:
                                description: Use the AWS Route53 API to manage DNS01
                                  challenge records.
                                properties:
                                  accessKeyID:
                                    description: 'The AccessKeyID is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata see:
                                      https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    type: string
                                  hostedZoneID:
                                    description: If set, the provider will manage
                                      only this zone in Route53 and will not do an
                                      lookup using the route53:ListHostedZonesByName
                                      api call.
                                    type: string
                                  region:
                                    description: Always set the region when using
                                      AccessKeyID and SecretAccessKey
                                    type: string
                                  role:
                                    description: Role is a Role ARN which the Route53
                                      provider will assume using either the explicit
                                      credentials AccessKeyID/SecretAccessKey or the
                                      inferred credentials from environment variables,
                                      shared credentials file or AWS Instance metadata
                                    type: string
                                  secretAccessKeySecretRef:
                                    description: The SecretAccessKey is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - region
                                type: object
                              webhook:
                                description: Configure an external webhook based DNS01
                                  challenge solver to manage DNS01 challenge records.
                                properties:
                                  config:
                                    description: Additional configuration that should
                                      be passed to the webhook apiserver when challenges
                                      are processed. This can contain arbitrary JSON
                                      data. Secret values should not be specified
                                      in this stanza. If secret values are needed
                                      (e.g. credentials for a DNS service), you should
                                      use a SecretKeySelector to reference a Secret
                                      resource. For details on the schema of this
                                      field, consult the webhook provider implementation's
                                      documentation.
                                    x-kubernetes-preserve-unknown-fields: true
                                  groupName:
                                    description: The API group name that should be
                                      used when POSTing ChallengePayload resources
                                      to the webhook apiserver. This should be the
                                      same as the GroupName specified in the webhook
                                      provider implementation.
                                    type: string
                                  solverName:
                                    description: The name of the solver to use, as
                                      defined in the webhook provider implementation.
                                      This will typically be the name of the provider,
                                      e.g. 'cloudflare'.
                                    type: string
                                required:
                                - groupName
                                - solverName
                                type: object
                            type: object
                          http01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the HTTP01 challenge flow.
                              It is not possible to obtain certificates for wildcard
                              domain names (e.g. `*.example.com`) using the HTTP01
                              challenge mechanism.
                            properties:
                              gatewayHTTPRoute:
                                description: The Gateway API is a sig-network community
                                  API that models service networking in Kubernetes
                                  (https://gateway-api.sigs.k8s.io/). The Gateway
                                  solver will create HTTPRoutes with the specified
                                  labels in the same namespace as the challenge. This
                                  solver is experimental, and fields / behaviour may
                                  change in the future.
                                properties:
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: The labels that cert-manager will
                                      use when creating the temporary HTTPRoute needed
                                      for solving the HTTP-01 challenge. These labels
                                      must match the label selector of at least one
                                      Gateway.
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                              ingress:
                                description: The ingress based HTTP01 challenge solver
                                  will solve challenges by creating or modifying Ingress
                                  resources in order to route requests for '/.well-known/acme-challenge/XYZ'
                                  to 'challenge solver' pods that are provisioned
                                  by cert-manager for each Challenge to be completed.
                                properties:
                                  class:
                                    description: The ingress class to use when creating
                                      Ingress resources to solve ACME challenges that
                                      use this challenge solver. Only one of 'class'
                                      or 'name' may be specified.
                                    type: string
                                  ingressTemplate:
                                    description: Optional ingress template used to
                                      configure the ACME challenge solver ingress
                                      used for HTTP01 challenges
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          ingress used to solve HTTP01 challenges.
                                          Only the 'labels' and 'annotations' fields
                                          may be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the created ACME HTTP01 solver
                                              ingress.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver ingress.
                                            type: object
                                        type: object
                                    type: object
                                  name:
                                    description: The name of the ingress resource
                                      that should have ACME challenge solving routes
                                      inserted into it in order to solve HTTP01 challenges.
                                      This is typically used in conjunction with ingress
                                      controllers like ingress-gce, which maintains
                                      a 1:1 mapping between external IPs and ingress
                                      resources.
                                    type: string
                                  podTemplate:
                                    description: Optional pod template used to configure
                                      the ACME challenge solver pods used for HTTP01
                                      challenges.
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          pod used to solve HTTP01 challenges. Only
                                          the 'labels' and 'annotations' fields may
                                          be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the create ACME HTTP01 solver
                                              pods.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver pods.
                                            type: object
                                        type: object
                                      spec:
                                        description: PodSpec defines overrides for
                                          the HTTP01 challenge solver pod. Only the
                                          'priorityClassName', 'nodeSelector', 'affinity',
                                          'serviceAccountName' and 'tolerations' fields
                                          are supported currently. All other fields
                                          will be ignored.
                                        properties:
                                          affinity:
                                            description: If specified, the pod's scheduling
                                              constraints
                                            properties:
                                              nodeAffinity:
                                                description: Describes node affinity
                                                  scheduling rules for the pod.
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      matches the corresponding matchExpressions;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: An empty preferred
                                                        scheduling term matches all
                                                        objects with implicit weight
                                                        0 (i.e. it's a no-op). A null
                                                        preferred scheduling term
                                                        matches no objects (i.e. is
                                                        also a no-op).
                                                      properties:
                                                        preference:
                                                          description: A node selector
                                                            term, associated with
                                                            the corresponding weight.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        weight:
                                                          description: Weight associated
                                                            with matching the corresponding
                                                            nodeSelectorTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - preference
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to an update), the system
                                                      may or may not try to eventually
                                                      evict the pod from its node.
                                                    properties:
                                                      nodeSelectorTerms:
                                                        description: Required. A list
                                                          of node selector terms.
                                                          The terms are ORed.
                                                        items:
                                                          description: A null or empty
                                                            node selector term matches
                                                            no objects. The requirements
                                                            of them are ANDed. The
                                                            TopologySelectorTerm type
                                                            implements a subset of
                                                            the NodeSelectorTerm.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        type: array
                                                    required:
                                                    - nodeSelectorTerms
                                                    type: object
                                                type: object
                                              podAffinity:
                                                description: Describes pod affinity
                                                  scheduling rules (e.g. co-locate
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      has pods which matches the corresponding
                                                      podAffinityTerm; the node(s)
                                                      with the highest sum are the
                                                      most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is beta-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is beta-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                              podAntiAffinity:
                                                description: Describes pod anti-affinity
                                                  scheduling rules (e.g. avoid putting
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the anti-affinity
                                                      expressions specified by this
                                                      field, but it may choose a node
                                                      that violates one or more of
                                                      the expressions. The node that
                                                      is most preferred is the one
                                                      with the greatest sum of weights,
                                                      i.e. for each node that meets
                                                      all of the scheduling requirements
                                                      (resource request, requiredDuringScheduling
                                                      anti-affinity expressions, etc.),
                                                      compute a sum by iterating through
                                                      the elements of this field and
                                                      adding "weight" to the sum if
                                                      the node has pods which matches
                                                      the corresponding podAffinityTerm;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is beta-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the anti-affinity
                                                      requirements specified by this
                                                      field are not met at scheduling
                                                      time, the pod will not be scheduled
                                                      onto the node. If the anti-affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is beta-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                            type: object
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: 'NodeSelector is a selector
                                              which must be true for the pod to fit
                                              on a node. Selector which must match
                                              a node''s labels for the pod to be scheduled
                                              on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                            type: object
                                          priorityClassName:
                                            description: If specified, the pod's priorityClassName.
                                            type: string
                                          serviceAccountName:
                                            description: If specified, the pod's service
                                              account
                                            type: string
                                          tolerations:
                                            description: If specified, the pod's tolerations.
                                            items:
                                              description: The pod this Toleration
                                                is attached to tolerates any taint
                                                that matches the triple <key,value,effect>
                                                using the matching operator <operator>.
                                              properties:
                                                effect:
                                                  description: Effect indicates the
                                                    taint effect to match. Empty means
                                                    match all taint effects. When
                                                    specified, allowed values are
                                                    NoSchedule, PreferNoSchedule and
                                                    NoExecute.
                                                  type: string
                                                key:
                                                  description: Key is the taint key
                                                    that the toleration applies to.
                                                    Empty means match all taint keys.
                                                    If the key is empty, operator
                                                    must be Exists; this combination
                                                    means to match all values and
                                                    all keys.
                                                  type: string
                                                operator:
                                                  description: Operator represents
                                                    a key's relationship to the value.
                                                    Valid operators are Exists and
                                                    Equal. Defaults to Equal. Exists
                                                    is equivalent to wildcard for
                                                    value, so that a pod can tolerate
                                                    all taints of a particular category.
                                                  type: string
                                                tolerationSeconds:
                                                  description: TolerationSeconds represents
                                                    the period of time the toleration
                                                    (which must be of effect NoExecute,
                                                    otherwise this field is ignored)
                                                    tolerates the taint. By default,
                                                    it is not set, which means tolerate
                                                    the taint forever (do not evict).
                                                    Zero and negative values will
                                                    be treated as 0 (evict immediately)
                                                    by the system.
                                                  format: int64
                                                  type: integer
                                                value:
                                                  description: Value is the taint
                                                    value the toleration matches to.
                                                    If the operator is Exists, the
                                                    value should be empty, otherwise
                                                    just a regular string.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                            type: object
                          selector:
                            description: Selector selects a set of DNSNames on the
                              Certificate resource that should be solved using this
                              challenge solver. If not specified, the solver will
                              be treated as the 'default' solver with the lowest priority,
                              i.e. if any other solver has a more specific match,
                              it will be used instead.
                            properties:
                              dnsNames:
                                description: List of DNSNames that this solver will
                                  be used to solve. If specified and a match is found,
                                  a dnsNames selector will take precedence over a
                                  dnsZones selector. If multiple solvers match with
                                  the same dnsNames value, the solver with the most
                                  matching labels in matchLabels will be selected.
                                  If neither has more matches, the solver defined
                                  earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              dnsZones:
                                description: List of DNSZones that this solver will
                                  be used to solve. The most specific DNS zone match
                                  specified here will take precedence over other DNS
                                  zone matches, so a solver specifying sys.example.com
                                  will be selected over one specifying example.com
                                  for the domain www.sys.example.com. If multiple
                                  solvers match with the same dnsZones value, the
                                  solver with the most matching labels in matchLabels
                                  will be selected. If neither has more matches, the
                                  solver defined earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: A label selector that is used to refine
                                  the set of certificate's that this challenge solver
                                  will apply to.
                                type: object
                            type: object
                        type: object
                      type: array
                  required:
                  - privateKeySecretRef
                  - server
                  type: object
                ca:
                  description: CA configures this issuer to sign certificates using
                    a signing CA keypair stored in a Secret resource. This is used
                    to build internal PKIs that are managed by cert-manager.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set, certificates will be issued without distribution points
                        set.
                      items:
                        type: string
                      type: array
                    ocspServers:
                      description: The OCSP server list is an X.509 v3 extension that
                        defines a list of URLs of OCSP responders. The OCSP responders
                        can be queried for the revocation status of an issued certificate.
                        If not set, the certificate will be issued with no OCSP servers
                        set. For example, an OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
                      items:
                        type: string
                      type: array
                    secretName:
                      description: SecretName is the name of the secret used to sign
                        Certificates issued by this Issuer.
                      type: string
                  required:
                  - secretName
                  type: object
                selfSigned:
                  description: SelfSigned configures this issuer to 'self sign' certificates
                    using the private key used to create the CertificateRequest object.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set certificate will be issued without CDP. Values are strings.
                      items:
                        type: string
                      type: array
                  type: object
                vault:
                  description: Vault configures this issuer to sign certificates using
                    a HashiCorp Vault PKI backend.
                  properties:
                    auth:
                      description: Auth configures how cert-manager authenticates
                        with the Vault server.
                      properties:
                        appRole:
                          description: AppRole authenticates with Vault using the
                            App Role auth mechanism, with the role and secret stored
                            in a Kubernetes Secret resource.
                          properties:
                            path:
                              description: 'Path where the App Role authentication
                                backend is mounted in Vault, e.g: "approle"'
                              type: string
                            roleId:
                              description: RoleID configured in the App Role authentication
                                backend when setting up the authentication backend
                                in Vault.
                              type: string
                            secretRef:
                              description: Reference to a key in a Secret that contains
                                the App Role secret used to authenticate with Vault.
                                The `key` field must be specified and denotes which
                                entry within the Secret resource is used as the app
                                role secret.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - path
                          - roleId
                          - secretRef
                          type: object
                        kubernetes:
                          description: Kubernetes authenticates with Vault by passing
                            the ServiceAccount token stored in the named Secret resource
                            to the Vault server.
                          properties:
                            mountPath:
                              description: The Vault mountPath here is the mount path
                                to use when authenticating with Vault. For example,
                                setting a value to `/v1/auth/foo`, will use the path
                                `/v1/auth/foo/login` to authenticate with Vault. If
                                unspecified, the default value "/v1/auth/kubernetes"
                                will be used.
                              type: string
                            role:
                              description: A required field containing the Vault Role
                                to assume. A Role binds a Kubernetes ServiceAccount
                                with a set of Vault policies.
                              type: string
                            secretRef:
                              description: The required Secret field containing a
                                Kubernetes ServiceAccount JWT used for authenticating
                                with Vault. Use of 'ambient credentials' is not supported.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - role
                          - secretRef
                          type: object
                        tokenSecretRef:
                          description: TokenSecretRef authenticates with Vault by
                            presenting a token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    caBundle:
                      description: PEM-encoded CA bundle (base64-encoded) used to
                        validate Vault server certificate. Only used if the Server
                        URL is using HTTPS protocol. This parameter is ignored for
                        plain HTTP protocol connection. If not set the system root
                        certificates are used to validate the TLS connection.
                      format: byte
                      type: string
                    namespace:
                      description: 'Name of the vault namespace. Namespaces is a set
                        of features within Vault Enterprise that allows Vault environments
                        to support Secure Multi-tenancy. e.g: "ns1" More about namespaces
                        can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                      type: string
                    path:
                      description: 'Path is the mount path of the Vault PKI backend''s
                        `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".'
                      type: string
                    server:
                      description: 'Server is the connection address for the Vault
                        server, e.g: "https://vault.example.com:8200".'
                      type: string
                  required:
                  - auth
                  - path
                  - server
                  type: object
                venafi:
                  description: Venafi configures this issuer to sign certificates
                    using a Venafi TPP or Venafi Cloud policy zone.
                  properties:
                    cloud:
                      description: Cloud specifies the Venafi cloud configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        apiTokenSecretRef:
                          description: APITokenSecretRef is a secret key selector
                            for the Venafi Cloud API token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: URL is the base URL for Venafi Cloud. Defaults
                            to "https://api.venafi.cloud/v1".
                          type: string
                      required:
                      - apiTokenSecretRef
                      type: object
                    tpp:
                      description: TPP specifies Trust Protection Platform configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        caBundle:
                          description: CABundle is a PEM encoded TLS certificate to
                            use to verify connections to the TPP instance. If specified,
                            system roots will not be used and the issuing CA for the
                            TPP instance must be verifiable using the provided root.
                            If not specified, the connection will be verified using
                            the cert-manager system root certificates.
                          format: byte
                          type: string
                        credentialsRef:
                          description: CredentialsRef is a reference to a Secret containing
                            the username and password for the TPP server. The secret
                            must contain two keys, 'username' and 'password'.
                          properties:
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: 'URL is the base URL for the vedsdk endpoint
                            of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".'
                          type: string
                      required:
                      - credentialsRef
                      - url
                      type: object
                    zone:
                      description: Zone is the Venafi Policy Zone to use for this
                        issuer. All requests made to the Venafi platform will be restricted
                        by the named zone policy. This field is required.
                      type: string
                  required:
                  - zone
                  type: object
              type: object
            status:
              description: Status of the Issuer. This is set and managed automatically.
              properties:
                acme:
                  description: ACME specific status options. This field should only
                    be set if the Issuer is configured to use an ACME server to issue
                    certificates.
                  properties:
                    lastRegisteredEmail:
                      description: LastRegisteredEmail is the email associated with
                        the latest registered ACME account, in order to track changes
                        made to registered account associated with the  Issuer
                      type: string
                    uri:
                      description: URI is the unique account identifier, which can
                        also be used to retrieve account details from the CA
                      type: string
                  type: object
                conditions:
                  description: List of status conditions to indicate the status of
                    a CertificateRequest. Known condition types are `Ready`.
                  items:
                    description: IssuerCondition contains condition information for
                      an Issuer.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.condition[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the Issuer.
                        format: int64
                        type: integer
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
              type: object
          type: object
      served: false
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: An Issuer represents a certificate issuing authority which
            can be referenced as part of `issuerRef` fields. It is scoped to a single
            namespace and can therefore only be referenced by resources within the
            same namespace.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the Issuer resource.
              properties:
                acme:
                  description: ACME configures this issuer to communicate with a RFC8555
                    (ACME) server to obtain signed x509 certificates.
                  properties:
                    disableAccountKeyGeneration:
                      description: Enables or disables generating a new ACME account
                        key. If true, the Issuer resource will *not* request a new
                        account but will expect the account key to be supplied via
                        an existing secret. If false, the cert-manager system will
                        generate a new ACME account key for the Issuer. Defaults to
                        false.
                      type: boolean
                    email:
                      description: Email is the email address to be associated with
                        the ACME account. This field is optional, but it is strongly
                        recommended to be set. It will be used to contact you in case
                        of issues with your account or certificates, including expiry
                        notification emails. This field may be updated after the account
                        is initially registered.
                      type: string
                    enableDurationFeature:
                      description: Enables requesting a Not After date on certificates
                        that matches the duration of the certificate. This is not
                        supported by all ACME servers like Let's Encrypt. If set to
                        true when the ACME server does not support it it will create
                        an error on the Order. Defaults to false.
                      type: boolean
                    externalAccountBinding:
                      description: ExternalAccountBinding is a reference to a CA external
                        account of the ACME server. If set, upon registration cert-manager
                        will attempt to associate the given external account credentials
                        with the registered ACME account.
                      properties:
                        keyAlgorithm:
                          description: 'Deprecated: keyAlgorithm field exists for
                            historical compatibility reasons and should not be used.
                            The algorithm is now hardcoded to HS256 in golang/x/crypto/acme.'
                          enum:
                          - HS256
                          - HS384
                          - HS512
                          type: string
                        keyID:
                          description: keyID is the ID of the CA key that the External
                            Account is bound to.
                          type: string
                        keySecretRef:
                          description: keySecretRef is a Secret Key Selector referencing
                            a data item in a Kubernetes Secret which holds the symmetric
                            MAC key of the External Account Binding. The `key` is
                            the index string that is paired with the key data in the
                            Secret and should not be confused with the key data itself,
                            or indeed with the External Account Binding keyID above.
                            The secret key stored in the Secret **must** be un-padded,
                            base64 URL encoded data.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - keyID
                      - keySecretRef
                      type: object
                    preferredChain:
                      description: 'PreferredChain is the chain to use if the ACME
                        server outputs multiple. PreferredChain is no guarantee that
                        this one gets delivered by the ACME endpoint. For example,
                        for Let''s Encrypt''s DST crosssign you would use: "DST Root
                        CA X3" or "ISRG Root X1" for the newer Let''s Encrypt root
                        CA. This value picks the first certificate bundle in the ACME
                        alternative chains that has a certificate with this value
                        as its issuer''s CN'
                      maxLength: 64
                      type: string
                    privateKeySecretRef:
                      description: PrivateKey is the name of a Kubernetes Secret resource
                        that will be used to store the automatically generated ACME
                        account private key. Optionally, a `key` may be specified
                        to select a specific entry within the named Secret resource.
                        If `key` is not specified, a default of `tls.key` will be
                        used.
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                      required:
                      - name
                      type: object
                    server:
                      description: 'Server is the URL used to access the ACME server''s
                        ''directory'' endpoint. For example, for Let''s Encrypt''s
                        staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory".
                        Only ACME v2 endpoints (i.e. RFC 8555) are supported.'
                      type: string
                    skipTLSVerify:
                      description: Enables or disables validation of the ACME server
                        TLS certificate. If true, requests to the ACME server will
                        not have their TLS certificate validated (i.e. insecure connections
                        will be allowed). Only enable this option in development environments.
                        The cert-manager system installed roots will be used to verify
                        connections to the ACME server if this is false. Defaults
                        to false.
                      type: boolean
                    solvers:
                      description: 'Solvers is a list of challenge solvers that will
                        be used to solve ACME challenges for the matching domains.
                        Solver configurations must be provided in order to obtain
                        certificates from an ACME server. For more information, see:
                        https://cert-manager.io/docs/configuration/acme/'
                      items:
                        description: Configures an issuer to solve challenges using
                          the specified options. Only one of HTTP01 or DNS01 may be
                          provided.
                        properties:
                          dns01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the DNS01 challenge flow.
                            properties:
                              acmeDNS:
                                description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                                  API to manage DNS01 challenge records.
                                properties:
                                  accountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  host:
                                    type: string
                                required:
                                - accountSecretRef
                                - host
                                type: object
                              akamai:
                                description: Use the Akamai DNS zone management API
                                  to manage DNS01 challenge records.
                                properties:
                                  accessTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientSecretSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  serviceConsumerDomain:
                                    type: string
                                required:
                                - accessTokenSecretRef
                                - clientSecretSecretRef
                                - clientTokenSecretRef
                                - serviceConsumerDomain
                                type: object
                              azureDNS:
                                description: Use the Microsoft Azure DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  clientID:
                                    description: if both this and ClientSecret are
                                      left unset MSI will be used
                                    type: string
                                  clientSecretSecretRef:
                                    description: if both this and ClientID are left
                                      unset MSI will be used
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  environment:
                                    description: name of the Azure environment (default
                                      AzurePublicCloud)
                                    enum:
                                    - AzurePublicCloud
                                    - AzureChinaCloud
                                    - AzureGermanCloud
                                    - AzureUSGovernmentCloud
                                    type: string
                                  hostedZoneName:
                                    description: name of the DNS zone that should
                                      be used
                                    type: string
                                  managedIdentity:
                                    description: managed identity configuration, can
                                      not be used at the same time as clientID, clientSecretSecretRef
                                      or tenantID
                                    properties:
                                      clientID:
                                        description: client ID of the managed identity,
                                          can not be used at the same time as resourceID
                                        type: string
                                      resourceID:
                                        description: resource ID of the managed identity,
                                          can not be used at the same time as clientID
                                        type: string
                                    type: object
                                  resourceGroupName:
                                    description: resource group the DNS zone is located
                                      in
                                    type: string
                                  subscriptionID:
                                    description: ID of the Azure subscription
                                    type: string
                                  tenantID:
                                    description: when specifying ClientID and ClientSecret
                                      then this field is also needed
                                    type: string
                                required:
                                - resourceGroupName
                                - subscriptionID
                                type: object
                              cloudDNS:
                                description: Use the Google Cloud DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  hostedZoneName:
                                    description: HostedZoneName is an optional field
                                      that tells cert-manager in which Cloud DNS zone
                                      the challenge record has to be created. If left
                                      empty cert-manager will automatically choose
                                      a zone.
                                    type: string
                                  project:
                                    type: string
                                  serviceAccountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - project
                                type: object
                              cloudflare:
                                description: Use the Cloudflare API to manage DNS01
                                  challenge records.
                                properties:
                                  apiKeySecretRef:
                                    description: 'API key to use to authenticate with
                                      Cloudflare. Note: using an API token to authenticate
                                      is now the recommended method as it allows greater
                                      control of permissions.'
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  apiTokenSecretRef:
                                    description: API token used to authenticate with
                                      Cloudflare.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  email:
                                    description: Email of the account, only required
                                      when using API key based authentication.
                                    type: string
                                type: object
                              cnameStrategy:
                                description: CNAMEStrategy configures how the DNS01
                                  provider should handle CNAME records when found
                                  in DNS zones.
                                enum:
                                - None
                                - Follow
                                type: string
                              digitalocean:
                                description: Use the DigitalOcean DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  tokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - tokenSecretRef
                                type: object
                              rfc2136:
                                description: Use RFC2136 ("Dynamic Updates in the
                                  Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                                  to manage DNS01 challenge records.
                                properties:
                                  nameserver:
                                    description: The IP address or hostname of an
                                      authoritative DNS server supporting RFC2136
                                      in the form host:port. If the host is an IPv6
                                      address it must be enclosed in square brackets
                                      (e.g [2001:db8::1]) ; port is optional. This
                                      field is required.
                                    type: string
                                  tsigAlgorithm:
                                    description: 'The TSIG Algorithm configured in
                                      the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                      and ``tsigKeyName`` are defined. Supported values
                                      are (case-insensitive): ``HMACMD5`` (default),
                                      ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'
                                    type: string
                                  tsigKeyName:
                                    description: The TSIG Key name configured in the
                                      DNS. If ``tsigSecretSecretRef`` is defined,
                                      this field is required.
                                    type: string
                                  tsigSecretSecretRef:
                                    description: The name of the secret containing
                                      the TSIG value. If ``tsigKeyName`` is defined,
                                      this field is required.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - nameserver
                                type: object
                              route53:
                                description: Use the AWS Route53 API to manage DNS01
                                  challenge records.
                                properties:
                                  accessKeyID:
                                    description: 'The AccessKeyID is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata see:
                                      https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    type: string
                                  hostedZoneID:
                                    description: If set, the provider will manage
                                      only this zone in Route53 and will not do an
                                      lookup using the route53:ListHostedZonesByName
                                      api call.
                                    type: string
                                  region:
                                    description: Always set the region when using
                                      AccessKeyID and SecretAccessKey
                                    type: string
                                  role:
                                    description: Role is a Role ARN which the Route53
                                      provider will assume using either the explicit
                                      credentials AccessKeyID/SecretAccessKey or the
                                      inferred credentials from environment variables,
                                      shared credentials file or AWS Instance metadata
                                    type: string
                                  secretAccessKeySecretRef:
                                    description: The SecretAccessKey is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - region
                                type: object
                              webhook:
                                description: Configure an external webhook based DNS01
                                  challenge solver to manage DNS01 challenge records.
                                properties:
                                  config:
                                    description: Additional configuration that should
                                      be passed to the webhook apiserver when challenges
                                      are processed. This can contain arbitrary JSON
                                      data. Secret values should not be specified
                                      in this stanza. If secret values are needed
                                      (e.g. credentials for a DNS service), you should
                                      use a SecretKeySelector to reference a Secret
                                      resource. For details on the schema of this
                                      field, consult the webhook provider implementation's
                                      documentation.
                                    x-kubernetes-preserve-unknown-fields: true
                                  groupName:
                                    description: The API group name that should be
                                      used when POSTing ChallengePayload resources
                                      to the webhook apiserver. This should be the
                                      same as the GroupName specified in the webhook
                                      provider implementation.
                                    type: string
                                  solverName:
                                    description: The name of the solver to use, as
                                      defined in the webhook provider implementation.
                                      This will typically be the name of the provider,
                                      e.g. 'cloudflare'.
                                    type: string
                                required:
                                - groupName
                                - solverName
                                type: object
                            type: object
                          http01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the HTTP01 challenge flow.
                              It is not possible to obtain certificates for wildcard
                              domain names (e.g. `*.example.com`) using the HTTP01
                              challenge mechanism.
                            properties:
                              gatewayHTTPRoute:
                                description: The Gateway API is a sig-network community
                                  API that models service networking in Kubernetes
                                  (https://gateway-api.sigs.k8s.io/). The Gateway
                                  solver will create HTTPRoutes with the specified
                                  labels in the same namespace as the challenge. This
                                  solver is experimental, and fields / behaviour may
                                  change in the future.
                                properties:
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: The labels that cert-manager will
                                      use when creating the temporary HTTPRoute needed
                                      for solving the HTTP-01 challenge. These labels
                                      must match the label selector of at least one
                                      Gateway.
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                              ingress:
                                description: The ingress based HTTP01 challenge solver
                                  will solve challenges by creating or modifying Ingress
                                  resources in order to route requests for '/.well-known/acme-challenge/XYZ'
                                  to 'challenge solver' pods that are provisioned
                                  by cert-manager for each Challenge to be completed.
                                properties:
                                  class:
                                    description: The ingress class to use when creating
                                      Ingress resources to solve ACME challenges that
                                      use this challenge solver. Only one of 'class'
                                      or 'name' may be specified.
                                    type: string
                                  ingressTemplate:
                                    description: Optional ingress template used to
                                      configure the ACME challenge solver ingress
                                      used for HTTP01 challenges.
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          ingress used to solve HTTP01 challenges.
                                          Only the 'labels' and 'annotations' fields
                                          may be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the created ACME HTTP01 solver
                                              ingress.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver ingress.
                                            type: object
                                        type: object
                                    type: object
                                  name:
                                    description: The name of the ingress resource
                                      that should have ACME challenge solving routes
                                      inserted into it in order to solve HTTP01 challenges.
                                      This is typically used in conjunction with ingress
                                      controllers like ingress-gce, which maintains
                                      a 1:1 mapping between external IPs and ingress
                                      resources.
                                    type: string
                                  podTemplate:
                                    description: Optional pod template used to configure
                                      the ACME challenge solver pods used for HTTP01
                                      challenges
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          pod used to solve HTTP01 challenges. Only
                                          the 'labels' and 'annotations' fields may
                                          be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the create ACME HTTP01 solver
                                              pods.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver pods.
                                            type: object
                                        type: object
                                      spec:
                                        description: PodSpec defines overrides for
                                          the HTTP01 challenge solver pod. Only the
                                          'priorityClassName', 'nodeSelector', 'affinity',
                                          'serviceAccountName' and 'tolerations' fields
                                          are supported currently. All other fields
                                          will be ignored.
                                        properties:
                                          affinity:
                                            description: If specified, the pod's scheduling
                                              constraints
                                            properties:
                                              nodeAffinity:
                                                description: Describes node affinity
                                                  scheduling rules for the pod.
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      matches the corresponding matchExpressions;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: An empty preferred
                                                        scheduling term matches all
                                                        objects with implicit weight
                                                        0 (i.e. it's a no-op). A null
                                                        preferred scheduling term
                                                        matches no objects (i.e. is
                                                        also a no-op).
                                                      properties:
                                                        preference:
                                                          description: A node selector
                                                            term, associated with
                                                            the corresponding weight.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        weight:
                                                          description: Weight associated
                                                            with matching the corresponding
                                                            nodeSelectorTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - preference
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to an update), the system
                                                      may or may not try to eventually
                                                      evict the pod from its node.
                                                    properties:
                                                      nodeSelectorTerms:
                                                        description: Required. A list
                                                          of node selector terms.
                                                          The terms are ORed.
                                                        items:
                                                          description: A null or empty
                                                            node selector term matches
                                                            no objects. The requirements
                                                            of them are ANDed. The
                                                            TopologySelectorTerm type
                                                            implements a subset of
                                                            the NodeSelectorTerm.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        type: array
                                                    required:
                                                    - nodeSelectorTerms
                                                    type: object
                                                type: object
                                              podAffinity:
                                                description: Describes pod affinity
                                                  scheduling rules (e.g. co-locate
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      has pods which matches the corresponding
                                                      podAffinityTerm; the node(s)
                                                      with the highest sum are the
                                                      most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is beta-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is beta-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                              podAntiAffinity:
                                                description: Describes pod anti-affinity
                                                  scheduling rules (e.g. avoid putting
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the anti-affinity
                                                      expressions specified by this
                                                      field, but it may choose a node
                                                      that violates one or more of
                                                      the expressions. The node that
                                                      is most preferred is the one
                                                      with the greatest sum of weights,
                                                      i.e. for each node that meets
                                                      all of the scheduling requirements
                                                      (resource request, requiredDuringScheduling
                                                      anti-affinity expressions, etc.),
                                                      compute a sum by iterating through
                                                      the elements of this field and
                                                      adding "weight" to the sum if
                                                      the node has pods which matches
                                                      the corresponding podAffinityTerm;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is beta-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the anti-affinity
                                                      requirements specified by this
                                                      field are not met at scheduling
                                                      time, the pod will not be scheduled
                                                      onto the node. If the anti-affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is beta-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                            type: object
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: 'NodeSelector is a selector
                                              which must be true for the pod to fit
                                              on a node. Selector which must match
                                              a node''s labels for the pod to be scheduled
                                              on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                            type: object
                                          priorityClassName:
                                            description: If specified, the pod's priorityClassName.
                                            type: string
                                          serviceAccountName:
                                            description: If specified, the pod's service
                                              account
                                            type: string
                                          tolerations:
                                            description: If specified, the pod's tolerations.
                                            items:
                                              description: The pod this Toleration
                                                is attached to tolerates any taint
                                                that matches the triple <key,value,effect>
                                                using the matching operator <operator>.
                                              properties:
                                                effect:
                                                  description: Effect indicates the
                                                    taint effect to match. Empty means
                                                    match all taint effects. When
                                                    specified, allowed values are
                                                    NoSchedule, PreferNoSchedule and
                                                    NoExecute.
                                                  type: string
                                                key:
                                                  description: Key is the taint key
                                                    that the toleration applies to.
                                                    Empty means match all taint keys.
                                                    If the key is empty, operator
                                                    must be Exists; this combination
                                                    means to match all values and
                                                    all keys.
                                                  type: string
                                                operator:
                                                  description: Operator represents
                                                    a key's relationship to the value.
                                                    Valid operators are Exists and
                                                    Equal. Defaults to Equal. Exists
                                                    is equivalent to wildcard for
                                                    value, so that a pod can tolerate
                                                    all taints of a particular category.
                                                  type: string
                                                tolerationSeconds:
                                                  description: TolerationSeconds represents
                                                    the period of time the toleration
                                                    (which must be of effect NoExecute,
                                                    otherwise this field is ignored)
                                                    tolerates the taint. By default,
                                                    it is not set, which means tolerate
                                                    the taint forever (do not evict).
                                                    Zero and negative values will
                                                    be treated as 0 (evict immediately)
                                                    by the system.
                                                  format: int64
                                                  type: integer
                                                value:
                                                  description: Value is the taint
                                                    value the toleration matches to.
                                                    If the operator is Exists, the
                                                    value should be empty, otherwise
                                                    just a regular string.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                            type: object
                          selector:
                            description: Selector selects a set of DNSNames on the
                              Certificate resource that should be solved using this
                              challenge solver. If not specified, the solver will
                              be treated as the 'default' solver with the lowest priority,
                              i.e. if any other solver has a more specific match,
                              it will be used instead.
                            properties:
                              dnsNames:
                                description: List of DNSNames that this solver will
                                  be used to solve. If specified and a match is found,
                                  a dnsNames selector will take precedence over a
                                  dnsZones selector. If multiple solvers match with
                                  the same dnsNames value, the solver with the most
                                  matching labels in matchLabels will be selected.
                                  If neither has more matches, the solver defined
                                  earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              dnsZones:
                                description: List of DNSZones that this solver will
                                  be used to solve. The most specific DNS zone match
                                  specified here will take precedence over other DNS
                                  zone matches, so a solver specifying sys.example.com
                                  will be selected over one specifying example.com
                                  for the domain www.sys.example.com. If multiple
                                  solvers match with the same dnsZones value, the
                                  solver with the most matching labels in matchLabels
                                  will be selected. If neither has more matches, the
                                  solver defined earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: A label selector that is used to refine
                                  the set of certificate's that this challenge solver
                                  will apply to.
                                type: object
                            type: object
                        type: object
                      type: array
                  required:
                  - privateKeySecretRef
                  - server
                  type: object
                ca:
                  description: CA configures this issuer to sign certificates using
                    a signing CA keypair stored in a Secret resource. This is used
                    to build internal PKIs that are managed by cert-manager.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set, certificates will be issued without distribution points
                        set.
                      items:
                        type: string
                      type: array
                    ocspServers:
                      description: The OCSP server list is an X.509 v3 extension that
                        defines a list of URLs of OCSP responders. The OCSP responders
                        can be queried for the revocation status of an issued certificate.
                        If not set, the certificate will be issued with no OCSP servers
                        set. For example, an OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
                      items:
                        type: string
                      type: array
                    secretName:
                      description: SecretName is the name of the secret used to sign
                        Certificates issued by this Issuer.
                      type: string
                  required:
                  - secretName
                  type: object
                selfSigned:
                  description: SelfSigned configures this issuer to 'self sign' certificates
                    using the private key used to create the CertificateRequest object.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set certificate will be issued without CDP. Values are strings.
                      items:
                        type: string
                      type: array
                  type: object
                vault:
                  description: Vault configures this issuer to sign certificates using
                    a HashiCorp Vault PKI backend.
                  properties:
                    auth:
                      description: Auth configures how cert-manager authenticates
                        with the Vault server.
                      properties:
                        appRole:
                          description: AppRole authenticates with Vault using the
                            App Role auth mechanism, with the role and secret stored
                            in a Kubernetes Secret resource.
                          properties:
                            path:
                              description: 'Path where the App Role authentication
                                backend is mounted in Vault, e.g: "approle"'
                              type: string
                            roleId:
                              description: RoleID configured in the App Role authentication
                                backend when setting up the authentication backend
                                in Vault.
                              type: string
                            secretRef:
                              description: Reference to a key in a Secret that contains
                                the App Role secret used to authenticate with Vault.
                                The `key` field must be specified and denotes which
                                entry within the Secret resource is used as the app
                                role secret.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - path
                          - roleId
                          - secretRef
                          type: object
                        kubernetes:
                          description: Kubernetes authenticates with Vault by passing
                            the ServiceAccount token stored in the named Secret resource
                            to the Vault server.
                          properties:
                            mountPath:
                              description: The Vault mountPath here is the mount path
                                to use when authenticating with Vault. For example,
                                setting a value to `/v1/auth/foo`, will use the path
                                `/v1/auth/foo/login` to authenticate with Vault. If
                                unspecified, the default value "/v1/auth/kubernetes"
                                will be used.
                              type: string
                            role:
                              description: A required field containing the Vault Role
                                to assume. A Role binds a Kubernetes ServiceAccount
                                with a set of Vault policies.
                              type: string
                            secretRef:
                              description: The required Secret field containing a
                                Kubernetes ServiceAccount JWT used for authenticating
                                with Vault. Use of 'ambient credentials' is not supported.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - role
                          - secretRef
                          type: object
                        tokenSecretRef:
                          description: TokenSecretRef authenticates with Vault by
                            presenting a token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    caBundle:
                      description: PEM-encoded CA bundle (base64-encoded) used to
                        validate Vault server certificate. Only used if the Server
                        URL is using HTTPS protocol. This parameter is ignored for
                        plain HTTP protocol connection. If not set the system root
                        certificates are used to validate the TLS connection.
                      format: byte
                      type: string
                    namespace:
                      description: 'Name of the vault namespace. Namespaces is a set
                        of features within Vault Enterprise that allows Vault environments
                        to support Secure Multi-tenancy. e.g: "ns1" More about namespaces
                        can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                      type: string
                    path:
                      description: 'Path is the mount path of the Vault PKI backend''s
                        `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".'
                      type: string
                    server:
                      description: 'Server is the connection address for the Vault
                        server, e.g: "https://vault.example.com:8200".'
                      type: string
                  required:
                  - auth
                  - path
                  - server
                  type: object
                venafi:
                  description: Venafi configures this issuer to sign certificates
                    using a Venafi TPP or Venafi Cloud policy zone.
                  properties:
                    cloud:
                      description: Cloud specifies the Venafi cloud configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        apiTokenSecretRef:
                          description: APITokenSecretRef is a secret key selector
                            for the Venafi Cloud API token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: URL is the base URL for Venafi Cloud. Defaults
                            to "https://api.venafi.cloud/v1".
                          type: string
                      required:
                      - apiTokenSecretRef
                      type: object
                    tpp:
                      description: TPP specifies Trust Protection Platform configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        caBundle:
                          description: CABundle is a PEM encoded TLS certificate to
                            use to verify connections to the TPP instance. If specified,
                            system roots will not be used and the issuing CA for the
                            TPP instance must be verifiable using the provided root.
                            If not specified, the connection will be verified using
                            the cert-manager system root certificates.
                          format: byte
                          type: string
                        credentialsRef:
                          description: CredentialsRef is a reference to a Secret containing
                            the username and password for the TPP server. The secret
                            must contain two keys, 'username' and 'password'.
                          properties:
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: 'URL is the base URL for the vedsdk endpoint
                            of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".'
                          type: string
                      required:
                      - credentialsRef
                      - url
                      type: object
                    zone:
                      description: Zone is the Venafi Policy Zone to use for this
                        issuer. All requests made to the Venafi platform will be restricted
                        by the named zone policy. This field is required.
                      type: string
                  required:
                  - zone
                  type: object
              type: object
            status:
              description: Status of the Issuer. This is set and managed automatically.
              properties:
                acme:
                  description: ACME specific status options. This field should only
                    be set if the Issuer is configured to use an ACME server to issue
                    certificates.
                  properties:
                    lastRegisteredEmail:
                      description: LastRegisteredEmail is the email associated with
                        the latest registered ACME account, in order to track changes
                        made to registered account associated with the  Issuer
                      type: string
                    uri:
                      description: URI is the unique account identifier, which can
                        also be used to retrieve account details from the CA
                      type: string
                  type: object
                conditions:
                  description: List of status conditions to indicate the status of
                    a CertificateRequest. Known condition types are `Ready`.
                  items:
                    description: IssuerCondition contains condition information for
                      an Issuer.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.condition[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the Issuer.
                        format: int64
                        type: integer
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
              type: object
          required:
          - spec
          type: object
      served: false
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: An Issuer represents a certificate issuing authority which
            can be referenced as part of `issuerRef` fields. It is scoped to a single
            namespace and can therefore only be referenced by resources within the
            same namespace.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the Issuer resource.
              properties:
                acme:
                  description: ACME configures this issuer to communicate with a RFC8555
                    (ACME) server to obtain signed x509 certificates.
                  properties:
                    disableAccountKeyGeneration:
                      description: Enables or disables generating a new ACME account
                        key. If true, the Issuer resource will *not* request a new
                        account but will expect the account key to be supplied via
                        an existing secret. If false, the cert-manager system will
                        generate a new ACME account key for the Issuer. Defaults to
                        false.
                      type: boolean
                    email:
                      description: Email is the email address to be associated with
                        the ACME account. This field is optional, but it is strongly
                        recommended to be set. It will be used to contact you in case
                        of issues with your account or certificates, including expiry
                        notification emails. This field may be updated after the account
                        is initially registered.
                      type: string
                    enableDurationFeature:
                      description: Enables requesting a Not After date on certificates
                        that matches the duration of the certificate. This is not
                        supported by all ACME servers like Let's Encrypt. If set to
                        true when the ACME server does not support it it will create
                        an error on the Order. Defaults to false.
                      type: boolean
                    externalAccountBinding:
                      description: ExternalAccountBinding is a reference to a CA external
                        account of the ACME server. If set, upon registration cert-manager
                        will attempt to associate the given external account credentials
                        with the registered ACME account.
                      properties:
                        keyAlgorithm:
                          description: 'Deprecated: keyAlgorithm field exists for
                            historical compatibility reasons and should not be used.
                            The algorithm is now hardcoded to HS256 in golang/x/crypto/acme.'
                          enum:
                          - HS256
                          - HS384
                          - HS512
                          type: string
                        keyID:
                          description: keyID is the ID of the CA key that the External
                            Account is bound to.
                          type: string
                        keySecretRef:
                          description: keySecretRef is a Secret Key Selector referencing
                            a data item in a Kubernetes Secret which holds the symmetric
                            MAC key of the External Account Binding. The `key` is
                            the index string that is paired with the key data in the
                            Secret and should not be confused with the key data itself,
                            or indeed with the External Account Binding keyID above.
                            The secret key stored in the Secret **must** be un-padded,
                            base64 URL encoded data.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - keyID
                      - keySecretRef
                      type: object
                    preferredChain:
                      description: 'PreferredChain is the chain to use if the ACME
                        server outputs multiple. PreferredChain is no guarantee that
                        this one gets delivered by the ACME endpoint. For example,
                        for Let''s Encrypt''s DST crosssign you would use: "DST Root
                        CA X3" or "ISRG Root X1" for the newer Let''s Encrypt root
                        CA. This value picks the first certificate bundle in the ACME
                        alternative chains that has a certificate with this value
                        as its issuer''s CN'
                      maxLength: 64
                      type: string
                    privateKeySecretRef:
                      description: PrivateKey is the name of a Kubernetes Secret resource
                        that will be used to store the automatically generated ACME
                        account private key. Optionally, a `key` may be specified
                        to select a specific entry within the named Secret resource.
                        If `key` is not specified, a default of `tls.key` will be
                        used.
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                      required:
                      - name
                      type: object
                    server:
                      description: 'Server is the URL used to access the ACME server''s
                        ''directory'' endpoint. For example, for Let''s Encrypt''s
                        staging endpoint, you would use: "https://acme-staging-v02.api.letsencrypt.org/directory".
                        Only ACME v2 endpoints (i.e. RFC 8555) are supported.'
                      type: string
                    skipTLSVerify:
                      description: Enables or disables validation of the ACME server
                        TLS certificate. If true, requests to the ACME server will
                        not have their TLS certificate validated (i.e. insecure connections
                        will be allowed). Only enable this option in development environments.
                        The cert-manager system installed roots will be used to verify
                        connections to the ACME server if this is false. Defaults
                        to false.
                      type: boolean
                    solvers:
                      description: 'Solvers is a list of challenge solvers that will
                        be used to solve ACME challenges for the matching domains.
                        Solver configurations must be provided in order to obtain
                        certificates from an ACME server. For more information, see:
                        https://cert-manager.io/docs/configuration/acme/'
                      items:
                        description: An ACMEChallengeSolver describes how to solve
                          ACME challenges for the issuer it is part of. A selector
                          may be provided to use different solving strategies for
                          different DNS names. Only one of HTTP01 or DNS01 must be
                          provided.
                        properties:
                          dns01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the DNS01 challenge flow.
                            properties:
                              acmeDNS:
                                description: Use the 'ACME DNS' (https://github.com/joohoi/acme-dns)
                                  API to manage DNS01 challenge records.
                                properties:
                                  accountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  host:
                                    type: string
                                required:
                                - accountSecretRef
                                - host
                                type: object
                              akamai:
                                description: Use the Akamai DNS zone management API
                                  to manage DNS01 challenge records.
                                properties:
                                  accessTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientSecretSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientTokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  serviceConsumerDomain:
                                    type: string
                                required:
                                - accessTokenSecretRef
                                - clientSecretSecretRef
                                - clientTokenSecretRef
                                - serviceConsumerDomain
                                type: object
                              azureDNS:
                                description: Use the Microsoft Azure DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  clientID:
                                    description: if both this and ClientSecret are
                                      left unset MSI will be used
                                    type: string
                                  clientSecretSecretRef:
                                    description: if both this and ClientID are left
                                      unset MSI will be used
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  environment:
                                    description: name of the Azure environment (default
                                      AzurePublicCloud)
                                    enum:
                                    - AzurePublicCloud
                                    - AzureChinaCloud
                                    - AzureGermanCloud
                                    - AzureUSGovernmentCloud
                                    type: string
                                  hostedZoneName:
                                    description: name of the DNS zone that should
                                      be used
                                    type: string
                                  managedIdentity:
                                    description: managed identity configuration, can
                                      not be used at the same time as clientID, clientSecretSecretRef
                                      or tenantID
                                    properties:
                                      clientID:
                                        description: client ID of the managed identity,
                                          can not be used at the same time as resourceID
                                        type: string
                                      resourceID:
                                        description: resource ID of the managed identity,
                                          can not be used at the same time as clientID
                                        type: string
                                    type: object
                                  resourceGroupName:
                                    description: resource group the DNS zone is located
                                      in
                                    type: string
                                  subscriptionID:
                                    description: ID of the Azure subscription
                                    type: string
                                  tenantID:
                                    description: when specifying ClientID and ClientSecret
                                      then this field is also needed
                                    type: string
                                required:
                                - resourceGroupName
                                - subscriptionID
                                type: object
                              cloudDNS:
                                description: Use the Google Cloud DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  hostedZoneName:
                                    description: HostedZoneName is an optional field
                                      that tells cert-manager in which Cloud DNS zone
                                      the challenge record has to be created. If left
                                      empty cert-manager will automatically choose
                                      a zone.
                                    type: string
                                  project:
                                    type: string
                                  serviceAccountSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - project
                                type: object
                              cloudflare:
                                description: Use the Cloudflare API to manage DNS01
                                  challenge records.
                                properties:
                                  apiKeySecretRef:
                                    description: 'API key to use to authenticate with
                                      Cloudflare. Note: using an API token to authenticate
                                      is now the recommended method as it allows greater
                                      control of permissions.'
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  apiTokenSecretRef:
                                    description: API token used to authenticate with
                                      Cloudflare.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  email:
                                    description: Email of the account, only required
                                      when using API key based authentication.
                                    type: string
                                type: object
                              cnameStrategy:
                                description: CNAMEStrategy configures how the DNS01
                                  provider should handle CNAME records when found
                                  in DNS zones.
                                enum:
                                - None
                                - Follow
                                type: string
                              digitalocean:
                                description: Use the DigitalOcean DNS API to manage
                                  DNS01 challenge records.
                                properties:
                                  tokenSecretRef:
                                    description: A reference to a specific 'key' within
                                      a Secret resource. In some instances, `key`
                                      is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - tokenSecretRef
                                type: object
                              rfc2136:
                                description: Use RFC2136 ("Dynamic Updates in the
                                  Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                                  to manage DNS01 challenge records.
                                properties:
                                  nameserver:
                                    description: The IP address or hostname of an
                                      authoritative DNS server supporting RFC2136
                                      in the form host:port. If the host is an IPv6
                                      address it must be enclosed in square brackets
                                      (e.g [2001:db8::1]) ; port is optional. This
                                      field is required.
                                    type: string
                                  tsigAlgorithm:
                                    description: 'The TSIG Algorithm configured in
                                      the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                      and ``tsigKeyName`` are defined. Supported values
                                      are (case-insensitive): ``HMACMD5`` (default),
                                      ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'
                                    type: string
                                  tsigKeyName:
                                    description: The TSIG Key name configured in the
                                      DNS. If ``tsigSecretSecretRef`` is defined,
                                      this field is required.
                                    type: string
                                  tsigSecretSecretRef:
                                    description: The name of the secret containing
                                      the TSIG value. If ``tsigKeyName`` is defined,
                                      this field is required.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - nameserver
                                type: object
                              route53:
                                description: Use the AWS Route53 API to manage DNS01
                                  challenge records.
                                properties:
                                  accessKeyID:
                                    description: 'The AccessKeyID is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata see:
                                      https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    type: string
                                  hostedZoneID:
                                    description: If set, the provider will manage
                                      only this zone in Route53 and will not do an
                                      lookup using the route53:ListHostedZonesByName
                                      api call.
                                    type: string
                                  region:
                                    description: Always set the region when using
                                      AccessKeyID and SecretAccessKey
                                    type: string
                                  role:
                                    description: Role is a Role ARN which the Route53
                                      provider will assume using either the explicit
                                      credentials AccessKeyID/SecretAccessKey or the
                                      inferred credentials from environment variables,
                                      shared credentials file or AWS Instance metadata
                                    type: string
                                  secretAccessKeySecretRef:
                                    description: The SecretAccessKey is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: 'Name of the resource being referred
                                          to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - region
                                type: object
                              webhook:
                                description: Configure an external webhook based DNS01
                                  challenge solver to manage DNS01 challenge records.
                                properties:
                                  config:
                                    description: Additional configuration that should
                                      be passed to the webhook apiserver when challenges
                                      are processed. This can contain arbitrary JSON
                                      data. Secret values should not be specified
                                      in this stanza. If secret values are needed
                                      (e.g. credentials for a DNS service), you should
                                      use a SecretKeySelector to reference a Secret
                                      resource. For details on the schema of this
                                      field, consult the webhook provider implementation's
                                      documentation.
                                    x-kubernetes-preserve-unknown-fields: true
                                  groupName:
                                    description: The API group name that should be
                                      used when POSTing ChallengePayload resources
                                      to the webhook apiserver. This should be the
                                      same as the GroupName specified in the webhook
                                      provider implementation.
                                    type: string
                                  solverName:
                                    description: The name of the solver to use, as
                                      defined in the webhook provider implementation.
                                      This will typically be the name of the provider,
                                      e.g. 'cloudflare'.
                                    type: string
                                required:
                                - groupName
                                - solverName
                                type: object
                            type: object
                          http01:
                            description: Configures cert-manager to attempt to complete
                              authorizations by performing the HTTP01 challenge flow.
                              It is not possible to obtain certificates for wildcard
                              domain names (e.g. `*.example.com`) using the HTTP01
                              challenge mechanism.
                            properties:
                              gatewayHTTPRoute:
                                description: The Gateway API is a sig-network community
                                  API that models service networking in Kubernetes
                                  (https://gateway-api.sigs.k8s.io/). The Gateway
                                  solver will create HTTPRoutes with the specified
                                  labels in the same namespace as the challenge. This
                                  solver is experimental, and fields / behaviour may
                                  change in the future.
                                properties:
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: The labels that cert-manager will
                                      use when creating the temporary HTTPRoute needed
                                      for solving the HTTP-01 challenge. These labels
                                      must match the label selector of at least one
                                      Gateway.
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                              ingress:
                                description: The ingress based HTTP01 challenge solver
                                  will solve challenges by creating or modifying Ingress
                                  resources in order to route requests for '/.well-known/acme-challenge/XYZ'
                                  to 'challenge solver' pods that are provisioned
                                  by cert-manager for each Challenge to be completed.
                                properties:
                                  class:
                                    description: The ingress class to use when creating
                                      Ingress resources to solve ACME challenges that
                                      use this challenge solver. Only one of 'class'
                                      or 'name' may be specified.
                                    type: string
                                  ingressTemplate:
                                    description: Optional ingress template used to
                                      configure the ACME challenge solver ingress
                                      used for HTTP01 challenges.
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          ingress used to solve HTTP01 challenges.
                                          Only the 'labels' and 'annotations' fields
                                          may be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the created ACME HTTP01 solver
                                              ingress.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver ingress.
                                            type: object
                                        type: object
                                    type: object
                                  name:
                                    description: The name of the ingress resource
                                      that should have ACME challenge solving routes
                                      inserted into it in order to solve HTTP01 challenges.
                                      This is typically used in conjunction with ingress
                                      controllers like ingress-gce, which maintains
                                      a 1:1 mapping between external IPs and ingress
                                      resources.
                                    type: string
                                  podTemplate:
                                    description: Optional pod template used to configure
                                      the ACME challenge solver pods used for HTTP01
                                      challenges.
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          pod used to solve HTTP01 challenges. Only
                                          the 'labels' and 'annotations' fields may
                                          be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be
                                              added to the create ACME HTTP01 solver
                                              pods.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added
                                              to the created ACME HTTP01 solver pods.
                                            type: object
                                        type: object
                                      spec:
                                        description: PodSpec defines overrides for
                                          the HTTP01 challenge solver pod. Only the
                                          'priorityClassName', 'nodeSelector', 'affinity',
                                          'serviceAccountName' and 'tolerations' fields
                                          are supported currently. All other fields
                                          will be ignored.
                                        properties:
                                          affinity:
                                            description: If specified, the pod's scheduling
                                              constraints
                                            properties:
                                              nodeAffinity:
                                                description: Describes node affinity
                                                  scheduling rules for the pod.
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      matches the corresponding matchExpressions;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: An empty preferred
                                                        scheduling term matches all
                                                        objects with implicit weight
                                                        0 (i.e. it's a no-op). A null
                                                        preferred scheduling term
                                                        matches no objects (i.e. is
                                                        also a no-op).
                                                      properties:
                                                        preference:
                                                          description: A node selector
                                                            term, associated with
                                                            the corresponding weight.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        weight:
                                                          description: Weight associated
                                                            with matching the corresponding
                                                            nodeSelectorTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - preference
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to an update), the system
                                                      may or may not try to eventually
                                                      evict the pod from its node.
                                                    properties:
                                                      nodeSelectorTerms:
                                                        description: Required. A list
                                                          of node selector terms.
                                                          The terms are ORed.
                                                        items:
                                                          description: A null or empty
                                                            node selector term matches
                                                            no objects. The requirements
                                                            of them are ANDed. The
                                                            TopologySelectorTerm type
                                                            implements a subset of
                                                            the NodeSelectorTerm.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        type: array
                                                    required:
                                                    - nodeSelectorTerms
                                                    type: object
                                                type: object
                                              podAffinity:
                                                description: Describes pod affinity
                                                  scheduling rules (e.g. co-locate
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      has pods which matches the corresponding
                                                      podAffinityTerm; the node(s)
                                                      with the highest sum are the
                                                      most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is beta-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is beta-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                              podAntiAffinity:
                                                description: Describes pod anti-affinity
                                                  scheduling rules (e.g. avoid putting
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the anti-affinity
                                                      expressions specified by this
                                                      field, but it may choose a node
                                                      that violates one or more of
                                                      the expressions. The node that
                                                      is most preferred is the one
                                                      with the greatest sum of weights,
                                                      i.e. for each node that meets
                                                      all of the scheduling requirements
                                                      (resource request, requiredDuringScheduling
                                                      anti-affinity expressions, etc.),
                                                      compute a sum by iterating through
                                                      the elements of this field and
                                                      adding "weight" to the sum if
                                                      the node has pods which matches
                                                      the corresponding podAffinityTerm;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaceSelector:
                                                              description: A label
                                                                query over the set
                                                                of namespaces that
                                                                the term applies to.
                                                                The term is applied
                                                                to the union of the
                                                                namespaces selected
                                                                by this field and
                                                                the ones listed in
                                                                the namespaces field.
                                                                null selector and
                                                                null or empty namespaces
                                                                list means "this pod's
                                                                namespace". An empty
                                                                selector ({}) matches
                                                                all namespaces. This
                                                                field is beta-level
                                                                and is only honored
                                                                when PodAffinityNamespaceSelector
                                                                feature is enabled.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies a static
                                                                list of namespace
                                                                names that the term
                                                                applies to. The term
                                                                is applied to the
                                                                union of the namespaces
                                                                listed in this field
                                                                and the ones selected
                                                                by namespaceSelector.
                                                                null or empty namespaces
                                                                list and null namespaceSelector
                                                                means "this pod's
                                                                namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the anti-affinity
                                                      requirements specified by this
                                                      field are not met at scheduling
                                                      time, the pod will not be scheduled
                                                      onto the node. If the anti-affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaceSelector:
                                                          description: A label query
                                                            over the set of namespaces
                                                            that the term applies
                                                            to. The term is applied
                                                            to the union of the namespaces
                                                            selected by this field
                                                            and the ones listed in
                                                            the namespaces field.
                                                            null selector and null
                                                            or empty namespaces list
                                                            means "this pod's namespace".
                                                            An empty selector ({})
                                                            matches all namespaces.
                                                            This field is beta-level
                                                            and is only honored when
                                                            PodAffinityNamespaceSelector
                                                            feature is enabled.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies a static list
                                                            of namespace names that
                                                            the term applies to. The
                                                            term is applied to the
                                                            union of the namespaces
                                                            listed in this field and
                                                            the ones selected by namespaceSelector.
                                                            null or empty namespaces
                                                            list and null namespaceSelector
                                                            means "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                            type: object
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: 'NodeSelector is a selector
                                              which must be true for the pod to fit
                                              on a node. Selector which must match
                                              a node''s labels for the pod to be scheduled
                                              on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                            type: object
                                          priorityClassName:
                                            description: If specified, the pod's priorityClassName.
                                            type: string
                                          serviceAccountName:
                                            description: If specified, the pod's service
                                              account
                                            type: string
                                          tolerations:
                                            description: If specified, the pod's tolerations.
                                            items:
                                              description: The pod this Toleration
                                                is attached to tolerates any taint
                                                that matches the triple <key,value,effect>
                                                using the matching operator <operator>.
                                              properties:
                                                effect:
                                                  description: Effect indicates the
                                                    taint effect to match. Empty means
                                                    match all taint effects. When
                                                    specified, allowed values are
                                                    NoSchedule, PreferNoSchedule and
                                                    NoExecute.
                                                  type: string
                                                key:
                                                  description: Key is the taint key
                                                    that the toleration applies to.
                                                    Empty means match all taint keys.
                                                    If the key is empty, operator
                                                    must be Exists; this combination
                                                    means to match all values and
                                                    all keys.
                                                  type: string
                                                operator:
                                                  description: Operator represents
                                                    a key's relationship to the value.
                                                    Valid operators are Exists and
                                                    Equal. Defaults to Equal. Exists
                                                    is equivalent to wildcard for
                                                    value, so that a pod can tolerate
                                                    all taints of a particular category.
                                                  type: string
                                                tolerationSeconds:
                                                  description: TolerationSeconds represents
                                                    the period of time the toleration
                                                    (which must be of effect NoExecute,
                                                    otherwise this field is ignored)
                                                    tolerates the taint. By default,
                                                    it is not set, which means tolerate
                                                    the taint forever (do not evict).
                                                    Zero and negative values will
                                                    be treated as 0 (evict immediately)
                                                    by the system.
                                                  format: int64
                                                  type: integer
                                                value:
                                                  description: Value is the taint
                                                    value the toleration matches to.
                                                    If the operator is Exists, the
                                                    value should be empty, otherwise
                                                    just a regular string.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service. Supported values are NodePort
                                      or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                            type: object
                          selector:
                            description: Selector selects a set of DNSNames on the
                              Certificate resource that should be solved using this
                              challenge solver. If not specified, the solver will
                              be treated as the 'default' solver with the lowest priority,
                              i.e. if any other solver has a more specific match,
                              it will be used instead.
                            properties:
                              dnsNames:
                                description: List of DNSNames that this solver will
                                  be used to solve. If specified and a match is found,
                                  a dnsNames selector will take precedence over a
                                  dnsZones selector. If multiple solvers match with
                                  the same dnsNames value, the solver with the most
                                  matching labels in matchLabels will be selected.
                                  If neither has more matches, the solver defined
                                  earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              dnsZones:
                                description: List of DNSZones that this solver will
                                  be used to solve. The most specific DNS zone match
                                  specified here will take precedence over other DNS
                                  zone matches, so a solver specifying sys.example.com
                                  will be selected over one specifying example.com
                                  for the domain www.sys.example.com. If multiple
                                  solvers match with the same dnsZones value, the
                                  solver with the most matching labels in matchLabels
                                  will be selected. If neither has more matches, the
                                  solver defined earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: A label selector that is used to refine
                                  the set of certificate's that this challenge solver
                                  will apply to.
                                type: object
                            type: object
                        type: object
                      type: array
                  required:
                  - privateKeySecretRef
                  - server
                  type: object
                ca:
                  description: CA configures this issuer to sign certificates using
                    a signing CA keypair stored in a Secret resource. This is used
                    to build internal PKIs that are managed by cert-manager.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set, certificates will be issued without distribution points
                        set.
                      items:
                        type: string
                      type: array
                    ocspServers:
                      description: The OCSP server list is an X.509 v3 extension that
                        defines a list of URLs of OCSP responders. The OCSP responders
                        can be queried for the revocation status of an issued certificate.
                        If not set, the certificate will be issued with no OCSP servers
                        set. For example, an OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
                      items:
                        type: string
                      type: array
                    secretName:
                      description: SecretName is the name of the secret used to sign
                        Certificates issued by this Issuer.
                      type: string
                  required:
                  - secretName
                  type: object
                selfSigned:
                  description: SelfSigned configures this issuer to 'self sign' certificates
                    using the private key used to create the CertificateRequest object.
                  properties:
                    crlDistributionPoints:
                      description: The CRL distribution points is an X.509 v3 certificate
                        extension which identifies the location of the CRL from which
                        the revocation of this certificate can be checked. If not
                        set certificate will be issued without CDP. Values are strings.
                      items:
                        type: string
                      type: array
                  type: object
                vault:
                  description: Vault configures this issuer to sign certificates using
                    a HashiCorp Vault PKI backend.
                  properties:
                    auth:
                      description: Auth configures how cert-manager authenticates
                        with the Vault server.
                      properties:
                        appRole:
                          description: AppRole authenticates with Vault using the
                            App Role auth mechanism, with the role and secret stored
                            in a Kubernetes Secret resource.
                          properties:
                            path:
                              description: 'Path where the App Role authentication
                                backend is mounted in Vault, e.g: "approle"'
                              type: string
                            roleId:
                              description: RoleID configured in the App Role authentication
                                backend when setting up the authentication backend
                                in Vault.
                              type: string
                            secretRef:
                              description: Reference to a key in a Secret that contains
                                the App Role secret used to authenticate with Vault.
                                The `key` field must be specified and denotes which
                                entry within the Secret resource is used as the app
                                role secret.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - path
                          - roleId
                          - secretRef
                          type: object
                        kubernetes:
                          description: Kubernetes authenticates with Vault by passing
                            the ServiceAccount token stored in the named Secret resource
                            to the Vault server.
                          properties:
                            mountPath:
                              description: The Vault mountPath here is the mount path
                                to use when authenticating with Vault. For example,
                                setting a value to `/v1/auth/foo`, will use the path
                                `/v1/auth/foo/login` to authenticate with Vault. If
                                unspecified, the default value "/v1/auth/kubernetes"
                                will be used.
                              type: string
                            role:
                              description: A required field containing the Vault Role
                                to assume. A Role binds a Kubernetes ServiceAccount
                                with a set of Vault policies.
                              type: string
                            secretRef:
                              description: The required Secret field containing a
                                Kubernetes ServiceAccount JWT used for authenticating
                                with Vault. Use of 'ambient credentials' is not supported.
                              properties:
                                key:
                                  description: The key of the entry in the Secret
                                    resource's `data` field to be used. Some instances
                                    of this field may be defaulted, in others it may
                                    be required.
                                  type: string
                                name:
                                  description: 'Name of the resource being referred
                                    to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - role
                          - secretRef
                          type: object
                        tokenSecretRef:
                          description: TokenSecretRef authenticates with Vault by
                            presenting a token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    caBundle:
                      description: PEM-encoded CA bundle (base64-encoded) used to
                        validate Vault server certificate. Only used if the Server
                        URL is using HTTPS protocol. This parameter is ignored for
                        plain HTTP protocol connection. If not set the system root
                        certificates are used to validate the TLS connection.
                      format: byte
                      type: string
                    namespace:
                      description: 'Name of the vault namespace. Namespaces is a set
                        of features within Vault Enterprise that allows Vault environments
                        to support Secure Multi-tenancy. e.g: "ns1" More about namespaces
                        can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                      type: string
                    path:
                      description: 'Path is the mount path of the Vault PKI backend''s
                        `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".'
                      type: string
                    server:
                      description: 'Server is the connection address for the Vault
                        server, e.g: "https://vault.example.com:8200".'
                      type: string
                  required:
                  - auth
                  - path
                  - server
                  type: object
                venafi:
                  description: Venafi configures this issuer to sign certificates
                    using a Venafi TPP or Venafi Cloud policy zone.
                  properties:
                    cloud:
                      description: Cloud specifies the Venafi cloud configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        apiTokenSecretRef:
                          description: APITokenSecretRef is a secret key selector
                            for the Venafi Cloud API token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: URL is the base URL for Venafi Cloud. Defaults
                            to "https://api.venafi.cloud/v1".
                          type: string
                      required:
                      - apiTokenSecretRef
                      type: object
                    tpp:
                      description: TPP specifies Trust Protection Platform configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        caBundle:
                          description: CABundle is a PEM encoded TLS certificate to
                            use to verify connections to the TPP instance. If specified,
                            system roots will not be used and the issuing CA for the
                            TPP instance must be verifiable using the provided root.
                            If not specified, the connection will be verified using
                            the cert-manager system root certificates.
                          format: byte
                          type: string
                        credentialsRef:
                          description: CredentialsRef is a reference to a Secret containing
                            the username and password for the TPP server. The secret
                            must contain two keys, 'username' and 'password'.
                          properties:
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: 'URL is the base URL for the vedsdk endpoint
                            of the Venafi TPP instance, for example: "https://tpp.example.com/vedsdk".'
                          type: string
                      required:
                      - credentialsRef
                      - url
                      type: object
                    zone:
                      description: Zone is the Venafi Policy Zone to use for this
                        issuer. All requests made to the Venafi platform will be restricted
                        by the named zone policy. This field is required.
                      type: string
                  required:
                  - zone
                  type: object
              type: object
            status:
              description: Status of the Issuer. This is set and managed automatically.
              properties:
                acme:
                  description: ACME specific status options. This field should only
                    be set if the Issuer is configured to use an ACME server to issue
                    certificates.
                  properties:
                    lastRegisteredEmail:
                      description: LastRegisteredEmail is the email associated with
                        the latest registered ACME account, in order to track changes
                        made to registered account associated with the  Issuer
                      type: string
                    uri:
                      description: URI is the unique account identifier, which can
                        also be used to retrieve account details from the CA
                      type: string
                  type: object
                conditions:
                  description: List of status conditions to indicate the status of
                    a CertificateRequest. Known condition types are `Ready`.
                  items:
                    description: IssuerCondition contains condition information for
                      an Issuer.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: If set, this represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.condition[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the Issuer.
                        format: int64
                        type: integer
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`,
                          `Unknown`).
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`).
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - cert-manager
      kind: Issuer
      listKind: IssuerList
      plural: issuers
      singular: issuer
    conditions:
    - lastTransitionTime: "2021-12-04T17:04:21Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-04T17:04:22Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.5.0
    creationTimestamp: "2021-12-04T17:03:56Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v0.24.0
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: kustomizations.kustomize.toolkit.fluxcd.io
    resourceVersion: "1786"
    uid: 3f12157d-b3ae-4b79-82d6-95de3c621ff7
  spec:
    conversion:
      strategy: None
    group: kustomize.toolkit.fluxcd.io
    names:
      kind: Kustomization
      listKind: KustomizationList
      plural: kustomizations
      shortNames:
      - ks
      singular: kustomization
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Kustomization is the Schema for the kustomizations API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: KustomizationSpec defines the desired state of a kustomization.
              properties:
                decryption:
                  description: Decrypt Kubernetes secrets before applying them on
                    the cluster.
                  properties:
                    provider:
                      description: Provider is the name of the decryption engine.
                      enum:
                      - sops
                      type: string
                    secretRef:
                      description: The secret name containing the private OpenPGP
                        keys used for decryption.
                      properties:
                        name:
                          description: Name of the referent
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - provider
                  type: object
                dependsOn:
                  description: DependsOn may contain a dependency.CrossNamespaceDependencyReference
                    slice with references to Kustomization resources that must be
                    ready before this Kustomization can be reconciled.
                  items:
                    description: CrossNamespaceDependencyReference holds the reference
                      to a dependency.
                    properties:
                      name:
                        description: Name holds the name reference of a dependency.
                        type: string
                      namespace:
                        description: Namespace holds the namespace reference of a
                          dependency.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                force:
                  default: false
                  description: Force instructs the controller to recreate resources
                    when patching fails due to an immutable field change.
                  type: boolean
                healthChecks:
                  description: A list of resources to be included in the health assessment.
                  items:
                    description: NamespacedObjectKindReference contains enough information
                      to let you locate the typed referenced object in any namespace
                    properties:
                      apiVersion:
                        description: API version of the referent, if not specified
                          the Kubernetes preferred version will be used
                        type: string
                      kind:
                        description: Kind of the referent
                        type: string
                      name:
                        description: Name of the referent
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified
                          it acts as LocalObjectReference
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                  type: array
                images:
                  description: Images is a list of (image name, new name, new tag
                    or digest) for changing image names, tags or digests. This can
                    also be achieved with a patch, but this operator is simpler to
                    specify.
                  items:
                    description: Image contains an image name, a new name, a new tag
                      or digest, which will replace the original name and tag.
                    properties:
                      digest:
                        description: Digest is the value used to replace the original
                          image tag. If digest is present NewTag value is ignored.
                        type: string
                      name:
                        description: Name is a tag-less image name.
                        type: string
                      newName:
                        description: NewName is the value used to replace the original
                          name.
                        type: string
                      newTag:
                        description: NewTag is the value used to replace the original
                          tag.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                interval:
                  description: The interval at which to reconcile the Kustomization.
                  type: string
                kubeConfig:
                  description: The KubeConfig for reconciling the Kustomization on
                    a remote cluster. When specified, KubeConfig takes precedence
                    over ServiceAccountName.
                  properties:
                    secretRef:
                      description: SecretRef holds the name to a secret that contains
                        a 'value' key with the kubeconfig file as the value. It must
                        be in the same namespace as the Kustomization. It is recommended
                        that the kubeconfig is self-contained, and the secret is regularly
                        updated if credentials such as a cloud-access-token expire.
                        Cloud specific `cmd-path` auth helpers will not function without
                        adding binaries and credentials to the Pod that is responsible
                        for reconciling the Kustomization.
                      properties:
                        name:
                          description: Name of the referent
                          type: string
                      required:
                      - name
                      type: object
                  type: object
                patches:
                  description: Strategic merge and JSON patches, defined as inline
                    YAML objects, capable of targeting objects based on kind, label
                    and annotation selectors.
                  items:
                    description: Patch contains either a StrategicMerge or a JSON6902
                      patch, either a file or inline, and the target the patch should
                      be applied to.
                    properties:
                      patch:
                        description: Patch contains the JSON6902 patch document with
                          an array of operation objects.
                        type: string
                      target:
                        description: Target points to the resources that the patch
                          document should be applied to.
                        properties:
                          annotationSelector:
                            description: AnnotationSelector is a string that follows
                              the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource annotations.
                            type: string
                          group:
                            description: Group is the API group to select resources
                              from. Together with Version and Kind it is capable of
                              unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          kind:
                            description: Kind of the API Group to select resources
                              from. Together with Group and Version it is capable
                              of unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          labelSelector:
                            description: LabelSelector is a string that follows the
                              label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource labels.
                            type: string
                          name:
                            description: Name to match resources with.
                            type: string
                          namespace:
                            description: Namespace to select resources from.
                            type: string
                          version:
                            description: Version of the API Group to select resources
                              from. Together with Group and Kind it is capable of
                              unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                        type: object
                    type: object
                  type: array
                patchesJson6902:
                  description: JSON 6902 patches, defined as inline YAML objects.
                  items:
                    description: JSON6902Patch contains a JSON6902 patch and the target
                      the patch should be applied to.
                    properties:
                      patch:
                        description: Patch contains the JSON6902 patch document with
                          an array of operation objects.
                        items:
                          description: JSON6902 is a JSON6902 operation object. https://tools.ietf.org/html/rfc6902#section-4
                          properties:
                            from:
                              type: string
                            op:
                              enum:
                              - test
                              - remove
                              - add
                              - replace
                              - move
                              - copy
                              type: string
                            path:
                              type: string
                            value:
                              x-kubernetes-preserve-unknown-fields: true
                          required:
                          - op
                          - path
                          type: object
                        type: array
                      target:
                        description: Target points to the resources that the patch
                          document should be applied to.
                        properties:
                          annotationSelector:
                            description: AnnotationSelector is a string that follows
                              the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource annotations.
                            type: string
                          group:
                            description: Group is the API group to select resources
                              from. Together with Version and Kind it is capable of
                              unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          kind:
                            description: Kind of the API Group to select resources
                              from. Together with Group and Version it is capable
                              of unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          labelSelector:
                            description: LabelSelector is a string that follows the
                              label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource labels.
                            type: string
                          name:
                            description: Name to match resources with.
                            type: string
                          namespace:
                            description: Namespace to select resources from.
                            type: string
                          version:
                            description: Version of the API Group to select resources
                              from. Together with Group and Kind it is capable of
                              unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                        type: object
                    required:
                    - patch
                    - target
                    type: object
                  type: array
                patchesStrategicMerge:
                  description: Strategic merge patches, defined as inline YAML objects.
                  items:
                    x-kubernetes-preserve-unknown-fields: true
                  type: array
                path:
                  description: Path to the directory containing the kustomization.yaml
                    file, or the set of plain YAMLs a kustomization.yaml should be
                    generated for. Defaults to 'None', which translates to the root
                    path of the SourceRef.
                  type: string
                postBuild:
                  description: PostBuild describes which actions to perform on the
                    YAML manifest generated by building the kustomize overlay.
                  properties:
                    substitute:
                      additionalProperties:
                        type: string
                      description: Substitute holds a map of key/value pairs. The
                        variables defined in your YAML manifests that match any of
                        the keys defined in the map will be substituted with the set
                        value. Includes support for bash string replacement functions
                        e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.
                      type: object
                    substituteFrom:
                      description: SubstituteFrom holds references to ConfigMaps and
                        Secrets containing the variables and their values to be substituted
                        in the YAML manifests. The ConfigMap and the Secret data keys
                        represent the var names and they must match the vars declared
                        in the manifests for the substitution to happen.
                      items:
                        description: SubstituteReference contains a reference to a
                          resource containing the variables name and value.
                        properties:
                          kind:
                            description: Kind of the values referent, valid values
                              are ('Secret', 'ConfigMap').
                            enum:
                            - Secret
                            - ConfigMap
                            type: string
                          name:
                            description: Name of the values referent. Should reside
                              in the same namespace as the referring resource.
                            maxLength: 253
                            minLength: 1
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                      type: array
                  type: object
                prune:
                  description: Prune enables garbage collection.
                  type: boolean
                retryInterval:
                  description: The interval at which to retry a previously failed
                    reconciliation. When not specified, the controller uses the KustomizationSpec.Interval
                    value to retry failures.
                  type: string
                serviceAccountName:
                  description: The name of the Kubernetes service account to impersonate
                    when reconciling this Kustomization.
                  type: string
                sourceRef:
                  description: Reference of the source where the kustomization file
                    is.
                  properties:
                    apiVersion:
                      description: API version of the referent
                      type: string
                    kind:
                      description: Kind of the referent
                      enum:
                      - GitRepository
                      - Bucket
                      type: string
                    name:
                      description: Name of the referent
                      type: string
                    namespace:
                      description: Namespace of the referent, defaults to the Kustomization
                        namespace
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend subsequent
                    kustomize executions, it does not apply to already started executions.
                    Defaults to false.
                  type: boolean
                targetNamespace:
                  description: TargetNamespace sets or overrides the namespace in
                    the kustomization.yaml file.
                  maxLength: 63
                  minLength: 1
                  type: string
                timeout:
                  description: Timeout for validation, apply and health checking operations.
                    Defaults to 'Interval' duration.
                  type: string
                validation:
                  description: Validate the Kubernetes objects before applying them
                    on the cluster. The validation strategy can be 'client' (local
                    dry-run), 'server' (APIServer dry-run) or 'none'. When 'Force'
                    is 'true', validation will fallback to 'client' if set to 'server'
                    because server-side validation is not supported in this scenario.
                  enum:
                  - none
                  - client
                  - server
                  type: string
              required:
              - interval
              - prune
              - sourceRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: KustomizationStatus defines the observed state of a kustomization.
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                lastAppliedRevision:
                  description: The last successfully applied revision. The revision
                    format for Git sources is <branch|tag>/<commit-sha>.
                  type: string
                lastAttemptedRevision:
                  description: LastAttemptedRevision is the revision of the last reconciliation
                    attempt.
                  type: string
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most
                    recent reconcile request value, so a change can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last reconciled generation.
                  format: int64
                  type: integer
                snapshot:
                  description: The last successfully applied revision metadata.
                  properties:
                    checksum:
                      description: The manifests sha1 checksum.
                      type: string
                    entries:
                      description: A list of Kubernetes kinds grouped by namespace.
                      items:
                        description: Snapshot holds the metadata of namespaced Kubernetes
                          objects
                        properties:
                          kinds:
                            additionalProperties:
                              type: string
                            description: The list of Kubernetes kinds.
                            type: object
                          namespace:
                            description: The namespace of this entry.
                            type: string
                        required:
                        - kinds
                        type: object
                      type: array
                  required:
                  - checksum
                  - entries
                  type: object
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: Kustomization is the Schema for the kustomizations API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: KustomizationSpec defines the configuration to calculate
                the desired state from a Source using Kustomize.
              properties:
                decryption:
                  description: Decrypt Kubernetes secrets before applying them on
                    the cluster.
                  properties:
                    provider:
                      description: Provider is the name of the decryption engine.
                      enum:
                      - sops
                      type: string
                    secretRef:
                      description: The secret name containing the private OpenPGP
                        keys used for decryption.
                      properties:
                        name:
                          description: Name of the referent
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - provider
                  type: object
                dependsOn:
                  description: DependsOn may contain a dependency.CrossNamespaceDependencyReference
                    slice with references to Kustomization resources that must be
                    ready before this Kustomization can be reconciled.
                  items:
                    description: CrossNamespaceDependencyReference holds the reference
                      to a dependency.
                    properties:
                      name:
                        description: Name holds the name reference of a dependency.
                        type: string
                      namespace:
                        description: Namespace holds the namespace reference of a
                          dependency.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                force:
                  default: false
                  description: Force instructs the controller to recreate resources
                    when patching fails due to an immutable field change.
                  type: boolean
                healthChecks:
                  description: A list of resources to be included in the health assessment.
                  items:
                    description: NamespacedObjectKindReference contains enough information
                      to let you locate the typed referenced object in any namespace
                    properties:
                      apiVersion:
                        description: API version of the referent, if not specified
                          the Kubernetes preferred version will be used
                        type: string
                      kind:
                        description: Kind of the referent
                        type: string
                      name:
                        description: Name of the referent
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified
                          it acts as LocalObjectReference
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                  type: array
                images:
                  description: Images is a list of (image name, new name, new tag
                    or digest) for changing image names, tags or digests. This can
                    also be achieved with a patch, but this operator is simpler to
                    specify.
                  items:
                    description: Image contains an image name, a new name, a new tag
                      or digest, which will replace the original name and tag.
                    properties:
                      digest:
                        description: Digest is the value used to replace the original
                          image tag. If digest is present NewTag value is ignored.
                        type: string
                      name:
                        description: Name is a tag-less image name.
                        type: string
                      newName:
                        description: NewName is the value used to replace the original
                          name.
                        type: string
                      newTag:
                        description: NewTag is the value used to replace the original
                          tag.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                interval:
                  description: The interval at which to reconcile the Kustomization.
                  type: string
                kubeConfig:
                  description: The KubeConfig for reconciling the Kustomization on
                    a remote cluster. When specified, KubeConfig takes precedence
                    over ServiceAccountName.
                  properties:
                    secretRef:
                      description: SecretRef holds the name to a secret that contains
                        a 'value' key with the kubeconfig file as the value. It must
                        be in the same namespace as the Kustomization. It is recommended
                        that the kubeconfig is self-contained, and the secret is regularly
                        updated if credentials such as a cloud-access-token expire.
                        Cloud specific `cmd-path` auth helpers will not function without
                        adding binaries and credentials to the Pod that is responsible
                        for reconciling the Kustomization.
                      properties:
                        name:
                          description: Name of the referent
                          type: string
                      required:
                      - name
                      type: object
                  type: object
                patches:
                  description: Strategic merge and JSON patches, defined as inline
                    YAML objects, capable of targeting objects based on kind, label
                    and annotation selectors.
                  items:
                    description: Patch contains either a StrategicMerge or a JSON6902
                      patch, either a file or inline, and the target the patch should
                      be applied to.
                    properties:
                      patch:
                        description: Patch contains the JSON6902 patch document with
                          an array of operation objects.
                        type: string
                      target:
                        description: Target points to the resources that the patch
                          document should be applied to.
                        properties:
                          annotationSelector:
                            description: AnnotationSelector is a string that follows
                              the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource annotations.
                            type: string
                          group:
                            description: Group is the API group to select resources
                              from. Together with Version and Kind it is capable of
                              unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          kind:
                            description: Kind of the API Group to select resources
                              from. Together with Group and Version it is capable
                              of unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          labelSelector:
                            description: LabelSelector is a string that follows the
                              label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource labels.
                            type: string
                          name:
                            description: Name to match resources with.
                            type: string
                          namespace:
                            description: Namespace to select resources from.
                            type: string
                          version:
                            description: Version of the API Group to select resources
                              from. Together with Group and Kind it is capable of
                              unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                        type: object
                    type: object
                  type: array
                patchesJson6902:
                  description: 'JSON 6902 patches, defined as inline YAML objects.
                    Deprecated: Use Patches instead.'
                  items:
                    description: JSON6902Patch contains a JSON6902 patch and the target
                      the patch should be applied to.
                    properties:
                      patch:
                        description: Patch contains the JSON6902 patch document with
                          an array of operation objects.
                        items:
                          description: JSON6902 is a JSON6902 operation object. https://tools.ietf.org/html/rfc6902#section-4
                          properties:
                            from:
                              type: string
                            op:
                              enum:
                              - test
                              - remove
                              - add
                              - replace
                              - move
                              - copy
                              type: string
                            path:
                              type: string
                            value:
                              x-kubernetes-preserve-unknown-fields: true
                          required:
                          - op
                          - path
                          type: object
                        type: array
                      target:
                        description: Target points to the resources that the patch
                          document should be applied to.
                        properties:
                          annotationSelector:
                            description: AnnotationSelector is a string that follows
                              the label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource annotations.
                            type: string
                          group:
                            description: Group is the API group to select resources
                              from. Together with Version and Kind it is capable of
                              unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          kind:
                            description: Kind of the API Group to select resources
                              from. Together with Group and Version it is capable
                              of unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          labelSelector:
                            description: LabelSelector is a string that follows the
                              label selection expression https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource labels.
                            type: string
                          name:
                            description: Name to match resources with.
                            type: string
                          namespace:
                            description: Namespace to select resources from.
                            type: string
                          version:
                            description: Version of the API Group to select resources
                              from. Together with Group and Kind it is capable of
                              unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                        type: object
                    required:
                    - patch
                    - target
                    type: object
                  type: array
                patchesStrategicMerge:
                  description: 'Strategic merge patches, defined as inline YAML objects.
                    Deprecated: Use Patches instead.'
                  items:
                    x-kubernetes-preserve-unknown-fields: true
                  type: array
                path:
                  description: Path to the directory containing the kustomization.yaml
                    file, or the set of plain YAMLs a kustomization.yaml should be
                    generated for. Defaults to 'None', which translates to the root
                    path of the SourceRef.
                  type: string
                postBuild:
                  description: PostBuild describes which actions to perform on the
                    YAML manifest generated by building the kustomize overlay.
                  properties:
                    substitute:
                      additionalProperties:
                        type: string
                      description: Substitute holds a map of key/value pairs. The
                        variables defined in your YAML manifests that match any of
                        the keys defined in the map will be substituted with the set
                        value. Includes support for bash string replacement functions
                        e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.
                      type: object
                    substituteFrom:
                      description: SubstituteFrom holds references to ConfigMaps and
                        Secrets containing the variables and their values to be substituted
                        in the YAML manifests. The ConfigMap and the Secret data keys
                        represent the var names and they must match the vars declared
                        in the manifests for the substitution to happen.
                      items:
                        description: SubstituteReference contains a reference to a
                          resource containing the variables name and value.
                        properties:
                          kind:
                            description: Kind of the values referent, valid values
                              are ('Secret', 'ConfigMap').
                            enum:
                            - Secret
                            - ConfigMap
                            type: string
                          name:
                            description: Name of the values referent. Should reside
                              in the same namespace as the referring resource.
                            maxLength: 253
                            minLength: 1
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                      type: array
                  type: object
                prune:
                  description: Prune enables garbage collection.
                  type: boolean
                retryInterval:
                  description: The interval at which to retry a previously failed
                    reconciliation. When not specified, the controller uses the KustomizationSpec.Interval
                    value to retry failures.
                  type: string
                serviceAccountName:
                  description: The name of the Kubernetes service account to impersonate
                    when reconciling this Kustomization.
                  type: string
                sourceRef:
                  description: Reference of the source where the kustomization file
                    is.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    kind:
                      description: Kind of the referent.
                      enum:
                      - GitRepository
                      - Bucket
                      type: string
                    name:
                      description: Name of the referent.
                      type: string
                    namespace:
                      description: Namespace of the referent, defaults to the namespace
                        of the Kubernetes resource object that contains the reference.
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend subsequent
                    kustomize executions, it does not apply to already started executions.
                    Defaults to false.
                  type: boolean
                targetNamespace:
                  description: TargetNamespace sets or overrides the namespace in
                    the kustomization.yaml file.
                  maxLength: 63
                  minLength: 1
                  type: string
                timeout:
                  description: Timeout for validation, apply and health checking operations.
                    Defaults to 'Interval' duration.
                  type: string
                validation:
                  description: 'Deprecated: Not used in v1beta2.'
                  enum:
                  - none
                  - client
                  - server
                  type: string
                wait:
                  description: Wait instructs the controller to check the health of
                    all the reconciled resources. When enabled, the HealthChecks are
                    ignored. Defaults to false.
                  type: boolean
              required:
              - interval
              - prune
              - sourceRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: KustomizationStatus defines the observed state of a kustomization.
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the
                      current state of this API Resource. --- This struct is intended
                      for direct use as an array at the field path .status.conditions.
                      \ For example, type FooStatus struct{     // Represents the
                      observations of a foo's current state.     // Known .status.conditions.type
                      are: \"Available\", \"Progressing\", and \"Degraded\"     //
                      +patchMergeKey=type     // +patchStrategy=merge     // +listType=map
                      \    // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be
                          when the underlying condition changed.  If that is not known,
                          then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if
                          .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False,
                          Unknown.
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                    type: object
                  type: array
                inventory:
                  description: Inventory contains the list of Kubernetes resource
                    object references that have been successfully applied.
                  properties:
                    entries:
                      description: Entries of Kubernetes resource object references.
                      items:
                        description: ResourceRef contains the information necessary
                          to locate a resource within a cluster.
                        properties:
                          id:
                            description: ID is the string representation of the Kubernetes
                              resource object's metadata, in the format '<namespace>_<name>_<group>_<kind>'.
                            type: string
                          v:
                            description: Version is the API version of the Kubernetes
                              resource object's kind.
                            type: string
                        required:
                        - id
                        - v
                        type: object
                      type: array
                  required:
                  - entries
                  type: object
                lastAppliedRevision:
                  description: The last successfully applied revision. The revision
                    format for Git sources is <branch|tag>/<commit-sha>.
                  type: string
                lastAttemptedRevision:
                  description: LastAttemptedRevision is the revision of the last reconciliation
                    attempt.
                  type: string
                lastHandledReconcileAt:
                  description: LastHandledReconcileAt holds the value of the most
                    recent reconcile request value, so a change can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last reconciled generation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: Kustomization
      listKind: KustomizationList
      plural: kustomizations
      shortNames:
      - ks
      singular: kustomization
    conditions:
    - lastTransitionTime: "2021-12-04T17:03:56Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-04T17:03:56Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta2
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.4.1
    creationTimestamp: "2021-12-07T18:20:13Z"
    generation: 1
    name: middlewares.traefik.containo.us
    resourceVersion: "2639731"
    uid: 967dbb0d-4fae-4cb6-aa00-8dd8610a3798
  spec:
    conversion:
      strategy: None
    group: traefik.containo.us
    names:
      kind: Middleware
      listKind: MiddlewareList
      plural: middlewares
      singular: middleware
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Middleware is a specification for a Middleware resource.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MiddlewareSpec holds the Middleware configuration.
              properties:
                addPrefix:
                  description: AddPrefix holds the AddPrefix configuration.
                  properties:
                    prefix:
                      type: string
                  type: object
                basicAuth:
                  description: BasicAuth holds the HTTP basic authentication configuration.
                  properties:
                    headerField:
                      type: string
                    realm:
                      type: string
                    removeHeader:
                      type: boolean
                    secret:
                      type: string
                  type: object
                buffering:
                  description: Buffering holds the request/response buffering configuration.
                  properties:
                    maxRequestBodyBytes:
                      format: int64
                      type: integer
                    maxResponseBodyBytes:
                      format: int64
                      type: integer
                    memRequestBodyBytes:
                      format: int64
                      type: integer
                    memResponseBodyBytes:
                      format: int64
                      type: integer
                    retryExpression:
                      type: string
                  type: object
                chain:
                  description: Chain holds a chain of middlewares.
                  properties:
                    middlewares:
                      items:
                        description: MiddlewareRef is a ref to the Middleware resources.
                        properties:
                          name:
                            type: string
                          namespace:
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                  type: object
                circuitBreaker:
                  description: CircuitBreaker holds the circuit breaker configuration.
                  properties:
                    expression:
                      type: string
                  type: object
                compress:
                  description: Compress holds the compress configuration.
                  properties:
                    excludedContentTypes:
                      items:
                        type: string
                      type: array
                  type: object
                contentType:
                  description: ContentType middleware - or rather its unique `autoDetect`
                    option - specifies whether to let the `Content-Type` header, if
                    it has not been set by the backend, be automatically set to a
                    value derived from the contents of the response. As a proxy, the
                    default behavior should be to leave the header alone, regardless
                    of what the backend did with it. However, the historic default
                    was to always auto-detect and set the header if it was nil, and
                    it is going to be kept that way in order to support users currently
                    relying on it. This middleware exists to enable the correct behavior
                    until at least the default one can be changed in a future version.
                  properties:
                    autoDetect:
                      type: boolean
                  type: object
                digestAuth:
                  description: DigestAuth holds the Digest HTTP authentication configuration.
                  properties:
                    headerField:
                      type: string
                    realm:
                      type: string
                    removeHeader:
                      type: boolean
                    secret:
                      type: string
                  type: object
                errors:
                  description: ErrorPage holds the custom error page configuration.
                  properties:
                    query:
                      type: string
                    service:
                      description: Service defines an upstream to proxy traffic.
                      properties:
                        kind:
                          enum:
                          - Service
                          - TraefikService
                          type: string
                        name:
                          description: Name is a reference to a Kubernetes Service
                            object (for a load-balancer of servers), or to a TraefikService
                            object (service load-balancer, mirroring, etc). The differentiation
                            between the two is specified in the Kind field.
                          type: string
                        namespace:
                          type: string
                        passHostHeader:
                          type: boolean
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          x-kubernetes-int-or-string: true
                        responseForwarding:
                          description: ResponseForwarding holds configuration for
                            the forward of the response.
                          properties:
                            flushInterval:
                              type: string
                          type: object
                        scheme:
                          type: string
                        serversTransport:
                          type: string
                        sticky:
                          description: Sticky holds the sticky configuration.
                          properties:
                            cookie:
                              description: Cookie holds the sticky configuration based
                                on cookie.
                              properties:
                                httpOnly:
                                  type: boolean
                                name:
                                  type: string
                                sameSite:
                                  type: string
                                secure:
                                  type: boolean
                              type: object
                          type: object
                        strategy:
                          type: string
                        weight:
                          description: Weight should only be specified when Name references
                            a TraefikService object (and to be precise, one that embeds
                            a Weighted Round Robin).
                          type: integer
                      required:
                      - name
                      type: object
                    status:
                      items:
                        type: string
                      type: array
                  type: object
                forwardAuth:
                  description: ForwardAuth holds the http forward authentication configuration.
                  properties:
                    address:
                      type: string
                    authRequestHeaders:
                      items:
                        type: string
                      type: array
                    authResponseHeaders:
                      items:
                        type: string
                      type: array
                    authResponseHeadersRegex:
                      type: string
                    tls:
                      description: ClientTLS holds TLS specific configurations as
                        client.
                      properties:
                        caOptional:
                          type: boolean
                        caSecret:
                          type: string
                        certSecret:
                          type: string
                        insecureSkipVerify:
                          type: boolean
                      type: object
                    trustForwardHeader:
                      type: boolean
                  type: object
                headers:
                  description: Headers holds the custom header configuration.
                  properties:
                    accessControlAllowCredentials:
                      description: AccessControlAllowCredentials is only valid if
                        true. false is ignored.
                      type: boolean
                    accessControlAllowHeaders:
                      description: AccessControlAllowHeaders must be used in response
                        to a preflight request with Access-Control-Request-Headers
                        set.
                      items:
                        type: string
                      type: array
                    accessControlAllowMethods:
                      description: AccessControlAllowMethods must be used in response
                        to a preflight request with Access-Control-Request-Method
                        set.
                      items:
                        type: string
                      type: array
                    accessControlAllowOriginList:
                      description: AccessControlAllowOriginList is a list of allowable
                        origins. Can also be a wildcard origin "*".
                      items:
                        type: string
                      type: array
                    accessControlAllowOriginListRegex:
                      description: AccessControlAllowOriginListRegex is a list of
                        allowable origins written following the Regular Expression
                        syntax (https://golang.org/pkg/regexp/).
                      items:
                        type: string
                      type: array
                    accessControlExposeHeaders:
                      description: AccessControlExposeHeaders sets valid headers for
                        the response.
                      items:
                        type: string
                      type: array
                    accessControlMaxAge:
                      description: AccessControlMaxAge sets the time that a preflight
                        request may be cached.
                      format: int64
                      type: integer
                    addVaryHeader:
                      description: AddVaryHeader controls if the Vary header is automatically
                        added/updated when the AccessControlAllowOriginList is set.
                      type: boolean
                    allowedHosts:
                      items:
                        type: string
                      type: array
                    browserXssFilter:
                      type: boolean
                    contentSecurityPolicy:
                      type: string
                    contentTypeNosniff:
                      type: boolean
                    customBrowserXSSValue:
                      type: string
                    customFrameOptionsValue:
                      type: string
                    customRequestHeaders:
                      additionalProperties:
                        type: string
                      type: object
                    customResponseHeaders:
                      additionalProperties:
                        type: string
                      type: object
                    featurePolicy:
                      description: 'Deprecated: use PermissionsPolicy instead.'
                      type: string
                    forceSTSHeader:
                      type: boolean
                    frameDeny:
                      type: boolean
                    hostsProxyHeaders:
                      items:
                        type: string
                      type: array
                    isDevelopment:
                      type: boolean
                    permissionsPolicy:
                      type: string
                    publicKey:
                      type: string
                    referrerPolicy:
                      type: string
                    sslForceHost:
                      description: 'Deprecated: use RedirectRegex instead.'
                      type: boolean
                    sslHost:
                      description: 'Deprecated: use RedirectRegex instead.'
                      type: string
                    sslProxyHeaders:
                      additionalProperties:
                        type: string
                      type: object
                    sslRedirect:
                      description: 'Deprecated: use EntryPoint redirection or RedirectScheme
                        instead.'
                      type: boolean
                    sslTemporaryRedirect:
                      description: 'Deprecated: use EntryPoint redirection or RedirectScheme
                        instead.'
                      type: boolean
                    stsIncludeSubdomains:
                      type: boolean
                    stsPreload:
                      type: boolean
                    stsSeconds:
                      format: int64
                      type: integer
                  type: object
                inFlightReq:
                  description: InFlightReq limits the number of requests being processed
                    and served concurrently.
                  properties:
                    amount:
                      format: int64
                      type: integer
                    sourceCriterion:
                      description: SourceCriterion defines what criterion is used
                        to group requests as originating from a common source. If
                        none are set, the default is to use the request's remote address
                        field. All fields are mutually exclusive.
                      properties:
                        ipStrategy:
                          description: IPStrategy holds the ip strategy configuration.
                          properties:
                            depth:
                              type: integer
                            excludedIPs:
                              items:
                                type: string
                              type: array
                          type: object
                        requestHeaderName:
                          type: string
                        requestHost:
                          type: boolean
                      type: object
                  type: object
                ipWhiteList:
                  description: IPWhiteList holds the ip white list configuration.
                  properties:
                    ipStrategy:
                      description: IPStrategy holds the ip strategy configuration.
                      properties:
                        depth:
                          type: integer
                        excludedIPs:
                          items:
                            type: string
                          type: array
                      type: object
                    sourceRange:
                      items:
                        type: string
                      type: array
                  type: object
                passTLSClientCert:
                  description: PassTLSClientCert holds the TLS client cert headers
                    configuration.
                  properties:
                    info:
                      description: TLSClientCertificateInfo holds the client TLS certificate
                        info configuration.
                      properties:
                        issuer:
                          description: TLSCLientCertificateDNInfo holds the client
                            TLS certificate distinguished name info configuration.
                            cf https://tools.ietf.org/html/rfc3739
                          properties:
                            commonName:
                              type: boolean
                            country:
                              type: boolean
                            domainComponent:
                              type: boolean
                            locality:
                              type: boolean
                            organization:
                              type: boolean
                            province:
                              type: boolean
                            serialNumber:
                              type: boolean
                          type: object
                        notAfter:
                          type: boolean
                        notBefore:
                          type: boolean
                        sans:
                          type: boolean
                        serialNumber:
                          type: boolean
                        subject:
                          description: TLSCLientCertificateDNInfo holds the client
                            TLS certificate distinguished name info configuration.
                            cf https://tools.ietf.org/html/rfc3739
                          properties:
                            commonName:
                              type: boolean
                            country:
                              type: boolean
                            domainComponent:
                              type: boolean
                            locality:
                              type: boolean
                            organization:
                              type: boolean
                            province:
                              type: boolean
                            serialNumber:
                              type: boolean
                          type: object
                      type: object
                    pem:
                      type: boolean
                  type: object
                plugin:
                  additionalProperties:
                    x-kubernetes-preserve-unknown-fields: true
                  type: object
                rateLimit:
                  description: RateLimit holds the rate limiting configuration for
                    a given router.
                  properties:
                    average:
                      format: int64
                      type: integer
                    burst:
                      format: int64
                      type: integer
                    period:
                      anyOf:
                      - type: integer
                      - type: string
                      x-kubernetes-int-or-string: true
                    sourceCriterion:
                      description: SourceCriterion defines what criterion is used
                        to group requests as originating from a common source. If
                        none are set, the default is to use the request's remote address
                        field. All fields are mutually exclusive.
                      properties:
                        ipStrategy:
                          description: IPStrategy holds the ip strategy configuration.
                          properties:
                            depth:
                              type: integer
                            excludedIPs:
                              items:
                                type: string
                              type: array
                          type: object
                        requestHeaderName:
                          type: string
                        requestHost:
                          type: boolean
                      type: object
                  type: object
                redirectRegex:
                  description: RedirectRegex holds the redirection configuration.
                  properties:
                    permanent:
                      type: boolean
                    regex:
                      type: string
                    replacement:
                      type: string
                  type: object
                redirectScheme:
                  description: RedirectScheme holds the scheme redirection configuration.
                  properties:
                    permanent:
                      type: boolean
                    port:
                      type: string
                    scheme:
                      type: string
                  type: object
                replacePath:
                  description: ReplacePath holds the ReplacePath configuration.
                  properties:
                    path:
                      type: string
                  type: object
                replacePathRegex:
                  description: ReplacePathRegex holds the ReplacePathRegex configuration.
                  properties:
                    regex:
                      type: string
                    replacement:
                      type: string
                  type: object
                retry:
                  description: Retry holds the retry configuration.
                  properties:
                    attempts:
                      type: integer
                    initialInterval:
                      anyOf:
                      - type: integer
                      - type: string
                      x-kubernetes-int-or-string: true
                  type: object
                stripPrefix:
                  description: StripPrefix holds the StripPrefix configuration.
                  properties:
                    forceSlash:
                      type: boolean
                    prefixes:
                      items:
                        type: string
                      type: array
                  type: object
                stripPrefixRegex:
                  description: StripPrefixRegex holds the StripPrefixRegex configuration.
                  properties:
                    regex:
                      items:
                        type: string
                      type: array
                  type: object
              type: object
          required:
          - metadata
          - spec
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: Middleware
      listKind: MiddlewareList
      plural: middlewares
      singular: middleware
    conditions:
    - lastTransitionTime: "2021-12-07T18:20:13Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-07T18:20:13Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.4.1
    creationTimestamp: "2021-12-07T18:20:13Z"
    generation: 1
    name: middlewaretcps.traefik.containo.us
    resourceVersion: "2639738"
    uid: aac0f62f-ef4e-4dfb-8f45-939f476f4c6d
  spec:
    conversion:
      strategy: None
    group: traefik.containo.us
    names:
      kind: MiddlewareTCP
      listKind: MiddlewareTCPList
      plural: middlewaretcps
      singular: middlewaretcp
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: MiddlewareTCP is a specification for a MiddlewareTCP resource.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MiddlewareTCPSpec holds the MiddlewareTCP configuration.
              properties:
                ipWhiteList:
                  description: TCPIPWhiteList holds the TCP ip white list configuration.
                  properties:
                    sourceRange:
                      items:
                        type: string
                      type: array
                  type: object
              type: object
          required:
          - metadata
          - spec
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: MiddlewareTCP
      listKind: MiddlewareTCPList
      plural: middlewaretcps
      singular: middlewaretcp
    conditions:
    - lastTransitionTime: "2021-12-07T18:20:13Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-07T18:20:13Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from-secret: cert-manager/cert-manager-cert-manager-webhook-ca
      meta.helm.sh/release-name: cert-manager-cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2021-12-04T17:04:19Z"
    generation: 2
    labels:
      app: cert-manager
      app.kubernetes.io/instance: cert-manager-cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.6.1
      helm.sh/chart: cert-manager-v1.6.1
      helm.toolkit.fluxcd.io/name: cert-manager
      helm.toolkit.fluxcd.io/namespace: flux-system
    name: orders.acme.cert-manager.io
    resourceVersion: "2475"
    uid: f41471a6-1a73-45c7-9697-c26f89a3515a
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJ3ekNDQVVpZ0F3SUJBZ0lSQUp1UTVrL2dQcjIxSmxZcm9PRlhWdnd3Q2dZSUtvWkl6ajBFQXdNd0lqRWcKTUI0R0ExVUVBeE1YWTJWeWRDMXRZVzVoWjJWeUxYZGxZbWh2YjJzdFkyRXdIaGNOTWpFeE1qQTBNVGN3TkRJNQpXaGNOTWpJeE1qQTBNVGN3TkRJNVdqQWlNU0F3SGdZRFZRUURFeGRqWlhKMExXMWhibUZuWlhJdGQyVmlhRzl2CmF5MWpZVEIyTUJBR0J5cUdTTTQ5QWdFR0JTdUJCQUFpQTJJQUJNeXNkL090dkRqYVZ6ZXBvMXhabks5aVRsOVAKeHZ3L3ljZkg0UU80VHozSFhPT3A3U1p4WjhsWlA4WHFuZGpWdnl6dm9ka0hxMFUrbjdySjQ5aEt2aEtWRS81SQphdjRtM2NBZ1NFUVh4aXh0NmFaWDc2cXkydmNMMmZQTnpWK1NFNk5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trCk1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZOQ014dTNWSmJTV1VNbzJXYUg2SEV2a0prTjkKTUFvR0NDcUdTTTQ5QkFNREEya0FNR1lDTVFDZ2JkUVBiZ2s1K2J2UjEyZ1l6VVQwSlJLeG1WRHRBeXRwWVN2ZQpjQXc0TVBXNFNjN0ptbjEyNHg5cG0rUTJvTE1DTVFDUnc4RDBpWnVCV1RnVE5OT2htVEh1MklRVXBJaFNtR3REClg4ZW5aZ1FmdEVBTVJzaHQwVUl6bXVlWmVSTlhUd0E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
          service:
            name: cert-manager-cert-manager-webhook
            namespace: cert-manager
            path: /convert
            port: 443
        conversionReviewVersions:
        - v1
        - v1beta1
    group: acme.cert-manager.io
    names:
      categories:
      - cert-manager
      - cert-manager-acme
      kind: Order
      listKind: OrderList
      plural: orders
      singular: order
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.state
        name: State
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        priority: 1
        type: string
      - jsonPath: .status.reason
        name: Reason
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: Order is a type to represent an Order with an ACME server
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                commonName:
                  description: CommonName is the common name as specified on the DER
                    encoded CSR. If specified, this value must also be present in
                    `dnsNames` or `ipAddresses`. This field must match the corresponding
                    field on the DER encoded CSR.
                  type: string
                csr:
                  description: Certificate signing request bytes in DER encoding.
                    This will be used when finalizing the order. This field must be
                    set on the order.
                  format: byte
                  type: string
                dnsNames:
                  description: DNSNames is a list of DNS names that should be included
                    as part of the Order validation process. This field must match
                    the corresponding field on the DER encoded CSR.
                  items:
                    type: string
                  type: array
                duration:
                  description: Duration is the duration for the not after date for
                    the requested certificate. this is set on order creation as pe
                    the ACME spec.
                  type: string
                ipAddresses:
                  description: IPAddresses is a list of IP addresses that should be
                    included as part of the Order validation process. This field must
                    match the corresponding field on the DER encoded CSR.
                  items:
                    type: string
                  type: array
                issuerRef:
                  description: IssuerRef references a properly configured ACME-type
                    Issuer which should be used to create this Order. If the Issuer
                    does not exist, processing will be retried. If the Issuer is not
                    an 'ACME' Issuer, an error will be returned and the Order will
                    be marked as failed.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
              required:
              - csr
              - issuerRef
              type: object
            status:
              properties:
                authorizations:
                  description: Authorizations contains data returned from the ACME
                    server on what authorizations must be completed in order to validate
                    the DNS names specified on the Order.
                  items:
                    description: ACMEAuthorization contains data returned from the
                      ACME server on an authorization that must be completed in order
                      validate a DNS name on an ACME Order resource.
                    properties:
                      challenges:
                        description: Challenges specifies the challenge types offered
                          by the ACME server. One of these challenge types will be
                          selected when validating the DNS name and an appropriate
                          Challenge resource will be created to perform the ACME challenge
                          process.
                        items:
                          description: Challenge specifies a challenge offered by
                            the ACME server for an Order. An appropriate Challenge
                            resource can be created to perform the ACME challenge
                            process.
                          properties:
                            token:
                              description: Token is the token that must be presented
                                for this challenge. This is used to compute the 'key'
                                that must also be presented.
                              type: string
                            type:
                              description: Type is the type of challenge being offered,
                                e.g. 'http-01', 'dns-01', 'tls-sni-01', etc. This
                                is the raw value retrieved from the ACME server. Only
                                'http-01' and 'dns-01' are supported by cert-manager,
                                other values will be ignored.
                              type: string
                            url:
                              description: URL is the URL of this challenge. It can
                                be used to retrieve additional metadata about the
                                Challenge from the ACME server.
                              type: string
                          required:
                          - token
                          - type
                          - url
                          type: object
                        type: array
                      identifier:
                        description: Identifier is the DNS name to be validated as
                          part of this authorization
                        type: string
                      initialState:
                        description: InitialState is the initial state of the ACME
                          authorization when first fetched from the ACME server. If
                          an Authorization is already 'valid', the Order controller
                          will not create a Challenge resource for the authorization.
                          This will occur when working with an ACME server that enables
                          'authz reuse' (such as Let's Encrypt's production endpoint).
                          If not set and 'identifier' is set, the state is assumed
                          to be pending and a Challenge will be created.
                        enum:
                        - valid
                        - ready
                        - pending
                        - processing
                        - invalid
                        - expired
                        - errored
                        type: string
                      url:
                        description: URL is the URL of the Authorization that must
                          be completed
                        type: string
                      wildcard:
                        description: Wildcard will be true if this authorization is
                          for a wildcard DNS name. If this is true, the identifier
                          will be the *non-wildcard* version of the DNS name. For
                          example, if '*.example.com' is the DNS name being validated,
                          this field will be 'true' and the 'identifier' field will
                          be 'example.com'.
                        type: boolean
                    required:
                    - url
                    type: object
                  type: array
                certificate:
                  description: Certificate is a copy of the PEM encoded certificate
                    for this Order. This field will be populated after the order has
                    been successfully finalized with the ACME server, and the order
                    has transitioned to the 'valid' state.
                  format: byte
                  type: string
                failureTime:
                  description: FailureTime stores the time that this order failed.
                    This is used to influence garbage collection and back-off.
                  format: date-time
                  type: string
                finalizeURL:
                  description: FinalizeURL of the Order. This is used to obtain certificates
                    for this order once it has been completed.
                  type: string
                reason:
                  description: Reason optionally provides more information about a
                    why the order is in the current state.
                  type: string
                state:
                  description: State contains the current state of this Order resource.
                    States 'success' and 'expired' are 'final'
                  enum:
                  - valid
                  - ready
                  - pending
                  - processing
                  - invalid
                  - expired
                  - errored
                  type: string
                url:
                  description: URL of the Order. This will initially be empty when
                    the resource is first created. The Order controller will populate
                    this field when the Order is first processed. This field will
                    be immutable after it is initially set.
                  type: string
              type: object
          required:
          - metadata
          type: object
      served: false
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.state
        name: State
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        priority: 1
        type: string
      - jsonPath: .status.reason
        name: Reason
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha3
      schema:
        openAPIV3Schema:
          description: Order is a type to represent an Order with an ACME server
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                commonName:
                  description: CommonName is the common name as specified on the DER
                    encoded CSR. If specified, this value must also be present in
                    `dnsNames` or `ipAddresses`. This field must match the corresponding
                    field on the DER encoded CSR.
                  type: string
                csr:
                  description: Certificate signing request bytes in DER encoding.
                    This will be used when finalizing the order. This field must be
                    set on the order.
                  format: byte
                  type: string
                dnsNames:
                  description: DNSNames is a list of DNS names that should be included
                    as part of the Order validation process. This field must match
                    the corresponding field on the DER encoded CSR.
                  items:
                    type: string
                  type: array
                duration:
                  description: Duration is the duration for the not after date for
                    the requested certificate. this is set on order creation as pe
                    the ACME spec.
                  type: string
                ipAddresses:
                  description: IPAddresses is a list of IP addresses that should be
                    included as part of the Order validation process. This field must
                    match the corresponding field on the DER encoded CSR.
                  items:
                    type: string
                  type: array
                issuerRef:
                  description: IssuerRef references a properly configured ACME-type
                    Issuer which should be used to create this Order. If the Issuer
                    does not exist, processing will be retried. If the Issuer is not
                    an 'ACME' Issuer, an error will be returned and the Order will
                    be marked as failed.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
              required:
              - csr
              - issuerRef
              type: object
            status:
              properties:
                authorizations:
                  description: Authorizations contains data returned from the ACME
                    server on what authorizations must be completed in order to validate
                    the DNS names specified on the Order.
                  items:
                    description: ACMEAuthorization contains data returned from the
                      ACME server on an authorization that must be completed in order
                      validate a DNS name on an ACME Order resource.
                    properties:
                      challenges:
                        description: Challenges specifies the challenge types offered
                          by the ACME server. One of these challenge types will be
                          selected when validating the DNS name and an appropriate
                          Challenge resource will be created to perform the ACME challenge
                          process.
                        items:
                          description: Challenge specifies a challenge offered by
                            the ACME server for an Order. An appropriate Challenge
                            resource can be created to perform the ACME challenge
                            process.
                          properties:
                            token:
                              description: Token is the token that must be presented
                                for this challenge. This is used to compute the 'key'
                                that must also be presented.
                              type: string
                            type:
                              description: Type is the type of challenge being offered,
                                e.g. 'http-01', 'dns-01', 'tls-sni-01', etc. This
                                is the raw value retrieved from the ACME server. Only
                                'http-01' and 'dns-01' are supported by cert-manager,
                                other values will be ignored.
                              type: string
                            url:
                              description: URL is the URL of this challenge. It can
                                be used to retrieve additional metadata about the
                                Challenge from the ACME server.
                              type: string
                          required:
                          - token
                          - type
                          - url
                          type: object
                        type: array
                      identifier:
                        description: Identifier is the DNS name to be validated as
                          part of this authorization
                        type: string
                      initialState:
                        description: InitialState is the initial state of the ACME
                          authorization when first fetched from the ACME server. If
                          an Authorization is already 'valid', the Order controller
                          will not create a Challenge resource for the authorization.
                          This will occur when working with an ACME server that enables
                          'authz reuse' (such as Let's Encrypt's production endpoint).
                          If not set and 'identifier' is set, the state is assumed
                          to be pending and a Challenge will be created.
                        enum:
                        - valid
                        - ready
                        - pending
                        - processing
                        - invalid
                        - expired
                        - errored
                        type: string
                      url:
                        description: URL is the URL of the Authorization that must
                          be completed
                        type: string
                      wildcard:
                        description: Wildcard will be true if this authorization is
                          for a wildcard DNS name. If this is true, the identifier
                          will be the *non-wildcard* version of the DNS name. For
                          example, if '*.example.com' is the DNS name being validated,
                          this field will be 'true' and the 'identifier' field will
                          be 'example.com'.
                        type: boolean
                    required:
                    - url
                    type: object
                  type: array
                certificate:
                  description: Certificate is a copy of the PEM encoded certificate
                    for this Order. This field will be populated after the order has
                    been successfully finalized with the ACME server, and the order
                    has transitioned to the 'valid' state.
                  format: byte
                  type: string
                failureTime:
                  description: FailureTime stores the time that this order failed.
                    This is used to influence garbage collection and back-off.
                  format: date-time
                  type: string
                finalizeURL:
                  description: FinalizeURL of the Order. This is used to obtain certificates
                    for this order once it has been completed.
                  type: string
                reason:
                  description: Reason optionally provides more information about a
                    why the order is in the current state.
                  type: string
                state:
                  description: State contains the current state of this Order resource.
                    States 'success' and 'expired' are 'final'
                  enum:
                  - valid
                  - ready
                  - pending
                  - processing
                  - invalid
                  - expired
                  - errored
                  type: string
                url:
                  description: URL of the Order. This will initially be empty when
                    the resource is first created. The Order controller will populate
                    this field when the Order is first processed. This field will
                    be immutable after it is initially set.
                  type: string
              type: object
          required:
          - metadata
          type: object
      served: false
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.state
        name: State
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        priority: 1
        type: string
      - jsonPath: .status.reason
        name: Reason
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Order is a type to represent an Order with an ACME server
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                commonName:
                  description: CommonName is the common name as specified on the DER
                    encoded CSR. If specified, this value must also be present in
                    `dnsNames` or `ipAddresses`. This field must match the corresponding
                    field on the DER encoded CSR.
                  type: string
                dnsNames:
                  description: DNSNames is a list of DNS names that should be included
                    as part of the Order validation process. This field must match
                    the corresponding field on the DER encoded CSR.
                  items:
                    type: string
                  type: array
                duration:
                  description: Duration is the duration for the not after date for
                    the requested certificate. this is set on order creation as pe
                    the ACME spec.
                  type: string
                ipAddresses:
                  description: IPAddresses is a list of IP addresses that should be
                    included as part of the Order validation process. This field must
                    match the corresponding field on the DER encoded CSR.
                  items:
                    type: string
                  type: array
                issuerRef:
                  description: IssuerRef references a properly configured ACME-type
                    Issuer which should be used to create this Order. If the Issuer
                    does not exist, processing will be retried. If the Issuer is not
                    an 'ACME' Issuer, an error will be returned and the Order will
                    be marked as failed.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                request:
                  description: Certificate signing request bytes in DER encoding.
                    This will be used when finalizing the order. This field must be
                    set on the order.
                  format: byte
                  type: string
              required:
              - issuerRef
              - request
              type: object
            status:
              properties:
                authorizations:
                  description: Authorizations contains data returned from the ACME
                    server on what authorizations must be completed in order to validate
                    the DNS names specified on the Order.
                  items:
                    description: ACMEAuthorization contains data returned from the
                      ACME server on an authorization that must be completed in order
                      validate a DNS name on an ACME Order resource.
                    properties:
                      challenges:
                        description: Challenges specifies the challenge types offered
                          by the ACME server. One of these challenge types will be
                          selected when validating the DNS name and an appropriate
                          Challenge resource will be created to perform the ACME challenge
                          process.
                        items:
                          description: Challenge specifies a challenge offered by
                            the ACME server for an Order. An appropriate Challenge
                            resource can be created to perform the ACME challenge
                            process.
                          properties:
                            token:
                              description: Token is the token that must be presented
                                for this challenge. This is used to compute the 'key'
                                that must also be presented.
                              type: string
                            type:
                              description: Type is the type of challenge being offered,
                                e.g. 'http-01', 'dns-01', 'tls-sni-01', etc. This
                                is the raw value retrieved from the ACME server. Only
                                'http-01' and 'dns-01' are supported by cert-manager,
                                other values will be ignored.
                              type: string
                            url:
                              description: URL is the URL of this challenge. It can
                                be used to retrieve additional metadata about the
                                Challenge from the ACME server.
                              type: string
                          required:
                          - token
                          - type
                          - url
                          type: object
                        type: array
                      identifier:
                        description: Identifier is the DNS name to be validated as
                          part of this authorization
                        type: string
                      initialState:
                        description: InitialState is the initial state of the ACME
                          authorization when first fetched from the ACME server. If
                          an Authorization is already 'valid', the Order controller
                          will not create a Challenge resource for the authorization.
                          This will occur when working with an ACME server that enables
                          'authz reuse' (such as Let's Encrypt's production endpoint).
                          If not set and 'identifier' is set, the state is assumed
                          to be pending and a Challenge will be created.
                        enum:
                        - valid
                        - ready
                        - pending
                        - processing
                        - invalid
                        - expired
                        - errored
                        type: string
                      url:
                        description: URL is the URL of the Authorization that must
                          be completed
                        type: string
                      wildcard:
                        description: Wildcard will be true if this authorization is
                          for a wildcard DNS name. If this is true, the identifier
                          will be the *non-wildcard* version of the DNS name. For
                          example, if '*.example.com' is the DNS name being validated,
                          this field will be 'true' and the 'identifier' field will
                          be 'example.com'.
                        type: boolean
                    required:
                    - url
                    type: object
                  type: array
                certificate:
                  description: Certificate is a copy of the PEM encoded certificate
                    for this Order. This field will be populated after the order has
                    been successfully finalized with the ACME server, and the order
                    has transitioned to the 'valid' state.
                  format: byte
                  type: string
                failureTime:
                  description: FailureTime stores the time that this order failed.
                    This is used to influence garbage collection and back-off.
                  format: date-time
                  type: string
                finalizeURL:
                  description: FinalizeURL of the Order. This is used to obtain certificates
                    for this order once it has been completed.
                  type: string
                reason:
                  description: Reason optionally provides more information about a
                    why the order is in the current state.
                  type: string
                state:
                  description: State contains the current state of this Order resource.
                    States 'success' and 'expired' are 'final'
                  enum:
                  - valid
                  - ready
                  - pending
                  - processing
                  - invalid
                  - expired
                  - errored
                  type: string
                url:
                  description: URL of the Order. This will initially be empty when
                    the resource is first created. The Order controller will populate
                    this field when the Order is first processed. This field will
                    be immutable after it is initially set.
                  type: string
              type: object
          required:
          - metadata
          - spec
          type: object
      served: false
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.state
        name: State
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        priority: 1
        type: string
      - jsonPath: .status.reason
        name: Reason
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: Order is a type to represent an Order with an ACME server
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                commonName:
                  description: CommonName is the common name as specified on the DER
                    encoded CSR. If specified, this value must also be present in
                    `dnsNames` or `ipAddresses`. This field must match the corresponding
                    field on the DER encoded CSR.
                  type: string
                dnsNames:
                  description: DNSNames is a list of DNS names that should be included
                    as part of the Order validation process. This field must match
                    the corresponding field on the DER encoded CSR.
                  items:
                    type: string
                  type: array
                duration:
                  description: Duration is the duration for the not after date for
                    the requested certificate. this is set on order creation as pe
                    the ACME spec.
                  type: string
                ipAddresses:
                  description: IPAddresses is a list of IP addresses that should be
                    included as part of the Order validation process. This field must
                    match the corresponding field on the DER encoded CSR.
                  items:
                    type: string
                  type: array
                issuerRef:
                  description: IssuerRef references a properly configured ACME-type
                    Issuer which should be used to create this Order. If the Issuer
                    does not exist, processing will be retried. If the Issuer is not
                    an 'ACME' Issuer, an error will be returned and the Order will
                    be marked as failed.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                  - name
                  type: object
                request:
                  description: Certificate signing request bytes in DER encoding.
                    This will be used when finalizing the order. This field must be
                    set on the order.
                  format: byte
                  type: string
              required:
              - issuerRef
              - request
              type: object
            status:
              properties:
                authorizations:
                  description: Authorizations contains data returned from the ACME
                    server on what authorizations must be completed in order to validate
                    the DNS names specified on the Order.
                  items:
                    description: ACMEAuthorization contains data returned from the
                      ACME server on an authorization that must be completed in order
                      validate a DNS name on an ACME Order resource.
                    properties:
                      challenges:
                        description: Challenges specifies the challenge types offered
                          by the ACME server. One of these challenge types will be
                          selected when validating the DNS name and an appropriate
                          Challenge resource will be created to perform the ACME challenge
                          process.
                        items:
                          description: Challenge specifies a challenge offered by
                            the ACME server for an Order. An appropriate Challenge
                            resource can be created to perform the ACME challenge
                            process.
                          properties:
                            token:
                              description: Token is the token that must be presented
                                for this challenge. This is used to compute the 'key'
                                that must also be presented.
                              type: string
                            type:
                              description: Type is the type of challenge being offered,
                                e.g. 'http-01', 'dns-01', 'tls-sni-01', etc. This
                                is the raw value retrieved from the ACME server. Only
                                'http-01' and 'dns-01' are supported by cert-manager,
                                other values will be ignored.
                              type: string
                            url:
                              description: URL is the URL of this challenge. It can
                                be used to retrieve additional metadata about the
                                Challenge from the ACME server.
                              type: string
                          required:
                          - token
                          - type
                          - url
                          type: object
                        type: array
                      identifier:
                        description: Identifier is the DNS name to be validated as
                          part of this authorization
                        type: string
                      initialState:
                        description: InitialState is the initial state of the ACME
                          authorization when first fetched from the ACME server. If
                          an Authorization is already 'valid', the Order controller
                          will not create a Challenge resource for the authorization.
                          This will occur when working with an ACME server that enables
                          'authz reuse' (such as Let's Encrypt's production endpoint).
                          If not set and 'identifier' is set, the state is assumed
                          to be pending and a Challenge will be created.
                        enum:
                        - valid
                        - ready
                        - pending
                        - processing
                        - invalid
                        - expired
                        - errored
                        type: string
                      url:
                        description: URL is the URL of the Authorization that must
                          be completed
                        type: string
                      wildcard:
                        description: Wildcard will be true if this authorization is
                          for a wildcard DNS name. If this is true, the identifier
                          will be the *non-wildcard* version of the DNS name. For
                          example, if '*.example.com' is the DNS name being validated,
                          this field will be 'true' and the 'identifier' field will
                          be 'example.com'.
                        type: boolean
                    required:
                    - url
                    type: object
                  type: array
                certificate:
                  description: Certificate is a copy of the PEM encoded certificate
                    for this Order. This field will be populated after the order has
                    been successfully finalized with the ACME server, and the order
                    has transitioned to the 'valid' state.
                  format: byte
                  type: string
                failureTime:
                  description: FailureTime stores the time that this order failed.
                    This is used to influence garbage collection and back-off.
                  format: date-time
                  type: string
                finalizeURL:
                  description: FinalizeURL of the Order. This is used to obtain certificates
                    for this order once it has been completed.
                  type: string
                reason:
                  description: Reason optionally provides more information about a
                    why the order is in the current state.
                  type: string
                state:
                  description: State contains the current state of this Order resource.
                    States 'success' and 'expired' are 'final'
                  enum:
                  - valid
                  - ready
                  - pending
                  - processing
                  - invalid
                  - expired
                  - errored
                  type: string
                url:
                  description: URL of the Order. This will initially be empty when
                    the resource is first created. The Order controller will populate
                    this field when the Order is first processed. This field will
                    be immutable after it is initially set.
                  type: string
              type: object
          required:
          - metadata
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - cert-manager
      - cert-manager-acme
      kind: Order
      listKind: OrderList
      plural: orders
      singular: order
    conditions:
    - lastTransitionTime: "2021-12-04T17:04:20Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-04T17:04:20Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2021-12-16T17:27:05Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-pipelines
      kustomize.toolkit.fluxcd.io/name: tekton
      kustomize.toolkit.fluxcd.io/namespace: flux-system
      pipeline.tekton.dev/release: v0.31.0
      version: v0.31.0
    name: pipelineresources.tekton.dev
    resourceVersion: "10150273"
    uid: b444b2cb-82d5-493c-9e28-e001ca55c6ba
  spec:
    conversion:
      strategy: None
    group: tekton.dev
    names:
      categories:
      - tekton
      - tekton-pipelines
      kind: PipelineResource
      listKind: PipelineResourceList
      plural: pipelineresources
      singular: pipelineresource
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - tekton
      - tekton-pipelines
      kind: PipelineResource
      listKind: PipelineResourceList
      plural: pipelineresources
      singular: pipelineresource
    conditions:
    - lastTransitionTime: "2021-12-16T17:27:05Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-16T17:27:05Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2021-12-16T17:27:05Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-pipelines
      kustomize.toolkit.fluxcd.io/name: tekton
      kustomize.toolkit.fluxcd.io/namespace: flux-system
      pipeline.tekton.dev/release: v0.31.0
      version: v0.31.0
    name: pipelineruns.tekton.dev
    resourceVersion: "10150587"
    uid: 8d50810f-9681-41a3-ab8c-6eeb58e66980
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN2akNDQW1TZ0F3SUJBZ0lRUHpDT3RaZjF1dk1VcmUwTnhmd0lMREFLQmdncWhrak9QUVFEQWpCT01SUXcKRWdZRFZRUUtFd3RyYm1GMGFYWmxMbVJsZGpFMk1EUUdBMVVFQXhNdGRHVnJkRzl1TFhCcGNHVnNhVzVsY3kxMwpaV0pvYjI5ckxuUmxhM1J2Ymkxd2FYQmxiR2x1WlhNdWMzWmpNQjRYRFRJeE1USXhOakUzTWpjeE9Gb1hEVEl4Ck1USXlNekUzTWpjeE9Gb3dUakVVTUJJR0ExVUVDaE1MYTI1aGRHbDJaUzVrWlhZeE5qQTBCZ05WQkFNVExYUmwKYTNSdmJpMXdhWEJsYkdsdVpYTXRkMlZpYUc5dmF5NTBaV3QwYjI0dGNHbHdaV3hwYm1WekxuTjJZekJaTUJNRwpCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkpiOGV4WnJ6ZUFNeFJvRzhvV2RlWVRSb0g1K0l6L2NITFpNClJ0M0d4MlE3VlU0ZXpKc01sZCtwQ2tiQWhlb09naW5pV2daWU51Q3lGTThNdG51Y3YrYWpnZ0VpTUlJQkhqQU8KQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUE4RwpBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZMRENaRHU1V08xaisyY0FYaE1KRWJmdENMd3pNSUc4CkJnTlZIUkVFZ2JRd2diR0NHSFJsYTNSdmJpMXdhWEJsYkdsdVpYTXRkMlZpYUc5dmE0SXBkR1ZyZEc5dUxYQnAKY0dWc2FXNWxjeTEzWldKb2IyOXJMblJsYTNSdmJpMXdhWEJsYkdsdVpYT0NMWFJsYTNSdmJpMXdhWEJsYkdsdQpaWE10ZDJWaWFHOXZheTUwWld0MGIyNHRjR2x3Wld4cGJtVnpMbk4yWTRJN2RHVnJkRzl1TFhCcGNHVnNhVzVsCmN5MTNaV0pvYjI5ckxuUmxhM1J2Ymkxd2FYQmxiR2x1WlhNdWMzWmpMbU5zZFhOMFpYSXViRzlqWVd3d0NnWUkKS29aSXpqMEVBd0lEU0FBd1JRSWhBUGsyUXppMFowM2RJaFlXS2VNSTE5c1RkVzRNb2t1UU82dDFCZjZnYm5HeQpBaUFmWlN4VytuOGtvdE9SMjRJWVlDZEdhSi9wMTRRdWg5Vld2QUllaDZnb3FBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          service:
            name: tekton-pipelines-webhook
            namespace: tekton-pipelines
            path: /resource-conversion
            port: 443
        conversionReviewVersions:
        - v1beta1
    group: tekton.dev
    names:
      categories:
      - tekton
      - tekton-pipelines
      kind: PipelineRun
      listKind: PipelineRunList
      plural: pipelineruns
      shortNames:
      - pr
      - prs
      singular: pipelinerun
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Succeeded")].status
        name: Succeeded
        type: string
      - jsonPath: .status.conditions[?(@.type=="Succeeded")].reason
        name: Reason
        type: string
      - jsonPath: .status.startTime
        name: StartTime
        type: date
      - jsonPath: .status.completionTime
        name: CompletionTime
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Succeeded")].status
        name: Succeeded
        type: string
      - jsonPath: .status.conditions[?(@.type=="Succeeded")].reason
        name: Reason
        type: string
      - jsonPath: .status.startTime
        name: StartTime
        type: date
      - jsonPath: .status.completionTime
        name: CompletionTime
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - tekton
      - tekton-pipelines
      kind: PipelineRun
      listKind: PipelineRunList
      plural: pipelineruns
      shortNames:
      - pr
      - prs
      singular: pipelinerun
    conditions:
    - lastTransitionTime: "2021-12-16T17:27:05Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-16T17:27:05Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2021-12-16T17:27:05Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-pipelines
      kustomize.toolkit.fluxcd.io/name: tekton
      kustomize.toolkit.fluxcd.io/namespace: flux-system
      pipeline.tekton.dev/release: v0.31.0
      version: v0.31.0
    name: pipelines.tekton.dev
    resourceVersion: "10150595"
    uid: 25c58cc1-e550-4329-9176-c1c6cfac1cf9
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN2akNDQW1TZ0F3SUJBZ0lRUHpDT3RaZjF1dk1VcmUwTnhmd0lMREFLQmdncWhrak9QUVFEQWpCT01SUXcKRWdZRFZRUUtFd3RyYm1GMGFYWmxMbVJsZGpFMk1EUUdBMVVFQXhNdGRHVnJkRzl1TFhCcGNHVnNhVzVsY3kxMwpaV0pvYjI5ckxuUmxhM1J2Ymkxd2FYQmxiR2x1WlhNdWMzWmpNQjRYRFRJeE1USXhOakUzTWpjeE9Gb1hEVEl4Ck1USXlNekUzTWpjeE9Gb3dUakVVTUJJR0ExVUVDaE1MYTI1aGRHbDJaUzVrWlhZeE5qQTBCZ05WQkFNVExYUmwKYTNSdmJpMXdhWEJsYkdsdVpYTXRkMlZpYUc5dmF5NTBaV3QwYjI0dGNHbHdaV3hwYm1WekxuTjJZekJaTUJNRwpCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkpiOGV4WnJ6ZUFNeFJvRzhvV2RlWVRSb0g1K0l6L2NITFpNClJ0M0d4MlE3VlU0ZXpKc01sZCtwQ2tiQWhlb09naW5pV2daWU51Q3lGTThNdG51Y3YrYWpnZ0VpTUlJQkhqQU8KQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUE4RwpBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZMRENaRHU1V08xaisyY0FYaE1KRWJmdENMd3pNSUc4CkJnTlZIUkVFZ2JRd2diR0NHSFJsYTNSdmJpMXdhWEJsYkdsdVpYTXRkMlZpYUc5dmE0SXBkR1ZyZEc5dUxYQnAKY0dWc2FXNWxjeTEzWldKb2IyOXJMblJsYTNSdmJpMXdhWEJsYkdsdVpYT0NMWFJsYTNSdmJpMXdhWEJsYkdsdQpaWE10ZDJWaWFHOXZheTUwWld0MGIyNHRjR2x3Wld4cGJtVnpMbk4yWTRJN2RHVnJkRzl1TFhCcGNHVnNhVzVsCmN5MTNaV0pvYjI5ckxuUmxhM1J2Ymkxd2FYQmxiR2x1WlhNdWMzWmpMbU5zZFhOMFpYSXViRzlqWVd3d0NnWUkKS29aSXpqMEVBd0lEU0FBd1JRSWhBUGsyUXppMFowM2RJaFlXS2VNSTE5c1RkVzRNb2t1UU82dDFCZjZnYm5HeQpBaUFmWlN4VytuOGtvdE9SMjRJWVlDZEdhSi9wMTRRdWg5Vld2QUllaDZnb3FBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          service:
            name: tekton-pipelines-webhook
            namespace: tekton-pipelines
            path: /resource-conversion
            port: 443
        conversionReviewVersions:
        - v1beta1
    group: tekton.dev
    names:
      categories:
      - tekton
      - tekton-pipelines
      kind: Pipeline
      listKind: PipelineList
      plural: pipelines
      singular: pipeline
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: false
      subresources:
        status: {}
    - name: v1beta1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - tekton
      - tekton-pipelines
      kind: Pipeline
      listKind: PipelineList
      plural: pipelines
      singular: pipeline
    conditions:
    - lastTransitionTime: "2021-12-16T17:27:05Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-16T17:27:06Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2021-12-16T17:27:05Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-pipelines
      kustomize.toolkit.fluxcd.io/name: tekton
      kustomize.toolkit.fluxcd.io/namespace: flux-system
      pipeline.tekton.dev/release: v0.31.0
      version: v0.31.0
    name: runs.tekton.dev
    resourceVersion: "10150302"
    uid: 962d37bd-542c-4cf6-8fdd-02587ef9f097
  spec:
    conversion:
      strategy: None
    group: tekton.dev
    names:
      categories:
      - tekton
      - tekton-pipelines
      kind: Run
      listKind: RunList
      plural: runs
      singular: run
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Succeeded")].status
        name: Succeeded
        type: string
      - jsonPath: .status.conditions[?(@.type=="Succeeded")].reason
        name: Reason
        type: string
      - jsonPath: .status.startTime
        name: StartTime
        type: date
      - jsonPath: .status.completionTime
        name: CompletionTime
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - tekton
      - tekton-pipelines
      kind: Run
      listKind: RunList
      plural: runs
      singular: run
    conditions:
    - lastTransitionTime: "2021-12-16T17:27:05Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-16T17:27:06Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.4.1
    creationTimestamp: "2021-12-07T18:20:13Z"
    generation: 1
    name: serverstransports.traefik.containo.us
    resourceVersion: "2639739"
    uid: a189ba5e-3f3a-466b-9108-e5879f94858a
  spec:
    conversion:
      strategy: None
    group: traefik.containo.us
    names:
      kind: ServersTransport
      listKind: ServersTransportList
      plural: serverstransports
      singular: serverstransport
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ServersTransport is a specification for a ServersTransport
            resource.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ServersTransportSpec options to configure communication
                between Traefik and the servers.
              properties:
                certificatesSecrets:
                  description: Certificates for mTLS.
                  items:
                    type: string
                  type: array
                disableHTTP2:
                  description: Disable HTTP/2 for connections with backend servers.
                  type: boolean
                forwardingTimeouts:
                  description: Timeouts for requests forwarded to the backend servers.
                  properties:
                    dialTimeout:
                      anyOf:
                      - type: integer
                      - type: string
                      description: The amount of time to wait until a connection to
                        a backend server can be established. If zero, no timeout exists.
                      x-kubernetes-int-or-string: true
                    idleConnTimeout:
                      anyOf:
                      - type: integer
                      - type: string
                      description: The maximum period for which an idle HTTP keep-alive
                        connection will remain open before closing itself.
                      x-kubernetes-int-or-string: true
                    responseHeaderTimeout:
                      anyOf:
                      - type: integer
                      - type: string
                      description: The amount of time to wait for a server's response
                        headers after fully writing the request (including its body,
                        if any). If zero, no timeout exists.
                      x-kubernetes-int-or-string: true
                  type: object
                insecureSkipVerify:
                  description: Disable SSL certificate verification.
                  type: boolean
                maxIdleConnsPerHost:
                  description: If non-zero, controls the maximum idle (keep-alive)
                    to keep per-host. If zero, DefaultMaxIdleConnsPerHost is used.
                  type: integer
                peerCertURI:
                  description: Defines the URI used to match against SAN URIs during
                    the server's certificate verification.
                  type: string
                rootCAsSecrets:
                  description: Add cert file for self-signed certificate.
                  items:
                    type: string
                  type: array
                serverName:
                  description: ServerName used to contact the server.
                  type: string
              type: object
          required:
          - metadata
          - spec
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: ServersTransport
      listKind: ServersTransportList
      plural: serverstransports
      singular: serverstransport
    conditions:
    - lastTransitionTime: "2021-12-07T18:20:13Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-07T18:20:14Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2021-12-16T17:27:05Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-pipelines
      kustomize.toolkit.fluxcd.io/name: tekton
      kustomize.toolkit.fluxcd.io/namespace: flux-system
      pipeline.tekton.dev/release: v0.31.0
      version: v0.31.0
    name: taskruns.tekton.dev
    resourceVersion: "10150594"
    uid: 8bdcf54d-d53d-4ebd-9c10-1667bd812093
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN2akNDQW1TZ0F3SUJBZ0lRUHpDT3RaZjF1dk1VcmUwTnhmd0lMREFLQmdncWhrak9QUVFEQWpCT01SUXcKRWdZRFZRUUtFd3RyYm1GMGFYWmxMbVJsZGpFMk1EUUdBMVVFQXhNdGRHVnJkRzl1TFhCcGNHVnNhVzVsY3kxMwpaV0pvYjI5ckxuUmxhM1J2Ymkxd2FYQmxiR2x1WlhNdWMzWmpNQjRYRFRJeE1USXhOakUzTWpjeE9Gb1hEVEl4Ck1USXlNekUzTWpjeE9Gb3dUakVVTUJJR0ExVUVDaE1MYTI1aGRHbDJaUzVrWlhZeE5qQTBCZ05WQkFNVExYUmwKYTNSdmJpMXdhWEJsYkdsdVpYTXRkMlZpYUc5dmF5NTBaV3QwYjI0dGNHbHdaV3hwYm1WekxuTjJZekJaTUJNRwpCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkpiOGV4WnJ6ZUFNeFJvRzhvV2RlWVRSb0g1K0l6L2NITFpNClJ0M0d4MlE3VlU0ZXpKc01sZCtwQ2tiQWhlb09naW5pV2daWU51Q3lGTThNdG51Y3YrYWpnZ0VpTUlJQkhqQU8KQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUE4RwpBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZMRENaRHU1V08xaisyY0FYaE1KRWJmdENMd3pNSUc4CkJnTlZIUkVFZ2JRd2diR0NHSFJsYTNSdmJpMXdhWEJsYkdsdVpYTXRkMlZpYUc5dmE0SXBkR1ZyZEc5dUxYQnAKY0dWc2FXNWxjeTEzWldKb2IyOXJMblJsYTNSdmJpMXdhWEJsYkdsdVpYT0NMWFJsYTNSdmJpMXdhWEJsYkdsdQpaWE10ZDJWaWFHOXZheTUwWld0MGIyNHRjR2x3Wld4cGJtVnpMbk4yWTRJN2RHVnJkRzl1TFhCcGNHVnNhVzVsCmN5MTNaV0pvYjI5ckxuUmxhM1J2Ymkxd2FYQmxiR2x1WlhNdWMzWmpMbU5zZFhOMFpYSXViRzlqWVd3d0NnWUkKS29aSXpqMEVBd0lEU0FBd1JRSWhBUGsyUXppMFowM2RJaFlXS2VNSTE5c1RkVzRNb2t1UU82dDFCZjZnYm5HeQpBaUFmWlN4VytuOGtvdE9SMjRJWVlDZEdhSi9wMTRRdWg5Vld2QUllaDZnb3FBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          service:
            name: tekton-pipelines-webhook
            namespace: tekton-pipelines
            path: /resource-conversion
            port: 443
        conversionReviewVersions:
        - v1beta1
    group: tekton.dev
    names:
      categories:
      - tekton
      - tekton-pipelines
      kind: TaskRun
      listKind: TaskRunList
      plural: taskruns
      shortNames:
      - tr
      - trs
      singular: taskrun
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Succeeded")].status
        name: Succeeded
        type: string
      - jsonPath: .status.conditions[?(@.type=="Succeeded")].reason
        name: Reason
        type: string
      - jsonPath: .status.startTime
        name: StartTime
        type: date
      - jsonPath: .status.completionTime
        name: CompletionTime
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Succeeded")].status
        name: Succeeded
        type: string
      - jsonPath: .status.conditions[?(@.type=="Succeeded")].reason
        name: Reason
        type: string
      - jsonPath: .status.startTime
        name: StartTime
        type: date
      - jsonPath: .status.completionTime
        name: CompletionTime
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - tekton
      - tekton-pipelines
      kind: TaskRun
      listKind: TaskRunList
      plural: taskruns
      shortNames:
      - tr
      - trs
      singular: taskrun
    conditions:
    - lastTransitionTime: "2021-12-16T17:27:05Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-16T17:27:07Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2021-12-16T17:27:05Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-pipelines
      kustomize.toolkit.fluxcd.io/name: tekton
      kustomize.toolkit.fluxcd.io/namespace: flux-system
      pipeline.tekton.dev/release: v0.31.0
      version: v0.31.0
    name: tasks.tekton.dev
    resourceVersion: "10150588"
    uid: beacd4c4-d423-402d-9a1a-bd6d7b46b44f
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN2akNDQW1TZ0F3SUJBZ0lRUHpDT3RaZjF1dk1VcmUwTnhmd0lMREFLQmdncWhrak9QUVFEQWpCT01SUXcKRWdZRFZRUUtFd3RyYm1GMGFYWmxMbVJsZGpFMk1EUUdBMVVFQXhNdGRHVnJkRzl1TFhCcGNHVnNhVzVsY3kxMwpaV0pvYjI5ckxuUmxhM1J2Ymkxd2FYQmxiR2x1WlhNdWMzWmpNQjRYRFRJeE1USXhOakUzTWpjeE9Gb1hEVEl4Ck1USXlNekUzTWpjeE9Gb3dUakVVTUJJR0ExVUVDaE1MYTI1aGRHbDJaUzVrWlhZeE5qQTBCZ05WQkFNVExYUmwKYTNSdmJpMXdhWEJsYkdsdVpYTXRkMlZpYUc5dmF5NTBaV3QwYjI0dGNHbHdaV3hwYm1WekxuTjJZekJaTUJNRwpCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkpiOGV4WnJ6ZUFNeFJvRzhvV2RlWVRSb0g1K0l6L2NITFpNClJ0M0d4MlE3VlU0ZXpKc01sZCtwQ2tiQWhlb09naW5pV2daWU51Q3lGTThNdG51Y3YrYWpnZ0VpTUlJQkhqQU8KQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUE4RwpBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZMRENaRHU1V08xaisyY0FYaE1KRWJmdENMd3pNSUc4CkJnTlZIUkVFZ2JRd2diR0NHSFJsYTNSdmJpMXdhWEJsYkdsdVpYTXRkMlZpYUc5dmE0SXBkR1ZyZEc5dUxYQnAKY0dWc2FXNWxjeTEzWldKb2IyOXJMblJsYTNSdmJpMXdhWEJsYkdsdVpYT0NMWFJsYTNSdmJpMXdhWEJsYkdsdQpaWE10ZDJWaWFHOXZheTUwWld0MGIyNHRjR2x3Wld4cGJtVnpMbk4yWTRJN2RHVnJkRzl1TFhCcGNHVnNhVzVsCmN5MTNaV0pvYjI5ckxuUmxhM1J2Ymkxd2FYQmxiR2x1WlhNdWMzWmpMbU5zZFhOMFpYSXViRzlqWVd3d0NnWUkKS29aSXpqMEVBd0lEU0FBd1JRSWhBUGsyUXppMFowM2RJaFlXS2VNSTE5c1RkVzRNb2t1UU82dDFCZjZnYm5HeQpBaUFmWlN4VytuOGtvdE9SMjRJWVlDZEdhSi9wMTRRdWg5Vld2QUllaDZnb3FBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          service:
            name: tekton-pipelines-webhook
            namespace: tekton-pipelines
            path: /resource-conversion
            port: 443
        conversionReviewVersions:
        - v1beta1
    group: tekton.dev
    names:
      categories:
      - tekton
      - tekton-pipelines
      kind: Task
      listKind: TaskList
      plural: tasks
      singular: task
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: false
      subresources:
        status: {}
    - name: v1beta1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - tekton
      - tekton-pipelines
      kind: Task
      listKind: TaskList
      plural: tasks
      singular: task
    conditions:
    - lastTransitionTime: "2021-12-16T17:27:05Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-16T17:27:07Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.4.1
    creationTimestamp: "2021-12-07T18:20:13Z"
    generation: 1
    name: tlsoptions.traefik.containo.us
    resourceVersion: "2639743"
    uid: 35f24c3d-da0b-40f9-9234-974445822a33
  spec:
    conversion:
      strategy: None
    group: traefik.containo.us
    names:
      kind: TLSOption
      listKind: TLSOptionList
      plural: tlsoptions
      singular: tlsoption
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TLSOption is a specification for a TLSOption resource.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: TLSOptionSpec configures TLS for an entry point.
              properties:
                alpnProtocols:
                  items:
                    type: string
                  type: array
                cipherSuites:
                  items:
                    type: string
                  type: array
                clientAuth:
                  description: ClientAuth defines the parameters of the client authentication
                    part of the TLS connection, if any.
                  properties:
                    clientAuthType:
                      description: ClientAuthType defines the client authentication
                        type to apply.
                      enum:
                      - NoClientCert
                      - RequestClientCert
                      - RequireAnyClientCert
                      - VerifyClientCertIfGiven
                      - RequireAndVerifyClientCert
                      type: string
                    secretNames:
                      description: SecretName is the name of the referenced Kubernetes
                        Secret to specify the certificate details.
                      items:
                        type: string
                      type: array
                  type: object
                curvePreferences:
                  items:
                    type: string
                  type: array
                maxVersion:
                  type: string
                minVersion:
                  type: string
                preferServerCipherSuites:
                  type: boolean
                sniStrict:
                  type: boolean
              type: object
          required:
          - metadata
          - spec
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: TLSOption
      listKind: TLSOptionList
      plural: tlsoptions
      singular: tlsoption
    conditions:
    - lastTransitionTime: "2021-12-07T18:20:14Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-07T18:20:14Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.4.1
    creationTimestamp: "2021-12-07T18:20:14Z"
    generation: 1
    name: tlsstores.traefik.containo.us
    resourceVersion: "2639747"
    uid: f3bbe221-2fe3-41fb-b27e-b124c1dca166
  spec:
    conversion:
      strategy: None
    group: traefik.containo.us
    names:
      kind: TLSStore
      listKind: TLSStoreList
      plural: tlsstores
      singular: tlsstore
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TLSStore is a specification for a TLSStore resource.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: TLSStoreSpec configures a TLSStore resource.
              properties:
                defaultCertificate:
                  description: DefaultCertificate holds a secret name for the TLSOption
                    resource.
                  properties:
                    secretName:
                      description: SecretName is the name of the referenced Kubernetes
                        Secret to specify the certificate details.
                      type: string
                  required:
                  - secretName
                  type: object
              required:
              - defaultCertificate
              type: object
          required:
          - metadata
          - spec
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: TLSStore
      listKind: TLSStoreList
      plural: tlsstores
      singular: tlsstore
    conditions:
    - lastTransitionTime: "2021-12-07T18:20:14Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-07T18:20:14Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.4.1
    creationTimestamp: "2021-12-07T18:20:14Z"
    generation: 1
    name: traefikservices.traefik.containo.us
    resourceVersion: "2639749"
    uid: 95b6dbed-58b0-4f73-a4b2-1700b7a61baa
  spec:
    conversion:
      strategy: None
    group: traefik.containo.us
    names:
      kind: TraefikService
      listKind: TraefikServiceList
      plural: traefikservices
      singular: traefikservice
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: TraefikService is the specification for a service (that an
            IngressRoute refers to) that is usually not a terminal service (i.e. not
            a pod of servers), as opposed to a Kubernetes Service. That is to say,
            it usually refers to other (children) services, which themselves can be
            TraefikServices or Services.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ServiceSpec defines whether a TraefikService is a load-balancer
                of services or a mirroring service.
              properties:
                mirroring:
                  description: Mirroring defines a mirroring service, which is composed
                    of a main load-balancer, and a list of mirrors.
                  properties:
                    kind:
                      enum:
                      - Service
                      - TraefikService
                      type: string
                    maxBodySize:
                      format: int64
                      type: integer
                    mirrors:
                      items:
                        description: MirrorService defines one of the mirrors of a
                          Mirroring service.
                        properties:
                          kind:
                            enum:
                            - Service
                            - TraefikService
                            type: string
                          name:
                            description: Name is a reference to a Kubernetes Service
                              object (for a load-balancer of servers), or to a TraefikService
                              object (service load-balancer, mirroring, etc). The
                              differentiation between the two is specified in the
                              Kind field.
                            type: string
                          namespace:
                            type: string
                          passHostHeader:
                            type: boolean
                          percent:
                            type: integer
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            x-kubernetes-int-or-string: true
                          responseForwarding:
                            description: ResponseForwarding holds configuration for
                              the forward of the response.
                            properties:
                              flushInterval:
                                type: string
                            type: object
                          scheme:
                            type: string
                          serversTransport:
                            type: string
                          sticky:
                            description: Sticky holds the sticky configuration.
                            properties:
                              cookie:
                                description: Cookie holds the sticky configuration
                                  based on cookie.
                                properties:
                                  httpOnly:
                                    type: boolean
                                  name:
                                    type: string
                                  sameSite:
                                    type: string
                                  secure:
                                    type: boolean
                                type: object
                            type: object
                          strategy:
                            type: string
                          weight:
                            description: Weight should only be specified when Name
                              references a TraefikService object (and to be precise,
                              one that embeds a Weighted Round Robin).
                            type: integer
                        required:
                        - name
                        type: object
                      type: array
                    name:
                      description: Name is a reference to a Kubernetes Service object
                        (for a load-balancer of servers), or to a TraefikService object
                        (service load-balancer, mirroring, etc). The differentiation
                        between the two is specified in the Kind field.
                      type: string
                    namespace:
                      type: string
                    passHostHeader:
                      type: boolean
                    port:
                      anyOf:
                      - type: integer
                      - type: string
                      x-kubernetes-int-or-string: true
                    responseForwarding:
                      description: ResponseForwarding holds configuration for the
                        forward of the response.
                      properties:
                        flushInterval:
                          type: string
                      type: object
                    scheme:
                      type: string
                    serversTransport:
                      type: string
                    sticky:
                      description: Sticky holds the sticky configuration.
                      properties:
                        cookie:
                          description: Cookie holds the sticky configuration based
                            on cookie.
                          properties:
                            httpOnly:
                              type: boolean
                            name:
                              type: string
                            sameSite:
                              type: string
                            secure:
                              type: boolean
                          type: object
                      type: object
                    strategy:
                      type: string
                    weight:
                      description: Weight should only be specified when Name references
                        a TraefikService object (and to be precise, one that embeds
                        a Weighted Round Robin).
                      type: integer
                  required:
                  - name
                  type: object
                weighted:
                  description: WeightedRoundRobin defines a load-balancer of services.
                  properties:
                    services:
                      items:
                        description: Service defines an upstream to proxy traffic.
                        properties:
                          kind:
                            enum:
                            - Service
                            - TraefikService
                            type: string
                          name:
                            description: Name is a reference to a Kubernetes Service
                              object (for a load-balancer of servers), or to a TraefikService
                              object (service load-balancer, mirroring, etc). The
                              differentiation between the two is specified in the
                              Kind field.
                            type: string
                          namespace:
                            type: string
                          passHostHeader:
                            type: boolean
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            x-kubernetes-int-or-string: true
                          responseForwarding:
                            description: ResponseForwarding holds configuration for
                              the forward of the response.
                            properties:
                              flushInterval:
                                type: string
                            type: object
                          scheme:
                            type: string
                          serversTransport:
                            type: string
                          sticky:
                            description: Sticky holds the sticky configuration.
                            properties:
                              cookie:
                                description: Cookie holds the sticky configuration
                                  based on cookie.
                                properties:
                                  httpOnly:
                                    type: boolean
                                  name:
                                    type: string
                                  sameSite:
                                    type: string
                                  secure:
                                    type: boolean
                                type: object
                            type: object
                          strategy:
                            type: string
                          weight:
                            description: Weight should only be specified when Name
                              references a TraefikService object (and to be precise,
                              one that embeds a Weighted Round Robin).
                            type: integer
                        required:
                        - name
                        type: object
                      type: array
                    sticky:
                      description: Sticky holds the sticky configuration.
                      properties:
                        cookie:
                          description: Cookie holds the sticky configuration based
                            on cookie.
                          properties:
                            httpOnly:
                              type: boolean
                            name:
                              type: string
                            sameSite:
                              type: string
                            secure:
                              type: boolean
                          type: object
                      type: object
                  type: object
              type: object
          required:
          - metadata
          - spec
          type: object
      served: true
      storage: true
  status:
    acceptedNames:
      kind: TraefikService
      listKind: TraefikServiceList
      plural: traefikservices
      singular: traefikservice
    conditions:
    - lastTransitionTime: "2021-12-07T18:20:14Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-07T18:20:14Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2021-12-16T17:27:05Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-triggers
      kustomize.toolkit.fluxcd.io/name: tekton
      kustomize.toolkit.fluxcd.io/namespace: flux-system
      triggers.tekton.dev/release: v0.17.1
      version: v0.17.1
    name: triggerbindings.triggers.tekton.dev
    resourceVersion: "10150308"
    uid: f9c70568-e531-4fc2-a0ff-b1c227167e65
  spec:
    conversion:
      strategy: None
    group: triggers.tekton.dev
    names:
      categories:
      - tekton
      - tekton-triggers
      kind: TriggerBinding
      listKind: TriggerBindingList
      plural: triggerbindings
      shortNames:
      - tb
      singular: triggerbinding
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: false
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - tekton
      - tekton-triggers
      kind: TriggerBinding
      listKind: TriggerBindingList
      plural: triggerbindings
      shortNames:
      - tb
      singular: triggerbinding
    conditions:
    - lastTransitionTime: "2021-12-16T17:27:05Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-16T17:27:07Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2021-12-16T17:27:06Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-triggers
      kustomize.toolkit.fluxcd.io/name: tekton
      kustomize.toolkit.fluxcd.io/namespace: flux-system
      triggers.tekton.dev/release: v0.17.1
      version: v0.17.1
    name: triggers.triggers.tekton.dev
    resourceVersion: "10150309"
    uid: e095c5ce-7d8f-43b3-8fa5-1ce499d04a97
  spec:
    conversion:
      strategy: None
    group: triggers.tekton.dev
    names:
      categories:
      - tekton
      - tekton-triggers
      kind: Trigger
      listKind: TriggerList
      plural: triggers
      shortNames:
      - tri
      singular: trigger
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: false
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - tekton
      - tekton-triggers
      kind: Trigger
      listKind: TriggerList
      plural: triggers
      shortNames:
      - tri
      singular: trigger
    conditions:
    - lastTransitionTime: "2021-12-16T17:27:06Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-16T17:27:07Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2021-12-16T17:27:06Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-triggers
      kustomize.toolkit.fluxcd.io/name: tekton
      kustomize.toolkit.fluxcd.io/namespace: flux-system
      triggers.tekton.dev/release: v0.17.1
      version: v0.17.1
    name: triggertemplates.triggers.tekton.dev
    resourceVersion: "10150310"
    uid: ae6238a2-6ba1-40fd-aba7-d35976736895
  spec:
    conversion:
      strategy: None
    group: triggers.tekton.dev
    names:
      categories:
      - tekton
      - tekton-triggers
      kind: TriggerTemplate
      listKind: TriggerTemplateList
      plural: triggertemplates
      shortNames:
      - tt
      singular: triggertemplate
    scope: Namespaced
    versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: false
      subresources:
        status: {}
  status:
    acceptedNames:
      categories:
      - tekton
      - tekton-triggers
      kind: TriggerTemplate
      listKind: TriggerTemplateList
      plural: triggertemplates
      shortNames:
      - tt
      singular: triggertemplate
    conditions:
    - lastTransitionTime: "2021-12-16T17:27:06Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-16T17:27:07Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      api-approved.kubernetes.io: https://github.com/kubernetes-csi/external-snapshotter/pull/260
      controller-gen.kubebuilder.io/version: v0.2.5
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1beta1","kind":"CustomResourceDefinition","metadata":{"annotations":{"api-approved.kubernetes.io":"https://github.com/kubernetes-csi/external-snapshotter/pull/260","controller-gen.kubebuilder.io/version":"v0.2.5"},"creationTimestamp":null,"name":"volumesnapshotclasses.snapshot.storage.k8s.io"},"spec":{"additionalPrinterColumns":[{"JSONPath":".driver","name":"Driver","type":"string"},{"JSONPath":".deletionPolicy","description":"Determines whether a VolumeSnapshotContent created through the VolumeSnapshotClass should be deleted when its bound VolumeSnapshot is deleted.","name":"DeletionPolicy","type":"string"},{"JSONPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"group":"snapshot.storage.k8s.io","names":{"kind":"VolumeSnapshotClass","listKind":"VolumeSnapshotClassList","plural":"volumesnapshotclasses","singular":"volumesnapshotclass"},"preserveUnknownFields":false,"scope":"Cluster","subresources":{},"validation":{"openAPIV3Schema":{"description":"VolumeSnapshotClass specifies parameters that a underlying storage system uses when creating a volume snapshot. A specific VolumeSnapshotClass is used by specifying its name in a VolumeSnapshot object. VolumeSnapshotClasses are non-namespaced","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"deletionPolicy":{"description":"deletionPolicy determines whether a VolumeSnapshotContent created through the VolumeSnapshotClass should be deleted when its bound VolumeSnapshot is deleted. Supported values are \"Retain\" and \"Delete\". \"Retain\" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are kept. \"Delete\" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are deleted. Required.","enum":["Delete","Retain"],"type":"string"},"driver":{"description":"driver is the name of the storage driver that handles this VolumeSnapshotClass. Required.","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"parameters":{"additionalProperties":{"type":"string"},"description":"parameters is a key-value map with storage driver specific parameters for creating snapshots. These values are opaque to Kubernetes.","type":"object"}},"required":["deletionPolicy","driver"],"type":"object"}},"version":"v1beta1","versions":[{"name":"v1beta1","served":true,"storage":true}]},"status":{"acceptedNames":{"kind":"","plural":""},"conditions":[],"storedVersions":[]}}
    creationTimestamp: "2021-12-04T16:55:55Z"
    generation: 1
    name: volumesnapshotclasses.snapshot.storage.k8s.io
    resourceVersion: "217"
    uid: e27a37fe-3360-4b00-9d9a-4e72700678e9
  spec:
    conversion:
      strategy: None
    group: snapshot.storage.k8s.io
    names:
      kind: VolumeSnapshotClass
      listKind: VolumeSnapshotClassList
      plural: volumesnapshotclasses
      singular: volumesnapshotclass
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - jsonPath: .driver
        name: Driver
        type: string
      - description: Determines whether a VolumeSnapshotContent created through the
          VolumeSnapshotClass should be deleted when its bound VolumeSnapshot is deleted.
        jsonPath: .deletionPolicy
        name: DeletionPolicy
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: VolumeSnapshotClass specifies parameters that a underlying
            storage system uses when creating a volume snapshot. A specific VolumeSnapshotClass
            is used by specifying its name in a VolumeSnapshot object. VolumeSnapshotClasses
            are non-namespaced
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            deletionPolicy:
              description: deletionPolicy determines whether a VolumeSnapshotContent
                created through the VolumeSnapshotClass should be deleted when its
                bound VolumeSnapshot is deleted. Supported values are "Retain" and
                "Delete". "Retain" means that the VolumeSnapshotContent and its physical
                snapshot on underlying storage system are kept. "Delete" means that
                the VolumeSnapshotContent and its physical snapshot on underlying
                storage system are deleted. Required.
              enum:
              - Delete
              - Retain
              type: string
            driver:
              description: driver is the name of the storage driver that handles this
                VolumeSnapshotClass. Required.
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            parameters:
              additionalProperties:
                type: string
              description: parameters is a key-value map with storage driver specific
                parameters for creating snapshots. These values are opaque to Kubernetes.
              type: object
          required:
          - deletionPolicy
          - driver
          type: object
      served: true
      storage: true
      subresources: {}
  status:
    acceptedNames:
      kind: VolumeSnapshotClass
      listKind: VolumeSnapshotClassList
      plural: volumesnapshotclasses
      singular: volumesnapshotclass
    conditions:
    - lastTransitionTime: "2021-12-04T16:55:55Z"
      message: approved in https://github.com/kubernetes-csi/external-snapshotter/pull/260
      reason: ApprovedAnnotation
      status: "True"
      type: KubernetesAPIApprovalPolicyConformant
    - lastTransitionTime: "2021-12-04T16:55:55Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-04T16:55:55Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      api-approved.kubernetes.io: https://github.com/kubernetes-csi/external-snapshotter/pull/260
      controller-gen.kubebuilder.io/version: v0.2.5
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1beta1","kind":"CustomResourceDefinition","metadata":{"annotations":{"api-approved.kubernetes.io":"https://github.com/kubernetes-csi/external-snapshotter/pull/260","controller-gen.kubebuilder.io/version":"v0.2.5"},"creationTimestamp":null,"name":"volumesnapshotcontents.snapshot.storage.k8s.io"},"spec":{"additionalPrinterColumns":[{"JSONPath":".status.readyToUse","description":"Indicates if a snapshot is ready to be used to restore a volume.","name":"ReadyToUse","type":"boolean"},{"JSONPath":".status.restoreSize","description":"Represents the complete size of the snapshot in bytes","name":"RestoreSize","type":"integer"},{"JSONPath":".spec.deletionPolicy","description":"Determines whether this VolumeSnapshotContent and its physical snapshot on the underlying storage system should be deleted when its bound VolumeSnapshot is deleted.","name":"DeletionPolicy","type":"string"},{"JSONPath":".spec.driver","description":"Name of the CSI driver used to create the physical snapshot on the underlying storage system.","name":"Driver","type":"string"},{"JSONPath":".spec.volumeSnapshotClassName","description":"Name of the VolumeSnapshotClass to which this snapshot belongs.","name":"VolumeSnapshotClass","type":"string"},{"JSONPath":".spec.volumeSnapshotRef.name","description":"Name of the VolumeSnapshot object to which this VolumeSnapshotContent object is bound.","name":"VolumeSnapshot","type":"string"},{"JSONPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"group":"snapshot.storage.k8s.io","names":{"kind":"VolumeSnapshotContent","listKind":"VolumeSnapshotContentList","plural":"volumesnapshotcontents","singular":"volumesnapshotcontent"},"preserveUnknownFields":false,"scope":"Cluster","subresources":{"status":{}},"validation":{"openAPIV3Schema":{"description":"VolumeSnapshotContent represents the actual \"on-disk\" snapshot object in the underlying storage system","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"spec":{"description":"spec defines properties of a VolumeSnapshotContent created by the underlying storage system. Required.","properties":{"deletionPolicy":{"description":"deletionPolicy determines whether this VolumeSnapshotContent and its physical snapshot on the underlying storage system should be deleted when its bound VolumeSnapshot is deleted. Supported values are \"Retain\" and \"Delete\". \"Retain\" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are kept. \"Delete\" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are deleted. In dynamic snapshot creation case, this field will be filled in with the \"DeletionPolicy\" field defined in the VolumeSnapshotClass the VolumeSnapshot refers to. For pre-existing snapshots, users MUST specify this field when creating the VolumeSnapshotContent object. Required.","enum":["Delete","Retain"],"type":"string"},"driver":{"description":"driver is the name of the CSI driver used to create the physical snapshot on the underlying storage system. This MUST be the same as the name returned by the CSI GetPluginName() call for that driver. Required.","type":"string"},"source":{"description":"source specifies from where a snapshot will be created. This field is immutable after creation. Required.","properties":{"snapshotHandle":{"description":"snapshotHandle specifies the CSI \"snapshot_id\" of a pre-existing snapshot on the underlying storage system. This field is immutable.","type":"string"},"volumeHandle":{"description":"volumeHandle specifies the CSI \"volume_id\" of the volume from which a snapshot should be dynamically taken from. This field is immutable.","type":"string"}},"type":"object"},"volumeSnapshotClassName":{"description":"name of the VolumeSnapshotClass to which this snapshot belongs.","type":"string"},"volumeSnapshotRef":{"description":"volumeSnapshotRef specifies the VolumeSnapshot object to which this VolumeSnapshotContent object is bound. VolumeSnapshot.Spec.VolumeSnapshotContentName field must reference to this VolumeSnapshotContent's name for the bidirectional binding to be valid. For a pre-existing VolumeSnapshotContent object, name and namespace of the VolumeSnapshot object MUST be provided for binding to happen. This field is immutable after creation. Required.","properties":{"apiVersion":{"description":"API version of the referent.","type":"string"},"fieldPath":{"description":"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.","type":"string"},"kind":{"description":"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"namespace":{"description":"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/","type":"string"},"resourceVersion":{"description":"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency","type":"string"},"uid":{"description":"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids","type":"string"}},"type":"object"}},"required":["deletionPolicy","driver","source","volumeSnapshotRef"],"type":"object"},"status":{"description":"status represents the current information of a snapshot.","properties":{"creationTime":{"description":"creationTime is the timestamp when the point-in-time snapshot is taken by the underlying storage system. In dynamic snapshot creation case, this field will be filled in with the \"creation_time\" value returned from CSI \"CreateSnapshotRequest\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"creation_time\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. If not specified, it indicates the creation time is unknown. The format of this field is a Unix nanoseconds time encoded as an int64. On Unix, the command `date +%s%N` returns the current time in nanoseconds since 1970-01-01 00:00:00 UTC.","format":"int64","type":"integer"},"error":{"description":"error is the latest observed error during snapshot creation, if any.","properties":{"message":{"description":"message is a string detailing the encountered error during snapshot creation if specified. NOTE: message may be logged, and it should not contain sensitive information.","type":"string"},"time":{"description":"time is the timestamp when the error was encountered.","format":"date-time","type":"string"}},"type":"object"},"readyToUse":{"description":"readyToUse indicates if a snapshot is ready to be used to restore a volume. In dynamic snapshot creation case, this field will be filled in with the \"ready_to_use\" value returned from CSI \"CreateSnapshotRequest\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"ready_to_use\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it, otherwise, this field will be set to \"True\". If not specified, it means the readiness of a snapshot is unknown.","type":"boolean"},"restoreSize":{"description":"restoreSize represents the complete size of the snapshot in bytes. In dynamic snapshot creation case, this field will be filled in with the \"size_bytes\" value returned from CSI \"CreateSnapshotRequest\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"size_bytes\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. When restoring a volume from this snapshot, the size of the volume MUST NOT be smaller than the restoreSize if it is specified, otherwise the restoration will fail. If not specified, it indicates that the size is unknown.","format":"int64","minimum":0,"type":"integer"},"snapshotHandle":{"description":"snapshotHandle is the CSI \"snapshot_id\" of a snapshot on the underlying storage system. If not specified, it indicates that dynamic snapshot creation has either failed or it is still in progress.","type":"string"}},"type":"object"}},"required":["spec"],"type":"object"}},"version":"v1beta1","versions":[{"name":"v1beta1","served":true,"storage":true}]},"status":{"acceptedNames":{"kind":"","plural":""},"conditions":[],"storedVersions":[]}}
    creationTimestamp: "2021-12-04T16:55:55Z"
    generation: 1
    name: volumesnapshotcontents.snapshot.storage.k8s.io
    resourceVersion: "222"
    uid: e83dfbb5-ec97-4cb9-a9f5-d8ecd33cbf92
  spec:
    conversion:
      strategy: None
    group: snapshot.storage.k8s.io
    names:
      kind: VolumeSnapshotContent
      listKind: VolumeSnapshotContentList
      plural: volumesnapshotcontents
      singular: volumesnapshotcontent
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - description: Indicates if a snapshot is ready to be used to restore a volume.
        jsonPath: .status.readyToUse
        name: ReadyToUse
        type: boolean
      - description: Represents the complete size of the snapshot in bytes
        jsonPath: .status.restoreSize
        name: RestoreSize
        type: integer
      - description: Determines whether this VolumeSnapshotContent and its physical
          snapshot on the underlying storage system should be deleted when its bound
          VolumeSnapshot is deleted.
        jsonPath: .spec.deletionPolicy
        name: DeletionPolicy
        type: string
      - description: Name of the CSI driver used to create the physical snapshot on
          the underlying storage system.
        jsonPath: .spec.driver
        name: Driver
        type: string
      - description: Name of the VolumeSnapshotClass to which this snapshot belongs.
        jsonPath: .spec.volumeSnapshotClassName
        name: VolumeSnapshotClass
        type: string
      - description: Name of the VolumeSnapshot object to which this VolumeSnapshotContent
          object is bound.
        jsonPath: .spec.volumeSnapshotRef.name
        name: VolumeSnapshot
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: VolumeSnapshotContent represents the actual "on-disk" snapshot
            object in the underlying storage system
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            spec:
              description: spec defines properties of a VolumeSnapshotContent created
                by the underlying storage system. Required.
              properties:
                deletionPolicy:
                  description: deletionPolicy determines whether this VolumeSnapshotContent
                    and its physical snapshot on the underlying storage system should
                    be deleted when its bound VolumeSnapshot is deleted. Supported
                    values are "Retain" and "Delete". "Retain" means that the VolumeSnapshotContent
                    and its physical snapshot on underlying storage system are kept.
                    "Delete" means that the VolumeSnapshotContent and its physical
                    snapshot on underlying storage system are deleted. In dynamic
                    snapshot creation case, this field will be filled in with the
                    "DeletionPolicy" field defined in the VolumeSnapshotClass the
                    VolumeSnapshot refers to. For pre-existing snapshots, users MUST
                    specify this field when creating the VolumeSnapshotContent object.
                    Required.
                  enum:
                  - Delete
                  - Retain
                  type: string
                driver:
                  description: driver is the name of the CSI driver used to create
                    the physical snapshot on the underlying storage system. This MUST
                    be the same as the name returned by the CSI GetPluginName() call
                    for that driver. Required.
                  type: string
                source:
                  description: source specifies from where a snapshot will be created.
                    This field is immutable after creation. Required.
                  properties:
                    snapshotHandle:
                      description: snapshotHandle specifies the CSI "snapshot_id"
                        of a pre-existing snapshot on the underlying storage system.
                        This field is immutable.
                      type: string
                    volumeHandle:
                      description: volumeHandle specifies the CSI "volume_id" of the
                        volume from which a snapshot should be dynamically taken from.
                        This field is immutable.
                      type: string
                  type: object
                volumeSnapshotClassName:
                  description: name of the VolumeSnapshotClass to which this snapshot
                    belongs.
                  type: string
                volumeSnapshotRef:
                  description: volumeSnapshotRef specifies the VolumeSnapshot object
                    to which this VolumeSnapshotContent object is bound. VolumeSnapshot.Spec.VolumeSnapshotContentName
                    field must reference to this VolumeSnapshotContent's name for
                    the bidirectional binding to be valid. For a pre-existing VolumeSnapshotContent
                    object, name and namespace of the VolumeSnapshot object MUST be
                    provided for binding to happen. This field is immutable after
                    creation. Required.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
              required:
              - deletionPolicy
              - driver
              - source
              - volumeSnapshotRef
              type: object
            status:
              description: status represents the current information of a snapshot.
              properties:
                creationTime:
                  description: creationTime is the timestamp when the point-in-time
                    snapshot is taken by the underlying storage system. In dynamic
                    snapshot creation case, this field will be filled in with the
                    "creation_time" value returned from CSI "CreateSnapshotRequest"
                    gRPC call. For a pre-existing snapshot, this field will be filled
                    with the "creation_time" value returned from the CSI "ListSnapshots"
                    gRPC call if the driver supports it. If not specified, it indicates
                    the creation time is unknown. The format of this field is a Unix
                    nanoseconds time encoded as an int64. On Unix, the command `date
                    +%s%N` returns the current time in nanoseconds since 1970-01-01
                    00:00:00 UTC.
                  format: int64
                  type: integer
                error:
                  description: error is the latest observed error during snapshot
                    creation, if any.
                  properties:
                    message:
                      description: 'message is a string detailing the encountered
                        error during snapshot creation if specified. NOTE: message
                        may be logged, and it should not contain sensitive information.'
                      type: string
                    time:
                      description: time is the timestamp when the error was encountered.
                      format: date-time
                      type: string
                  type: object
                readyToUse:
                  description: readyToUse indicates if a snapshot is ready to be used
                    to restore a volume. In dynamic snapshot creation case, this field
                    will be filled in with the "ready_to_use" value returned from
                    CSI "CreateSnapshotRequest" gRPC call. For a pre-existing snapshot,
                    this field will be filled with the "ready_to_use" value returned
                    from the CSI "ListSnapshots" gRPC call if the driver supports
                    it, otherwise, this field will be set to "True". If not specified,
                    it means the readiness of a snapshot is unknown.
                  type: boolean
                restoreSize:
                  description: restoreSize represents the complete size of the snapshot
                    in bytes. In dynamic snapshot creation case, this field will be
                    filled in with the "size_bytes" value returned from CSI "CreateSnapshotRequest"
                    gRPC call. For a pre-existing snapshot, this field will be filled
                    with the "size_bytes" value returned from the CSI "ListSnapshots"
                    gRPC call if the driver supports it. When restoring a volume from
                    this snapshot, the size of the volume MUST NOT be smaller than
                    the restoreSize if it is specified, otherwise the restoration
                    will fail. If not specified, it indicates that the size is unknown.
                  format: int64
                  minimum: 0
                  type: integer
                snapshotHandle:
                  description: snapshotHandle is the CSI "snapshot_id" of a snapshot
                    on the underlying storage system. If not specified, it indicates
                    that dynamic snapshot creation has either failed or it is still
                    in progress.
                  type: string
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: VolumeSnapshotContent
      listKind: VolumeSnapshotContentList
      plural: volumesnapshotcontents
      singular: volumesnapshotcontent
    conditions:
    - lastTransitionTime: "2021-12-04T16:55:55Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-04T16:55:56Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    - lastTransitionTime: "2021-12-04T16:55:56Z"
      message: approved in https://github.com/kubernetes-csi/external-snapshotter/pull/260
      reason: ApprovedAnnotation
      status: "True"
      type: KubernetesAPIApprovalPolicyConformant
    storedVersions:
    - v1beta1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      api-approved.kubernetes.io: https://github.com/kubernetes-csi/external-snapshotter/pull/260
      controller-gen.kubebuilder.io/version: v0.2.5
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1beta1","kind":"CustomResourceDefinition","metadata":{"annotations":{"api-approved.kubernetes.io":"https://github.com/kubernetes-csi/external-snapshotter/pull/260","controller-gen.kubebuilder.io/version":"v0.2.5"},"creationTimestamp":null,"name":"volumesnapshots.snapshot.storage.k8s.io"},"spec":{"additionalPrinterColumns":[{"JSONPath":".status.readyToUse","description":"Indicates if a snapshot is ready to be used to restore a volume.","name":"ReadyToUse","type":"boolean"},{"JSONPath":".spec.source.persistentVolumeClaimName","description":"Name of the source PVC from where a dynamically taken snapshot will be created.","name":"SourcePVC","type":"string"},{"JSONPath":".spec.source.volumeSnapshotContentName","description":"Name of the VolumeSnapshotContent which represents a pre-provisioned snapshot.","name":"SourceSnapshotContent","type":"string"},{"JSONPath":".status.restoreSize","description":"Represents the complete size of the snapshot.","name":"RestoreSize","type":"string"},{"JSONPath":".spec.volumeSnapshotClassName","description":"The name of the VolumeSnapshotClass requested by the VolumeSnapshot.","name":"SnapshotClass","type":"string"},{"JSONPath":".status.boundVolumeSnapshotContentName","description":"The name of the VolumeSnapshotContent to which this VolumeSnapshot is bound.","name":"SnapshotContent","type":"string"},{"JSONPath":".status.creationTime","description":"Timestamp when the point-in-time snapshot is taken by the underlying storage system.","name":"CreationTime","type":"date"},{"JSONPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"group":"snapshot.storage.k8s.io","names":{"kind":"VolumeSnapshot","listKind":"VolumeSnapshotList","plural":"volumesnapshots","singular":"volumesnapshot"},"preserveUnknownFields":false,"scope":"Namespaced","subresources":{"status":{}},"validation":{"openAPIV3Schema":{"description":"VolumeSnapshot is a user's request for either creating a point-in-time snapshot of a persistent volume, or binding to a pre-existing snapshot.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"spec":{"description":"spec defines the desired characteristics of a snapshot requested by a user. More info: https://kubernetes.io/docs/concepts/storage/volume-snapshots#volumesnapshots Required.","properties":{"source":{"description":"source specifies where a snapshot will be created from. This field is immutable after creation. Required.","properties":{"persistentVolumeClaimName":{"description":"persistentVolumeClaimName specifies the name of the PersistentVolumeClaim object in the same namespace as the VolumeSnapshot object where the snapshot should be dynamically taken from. This field is immutable.","type":"string"},"volumeSnapshotContentName":{"description":"volumeSnapshotContentName specifies the name of a pre-existing VolumeSnapshotContent object. This field is immutable.","type":"string"}},"type":"object"},"volumeSnapshotClassName":{"description":"volumeSnapshotClassName is the name of the VolumeSnapshotClass requested by the VolumeSnapshot. If not specified, the default snapshot class will be used if one exists. If not specified, and there is no default snapshot class, dynamic snapshot creation will fail. Empty string is not allowed for this field. TODO(xiangqian): a webhook validation on empty string. More info: https://kubernetes.io/docs/concepts/storage/volume-snapshot-classes","type":"string"}},"required":["source"],"type":"object"},"status":{"description":"status represents the current information of a snapshot. NOTE: status can be modified by sources other than system controllers, and must not be depended upon for accuracy. Controllers should only use information from the VolumeSnapshotContent object after verifying that the binding is accurate and complete.","properties":{"boundVolumeSnapshotContentName":{"description":"boundVolumeSnapshotContentName represents the name of the VolumeSnapshotContent object to which the VolumeSnapshot object is bound. If not specified, it indicates that the VolumeSnapshot object has not been successfully bound to a VolumeSnapshotContent object yet. NOTE: Specified boundVolumeSnapshotContentName alone does not mean binding       is valid. Controllers MUST always verify bidirectional binding between       VolumeSnapshot and VolumeSnapshotContent to avoid possible security issues.","type":"string"},"creationTime":{"description":"creationTime is the timestamp when the point-in-time snapshot is taken by the underlying storage system. In dynamic snapshot creation case, this field will be filled in with the \"creation_time\" value returned from CSI \"CreateSnapshotRequest\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"creation_time\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. If not specified, it indicates that the creation time of the snapshot is unknown.","format":"date-time","type":"string"},"error":{"description":"error is the last observed error during snapshot creation, if any. This field could be helpful to upper level controllers(i.e., application controller) to decide whether they should continue on waiting for the snapshot to be created based on the type of error reported.","properties":{"message":{"description":"message is a string detailing the encountered error during snapshot creation if specified. NOTE: message may be logged, and it should not contain sensitive information.","type":"string"},"time":{"description":"time is the timestamp when the error was encountered.","format":"date-time","type":"string"}},"type":"object"},"readyToUse":{"description":"readyToUse indicates if a snapshot is ready to be used to restore a volume. In dynamic snapshot creation case, this field will be filled in with the \"ready_to_use\" value returned from CSI \"CreateSnapshotRequest\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"ready_to_use\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it, otherwise, this field will be set to \"True\". If not specified, it means the readiness of a snapshot is unknown.","type":"boolean"},"restoreSize":{"anyOf":[{"type":"integer"},{"type":"string"}],"description":"restoreSize represents the complete size of the snapshot in bytes. In dynamic snapshot creation case, this field will be filled in with the \"size_bytes\" value returned from CSI \"CreateSnapshotRequest\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"size_bytes\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. When restoring a volume from this snapshot, the size of the volume MUST NOT be smaller than the restoreSize if it is specified, otherwise the restoration will fail. If not specified, it indicates that the size is unknown.","pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true}},"type":"object"}},"required":["spec"],"type":"object"}},"version":"v1beta1","versions":[{"name":"v1beta1","served":true,"storage":true}]},"status":{"acceptedNames":{"kind":"","plural":""},"conditions":[],"storedVersions":[]}}
    creationTimestamp: "2021-12-04T16:55:55Z"
    generation: 1
    name: volumesnapshots.snapshot.storage.k8s.io
    resourceVersion: "224"
    uid: 03651d82-5c62-421d-9203-ab262c94f99d
  spec:
    conversion:
      strategy: None
    group: snapshot.storage.k8s.io
    names:
      kind: VolumeSnapshot
      listKind: VolumeSnapshotList
      plural: volumesnapshots
      singular: volumesnapshot
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Indicates if a snapshot is ready to be used to restore a volume.
        jsonPath: .status.readyToUse
        name: ReadyToUse
        type: boolean
      - description: Name of the source PVC from where a dynamically taken snapshot
          will be created.
        jsonPath: .spec.source.persistentVolumeClaimName
        name: SourcePVC
        type: string
      - description: Name of the VolumeSnapshotContent which represents a pre-provisioned
          snapshot.
        jsonPath: .spec.source.volumeSnapshotContentName
        name: SourceSnapshotContent
        type: string
      - description: Represents the complete size of the snapshot.
        jsonPath: .status.restoreSize
        name: RestoreSize
        type: string
      - description: The name of the VolumeSnapshotClass requested by the VolumeSnapshot.
        jsonPath: .spec.volumeSnapshotClassName
        name: SnapshotClass
        type: string
      - description: The name of the VolumeSnapshotContent to which this VolumeSnapshot
          is bound.
        jsonPath: .status.boundVolumeSnapshotContentName
        name: SnapshotContent
        type: string
      - description: Timestamp when the point-in-time snapshot is taken by the underlying
          storage system.
        jsonPath: .status.creationTime
        name: CreationTime
        type: date
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: VolumeSnapshot is a user's request for either creating a point-in-time
            snapshot of a persistent volume, or binding to a pre-existing snapshot.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            spec:
              description: 'spec defines the desired characteristics of a snapshot
                requested by a user. More info: https://kubernetes.io/docs/concepts/storage/volume-snapshots#volumesnapshots
                Required.'
              properties:
                source:
                  description: source specifies where a snapshot will be created from.
                    This field is immutable after creation. Required.
                  properties:
                    persistentVolumeClaimName:
                      description: persistentVolumeClaimName specifies the name of
                        the PersistentVolumeClaim object in the same namespace as
                        the VolumeSnapshot object where the snapshot should be dynamically
                        taken from. This field is immutable.
                      type: string
                    volumeSnapshotContentName:
                      description: volumeSnapshotContentName specifies the name of
                        a pre-existing VolumeSnapshotContent object. This field is
                        immutable.
                      type: string
                  type: object
                volumeSnapshotClassName:
                  description: 'volumeSnapshotClassName is the name of the VolumeSnapshotClass
                    requested by the VolumeSnapshot. If not specified, the default
                    snapshot class will be used if one exists. If not specified, and
                    there is no default snapshot class, dynamic snapshot creation
                    will fail. Empty string is not allowed for this field. TODO(xiangqian):
                    a webhook validation on empty string. More info: https://kubernetes.io/docs/concepts/storage/volume-snapshot-classes'
                  type: string
              required:
              - source
              type: object
            status:
              description: 'status represents the current information of a snapshot.
                NOTE: status can be modified by sources other than system controllers,
                and must not be depended upon for accuracy. Controllers should only
                use information from the VolumeSnapshotContent object after verifying
                that the binding is accurate and complete.'
              properties:
                boundVolumeSnapshotContentName:
                  description: 'boundVolumeSnapshotContentName represents the name
                    of the VolumeSnapshotContent object to which the VolumeSnapshot
                    object is bound. If not specified, it indicates that the VolumeSnapshot
                    object has not been successfully bound to a VolumeSnapshotContent
                    object yet. NOTE: Specified boundVolumeSnapshotContentName alone
                    does not mean binding       is valid. Controllers MUST always
                    verify bidirectional binding between       VolumeSnapshot and
                    VolumeSnapshotContent to avoid possible security issues.'
                  type: string
                creationTime:
                  description: creationTime is the timestamp when the point-in-time
                    snapshot is taken by the underlying storage system. In dynamic
                    snapshot creation case, this field will be filled in with the
                    "creation_time" value returned from CSI "CreateSnapshotRequest"
                    gRPC call. For a pre-existing snapshot, this field will be filled
                    with the "creation_time" value returned from the CSI "ListSnapshots"
                    gRPC call if the driver supports it. If not specified, it indicates
                    that the creation time of the snapshot is unknown.
                  format: date-time
                  type: string
                error:
                  description: error is the last observed error during snapshot creation,
                    if any. This field could be helpful to upper level controllers(i.e.,
                    application controller) to decide whether they should continue
                    on waiting for the snapshot to be created based on the type of
                    error reported.
                  properties:
                    message:
                      description: 'message is a string detailing the encountered
                        error during snapshot creation if specified. NOTE: message
                        may be logged, and it should not contain sensitive information.'
                      type: string
                    time:
                      description: time is the timestamp when the error was encountered.
                      format: date-time
                      type: string
                  type: object
                readyToUse:
                  description: readyToUse indicates if a snapshot is ready to be used
                    to restore a volume. In dynamic snapshot creation case, this field
                    will be filled in with the "ready_to_use" value returned from
                    CSI "CreateSnapshotRequest" gRPC call. For a pre-existing snapshot,
                    this field will be filled with the "ready_to_use" value returned
                    from the CSI "ListSnapshots" gRPC call if the driver supports
                    it, otherwise, this field will be set to "True". If not specified,
                    it means the readiness of a snapshot is unknown.
                  type: boolean
                restoreSize:
                  anyOf:
                  - type: integer
                  - type: string
                  description: restoreSize represents the complete size of the snapshot
                    in bytes. In dynamic snapshot creation case, this field will be
                    filled in with the "size_bytes" value returned from CSI "CreateSnapshotRequest"
                    gRPC call. For a pre-existing snapshot, this field will be filled
                    with the "size_bytes" value returned from the CSI "ListSnapshots"
                    gRPC call if the driver supports it. When restoring a volume from
                    this snapshot, the size of the volume MUST NOT be smaller than
                    the restoreSize if it is specified, otherwise the restoration
                    will fail. If not specified, it indicates that the size is unknown.
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  x-kubernetes-int-or-string: true
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: VolumeSnapshot
      listKind: VolumeSnapshotList
      plural: volumesnapshots
      singular: volumesnapshot
    conditions:
    - lastTransitionTime: "2021-12-04T16:55:56Z"
      message: approved in https://github.com/kubernetes-csi/external-snapshotter/pull/260
      reason: ApprovedAnnotation
      status: "True"
      type: KubernetesAPIApprovalPolicyConformant
    - lastTransitionTime: "2021-12-04T16:55:56Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2021-12-04T16:55:56Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
